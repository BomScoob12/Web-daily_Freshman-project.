%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 24.3
%%For: Natalie Pepper
%%CreationDate: 4/8/2022
%%BoundingBox: 0 0 3000 2000
%%HiResBoundingBox: 0 0 3000 2000
%%CropBox: 0 0 3000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.3.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.3.0 x569 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=0 RasterRes=72 GradRes=72 Text=0 Stroke=0 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.4d2f597, 2021/09/01-20:51:22        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:MetadataDate="2022-05-01T10:39:30+03:00"
   xmp:ModifyDate="2022-04-08T15:59:12+05:00"
   xmp:CreateDate="2022-04-08T15:59:12+05:00"
   xmp:CreatorTool="Adobe Illustrator 24.3 (Windows)"
   xmpMM:InstanceID="xmp.iid:c8250e5e-e3fa-e243-9c1b-cc256edfca41"
   xmpMM:DocumentID="xmp.did:4baab35d-b831-c249-abea-1c814a1b5ff0"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 10.01">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Female hands holding pen and drawing flowers in notebook</rdf:li>
     <rdf:li xml:lang="x-repair">Female hands holding pen and drawing flowers in notebook</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Female hands holding pen and drawing flowers in notebook. Girl sitting at table with cup of tea and mobile phone on it and taking notes in diary flat vector illustration. Hobby, art concept</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>concept</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>vector</rdf:li>
     <rdf:li>illustration</rdf:li>
     <rdf:li>background</rdf:li>
     <rdf:li>hand</rdf:li>
     <rdf:li>holding</rdf:li>
     <rdf:li>female</rdf:li>
     <rdf:li>pen</rdf:li>
     <rdf:li>drawing</rdf:li>
     <rdf:li>flower</rdf:li>
     <rdf:li>notebook</rdf:li>
     <rdf:li>girl</rdf:li>
     <rdf:li>sitting</rdf:li>
     <rdf:li>table</rdf:li>
     <rdf:li>cup</rdf:li>
     <rdf:li>tea</rdf:li>
     <rdf:li>mobile</rdf:li>
     <rdf:li>phone</rdf:li>
     <rdf:li>taking</rdf:li>
     <rdf:li>note</rdf:li>
     <rdf:li>diary</rdf:li>
     <rdf:li>hobby</rdf:li>
     <rdf:li>art</rdf:li>
     <rdf:li>top view</rdf:li>
     <rdf:li>woman</rdf:li>
     <rdf:li>sheet</rdf:li>
     <rdf:li>postcard</rdf:li>
     <rdf:li>open</rdf:li>
     <rdf:li>page</rdf:li>
     <rdf:li>desk</rdf:li>
     <rdf:li>postal</rdf:li>
     <rdf:li>composition</rdf:li>
     <rdf:li>message</rdf:li>
     <rdf:li>graphic</rdf:li>
     <rdf:li>textured</rdf:li>
     <rdf:li>stationery</rdf:li>
     <rdf:li>pencil</rdf:li>
     <rdf:li>cozy</rdf:li>
     <rdf:li>creativity</rdf:li>
     <rdf:li>hand drawn</rdf:li>
     <rdf:li>header</rdf:li>
     <rdf:li>love</rdf:li>
     <rdf:li>office</rdf:li>
     <rdf:li>horizontal</rdf:li>
     <rdf:li>watercolor</rdf:li>
     <rdf:li>workplace</rdf:li>
     <rdf:li>mail</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Natalie Pepper</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="172"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AWzTvSOxV2KuxVtVLGgFc&#xA;Ut8B/Otfp/pitO9N+wqPEb/qxWnCOQ/sn7sVps0RSK1Y7GnQDFVmKHYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYqidP0691Cf6vZxetNQsEBAJA8KkV69MMYk8mMpiIsqM0E0ErwzIY5Y2KO&#xA;jChDKaEEHwIwEMgbaX7L/IfrGKVuKHYqu9Mj7RC/Pr9wxTTuA7Mp+8frGK07037Cvy3/AFYrTvTb&#xA;9r4R4nbFabJr8KA06nxNO+K2sxQ7FXEk9TirsVdirsVdirsVdirsVdirsVVbW1ubudLe1ieeeQ0S&#xA;KNSzHvsBhAtBIAspxL5O1WHyyfMEhRbYSmExVPqbOYy2wpTmKdcn4R4eJqGccfB1Si4s7u3Cm4gk&#xA;hD14eopWtKdKgeOQIIbRIHko4EuxV2KuAJNBuTilH2Oh6re3aWsFuxkkqat8KqoFSzMdlAHWuCBE&#xA;jQXJEwFyD0jy3+V9isazXSi8kNCZpuSwA/8AFcQKvJ/rOQD4ZlY8N8vn+xwc2pEdj8h+k9PhbM4f&#xA;LmmWkNOYgTofSWKBB/wCr+JzI8IAbn9DifmSTtEfaf0rJtA0i9QxiZJ6D7Eiw3C/SHUn7jg8OJ5H&#xA;7inx5R+qP3hiXmn8ukmtUEMjWy2wYW5Vne1XkeRDRsXeEE7kqSvtlOTEQN/2fscnDnBPp5noefwP&#xA;X7C8xv8ATb3TrmSyvIzDcLQ0NKMOxVhsQexG2YxiRzc2EhIbIMgg0OxwJdirsVdirsVR+h6Jf61q&#xA;C2FiFNwyswDsEFFFTuclCBkaDDJkEBZez+TvJmnaXb2t09p6GpLbvBeox9Tk7FeTg1Yb8NqbUPzz&#xA;PxYgN+rqdRqDIkA7Xsw7zR+XBstNtbXRbCa/vkBkv74E02FOCITTc12UV6ZRkwUKAty8OqskyNDo&#xA;HnWYrnOxV2KuxV2Kq9hai7voLUv6fryLHz4s9ORp9lAWb5AYQLKJGhb0PXfy00230WaaxaUXllF6&#xA;lw8vMI1Bzc/YNaKKLxA/yqZkSwijXMOHDUkkXyPLl+Pxs81zGc12KuxV2KvVfy48raSyWOu6bqRk&#xA;1CIEXlo4XiOQKulB8a7H4W3r+GZmDGNiDu67VZZC4yHpPVnc82hz3S6VKY3nVxP9UIrVwfVBPatf&#xA;jy45IGXBfq7nFGHKIeJXp5X9n7GE/mJ5Ovb/AOt67e6lDbx2sRFtaFTx4pU8eZI+Nz4L12yrPiJu&#xA;RLk6XOBUIgl5LmE7J2KuxVXsWC3kJ4l/jX4QKk79hkZxJBAZ45CMgTyZ7Nf6hCWtLsFhESFiag9N&#xA;1BUGMr9mh7LscwpZJD0y6fZ7nZxw45eqHXr3+/8Abumc35pS6Vokr36q9xHRYZz+1XsVH2m+X05m&#xA;Y+0ZiNEXLvdfPsOEslxNR6j9Tx7X/wAyPMmr3LSm4aJCfhGzNT5kUH+xAzFnIyNyNu8waTHiFRFI&#xA;Gx8z+ZIn9WG9ZihrR6N+sVH0ZERbziEhyeqeQfzlnluI9N1wEs3wq53P+xJ3PyP0Htmbg1soGpbx&#xA;+10Ov7EjIGWP0y+z9jLfO3lO11TT1a0CkuOenyr0WRhy9Kv++5u3g3zzNyYx05Hl+O4ukw5jZ4vq&#xA;jz8x+sfd7njJDEFWFHTsetB1H0ZiOx5rMUOxV2KuxVMvLkljHrdpJfXMlnaq5MtzAWEiUU0KlQW6&#xA;7bZKFXuxyXwmub3KS10zXdGtI2uJxbyODa3Eh4SylVY8qMO6gndffM3LijliASXWYc88GQyABNb9&#xA;yj551q10vQn+sLc+hcBoI7i0cK6S8Tx5HkpA267++TzSEYtelxmU+l+bwHNa7l2KuxV2KuxVcjvG&#xA;6ujFXQhlYbEEbgjFU91Lzx5h1GxlsLiZPqkpFYlRVAC8OIXuAPT/ABPjlkssiKao4Yg2BukGVtrs&#xA;VdirsVel/lnqHlz07WyTSnuddLvzuTGhRVJLBjITVQEHhXwzKwSjyrdwdVGe54qi9GFrop1OW9KR&#xA;/X7NAJpq04Kyk/EK0Hwdz2zI8OHHxV6g4fjZfD4L9EjyYb+a+t/VLT9GXemx3Md6hayvi9GjdCOX&#xA;w8SeS1HRt65VqZ1sQ36LGD6gSK6PIMwnZuxV2Ksg8iWgn8xQysvIWaSXQU93jX931/4sK5OHO+5r&#xA;y7iu81+v7HuFzoWlzaYlteRLIkCf3vRwQKswbrud8zZ6eBhUhydXj1mSOQygasvlX8ytXeXVGtIy&#xA;Vgg+BFr3IDMT77gZocUXvYCo+bF9MY0dSdhQgffXJzZwTKGQxuD27/LIBsBRzqTRlJWRDyRh1BG4&#xA;IyRDMi30n5E1L9PeTYhxMbvbxsvw8QJKcWZPb1o2Iza6Y8eMx/H4t4XtCHg5+Lnufx/pSHlfnW1W&#xA;28yXDxDhHchLpANqGdA7Cns5IymfO+9vxbCu7b5JISjbkFT7bj7sg2rcUOxV2KuxVPrjzx5mnlsJ&#xA;JLw8tNobWgFOSrx5Pt8ZI2PLLDlka35NYwwF7c+aCv8AzFrV/DLBdXbyW80zXLwk/B6rEkkDt1Ow&#xA;yJmTzZRhEcgl2RZOxV2KuxV2KuxV2Kq0VndTCscTMv8AMBt9+QMwOZbI4pS5BTkilibjIpRvAimS&#xA;BB5MZRI2K3CxdiqY6H5g1XQ7prnTpfSldSjVAZSD34nao7ZKMzE2GM4RkKItVg81a9CdQKXbE6qp&#xA;W+LAEvWo7j4dmI2wjJLffmg44mtuXJB3mq6lexQRXlzJcR2ylbdZGLcAaVAr8hkTInmyEQOQQuBL&#xA;sVdirK/y3dF1m65dTaNQ+HGWNz/wqnJw6teTmPf+gvdZ4/VhkirTmpWvzFM2khYp0MJUQe58dfmN&#xA;p89r5guRIpB58t/8oAH7mUjOcx7bPo0ZCUQQxeCZoZA679iPEZYRaQaTSG6hl2U0b+U9cqMSG0St&#xA;MRdJ6NSfjApT3xts4tn0N+R9hJa+VOcg4iQrSv8AspP+ZmbLs2O0j5vG+0EwckY9w/H3MJ/MN1bW&#xA;rcL1W0hr/suTj/hWGRn09yYc5f1ixfIM3Yq7FXYq7FXYq7FXYqqW8Xq3EcX87BT8icjI0CWcI8Ug&#xA;HsPkny5pEmhyi4s4po5piQsiB9lUKCOVd61zM7PjxYyZb2XWdsz4MwENqiiLz8s/KNySVtnt2PUw&#xA;yMPwbko+7Mo6aBcCOvyjraUz/k7pLV9C/nj8PUVH/UEys6Md7cO05dQEG/5Mncx6vU/shrf9ZEn8&#xA;Mj+T82wdqf0ft/YlWrfl8miPA9xerdGQmkIjK7L3JLHxzB1kfCA33LtOzMn5iRNemK+0tZrmeO2t&#xA;05yOeKIM1kIGZocy73LljjiZS2iEx1X8vfMTx/uvq1wlP7sNR6/N1VfxzYHs7LHcEOph23pp7TBH&#xA;vH6nnl5p2qWFzLb6haSWro7LH6ilQ6joyk7MPcZYYSiBfNoGSEieA3G1DAl2KuxV2KuxV2KuxVNP&#xA;LOpR6brlrdSmlvyMdz/xilUxybeysTkoGjuwyAkbc/1PoPSrkz2ah2DTQ/u5iN6sv7XyYUYfPNli&#xA;lY35h0uohwysfSdx+PLk8x/OL8tm1WN9VsEBlAJmT3PWvs3WvY/PNZrdOYnjjy6vQ9jdoivCn8P1&#xA;PnPUdIvbK4aKWJlZeqkfEP8APxzEjMF6IjuUILadpFopUA1LHamEyCgFnvkryXqPmHUoUSFvqvIF&#xA;mIIDAHp/q/zHtlcYmR4Y82Gp1McUDKRfS31WDRtBj0+FwrMpjEh2FWBMkh8Aq1b6M3YgMeMRHP8A&#xA;G7w5ynNmOSXIb/qH6HhHmPU01PW7u9jFIZH4wA9RFGAkY/4BRmHM2XZY4kR35pbkWbsVQt9qVnZe&#xA;n9YcgykiNVUsSR1oAD45Zjwynyac2ohj+ooU+ZtGUlZJmjYfstHID/xHLTpMnc0jtDCev2FcvmLR&#xA;WNBdL9IYfrGR/LZO5mNbi/nKi63pDUpeRb+LAfryJwT7iyGqxH+IK8N/YzPwhuIpH/lR1Y/cDkZY&#xA;5DmCzjlhI0CD8VfINiO0WPnqEZ7ICx+6n8cpzmouTpY3MPdvLNv6GhWad2T1D/z0Jf8A42zcaOPD&#xA;iiPL73mu08nHqJnzr5bI+WSRKcIjID14lQR/wRGZYAddIkdLWfXEH20kT5ox/FQRh4GPiDrfybW7&#xA;t2NA+9aUoQa4OApGSLBvPk3PWI467RQqKe7MT+qmc92pK8gHcHs+wYVhJ75fqTLyNp0cNpLqc1A0&#xA;hKRM2wCKdzX3bb6Myuy8G3H1PJ1/b+ruQx3sNz7/AMfeytJI5ByRg48VII/DNsRTzwIPJQv9OsdQ&#xA;tntb2BJ4H+0jiv0juD7jIyiCKLOEzE2DReX6p+VGpjWxDpzqdMlBdbiU7xUIqjAbsd/hp1zBnpDx&#xA;bcnb4+0Y8Pq+pOLX8ndLVR9bv55W7mJUjH/DCTLBox1LTLtOXQBdN+T2jEH0L65Q9ufpv29lTE6O&#xA;Pegdpz6gJNqH5P6tEC1jew3IH7MgaJj8vtj8RlUtGehb4dpRPMUxTVPK/mDS+RvbGWONesoHOP8A&#xA;4NeS/jlEsUo8w5mPUQnyKV5W3OxV2KvVfy/8xXUelW7XDowR/qqNy+0q7pFKTsjgH90x2YfD1GZO&#xA;KRAv8fjucLPCJJiff7v2d/zekWt5b3SFomqV2kQ7Mp/lZTuDmbGYlydZkxSgd0g1v8vPK+sEtcWq&#xA;o53qgWlT34sGA+imYuTQ45G+Xudhp+18+MVfEPNJbb8lvKMMokZC1O3FP+Ng36spHZsepLlS9oMp&#xA;GwDK7az0bQrcJbRCIvRVVRylkI6AftH9QzKjCGIbD9ZdbPLl1Erkbr5B5r+YXnUzerp1rIGnlBju&#xA;mjPJIoq1MKsNmZqfvGH+r45jZchPv+78dXOwYQBty+89/u7vm86yhynYq7FUR5WjEn5g6QCA3ow3&#xA;Mm/7NY+IIrm07NHN57t8+kB6+QCCCKg7EHNs8oh5NN06SnqWsL06co1NK/MY0niKFk8s+W5Qwl0m&#xA;zcNu3K3iNT13quCgy8SXeXmX5u6Loum3mgtp1lDYzTSTc2t41iDLH6ZFQgUVq+Y+pA4C7TsuUpZN&#xA;z1CHznntU58tQs9xIVFWoqL82P8AZmNqN6DnaPa5HoHvcMSxQxxL9mNQo+SimdHGNAB4icuKRJ6q&#xA;FwImkrJbuxGwmUAmn+xPPLY3WxaJ1e4/H3ujjDKWinlRV6h96fP1FLYk94H49ygdxP4966A+o3JL&#xA;n1VXqF4UNfEgYJbdEx362801+9F5rF1Opqhfih7FUHEH6aVzk9Vk48hL6H2fh8LBGJ519+70LSbe&#xA;S30ezhjRSREpcMSBUjk3QHuc6TSwEccR5PE6/IZ5pkfziiBJJExZ7anL7TxEP08dlb8MyaB6uDZH&#xA;MfJ0Duz8ophLFX4lbZl9tv1EYyHeFiSeRsIjufDK21vFWOap50sbeM/VF+sSLII3BqooN2I7+wzX&#xA;5u0IxHp3Nu70vYuSZ9fpFWmsWt6ZNeLZxTB7lhXgoJoAOW5pQffmVHUQMuEHd189DljDjIqKOy5x&#xA;El1Pyb5Z1KrXNhH6h6yxj0nr4lk41+nK5YYy5hvx6rJDkWLah+T1g9W0++khPUJMokHyqvAj8cx5&#xA;aMdC5kO05fxBjd9+Vfmq3qYUhu1HT0pApp8pOGUy0sx5uXDtDGeeyUmw81aAs8j2s9rDKhhuGePl&#xA;CyPtxYkNGd+nvlXDOPRuGTHk5EFNLH8xL60kiAgMtvGioA8r+spUUbhOAG4k78X5AYfET4O3P7Nv&#xA;l+qmUWn5u2PECVrmNu4khinA/wBkjwE/8Dlo1B7/ALP7HHlpAf4fkSPvEmrz83bLiRCbmVuwSKKA&#xA;H/ZO9wR/wOJ1B7/s/tWOkA/hHxJP3CLD9a8+6zqIkjh/0OGQFZCjM0zqf2Xmb4qey8R7ZSch6OTH&#xA;EOv7PkxrK212KuxV2Ko3yQof8woK/wC6rCZxTxLqu/35tuzRsXmvaA8nrebR5h2KuxV5R+czl9d8&#xA;uQ1B4iduPhyKCv8AwuYmsPoLuOxx+8+KXZoHtGY+QLT1b61BH27gMf8AVj+L+BymI4s0Q5E5cGln&#xA;LyP6ns2dC8YpSTOjU9J3X+ZeJ/CoOSAvqxMiOjS3cRYLR1JNByRxv8yKYeEoGQfgJR5q1yPT7F4I&#xA;2/0ydeKAdVU7F/6Zr9dqPDhQ+ou47J0RzZLP0R5/qYPo1it7qMMDsEiLcpWYgAINz18emaTSYDly&#xA;CI+Puep7Q1ccGIzJ35D3vU0ZGWqEFe1OmdTVPA3a7Aq304/U9TiPUpTlTenhXDfRFC7bFNyO5/Vt&#xA;gZFKPMx1dLNJdNmETxt+8U8ByB6UL7beHfMTWeII3A07HszwTMjKLB5c9vkwnSNIn1zUJoxNHBLR&#xA;pW5bBjXfiB867ZpMOE5ZEWAXrNTqY6bGDRI5Kel6ne6bdSfVfTNxIfTMr0IpXcBiQtCe+ODNLHI8&#xA;NWV1elhmgOO+Eb0HpsBuHtYzNSO4ZB6nHcK5G9OvQ50kL4RfN4XIIiZ4d43t7mDeRDrmhT67aebN&#xA;VMwglhktrq7m/dmKUPRkaQ/CG4H4exBzF0/FAyEy7btHw8wxywQqwbAHUV3fez0EEAg1B3BGZjpW&#xA;8VYx+Yc0C+XmimAaOZwJFP8AKgLk/QVGYHaMyMYA5ku47FxCWUk8oxLwexmea1SR/tGv4GmYkhRd&#xA;jA2ERgZOxV2KuxV2KuxV2Kpn+XalvP8AdP2j0soR7tcIf4Zuezh6D73lvaA+ofjveq5sXnHYq7FX&#xA;kX5tNz86aHFT7MBav+tIR/xrmFrT6C7zsUfvPihM0T2D0v8ALO0/0uFiP7mBpPpcgf8AG+DQjizk&#xA;939ie1ZcGkA/nEfremZvHk1AyXSk/uldexVqH7mA/Xk6HewJl3KdxLfvCy2kQinp8LT0Kf8ACFsr&#xA;yiXD6SLbtPKHF+8EuHyp53NYa1qGqzxSK092jlZn6qKGnXoB4ZzRw5cuQg7ye4jqcGDAJD0wrYdf&#xA;7WaaFp1lpNqYyHM8lDPK0b0PsDSlBm/0ujGKNDcvH6/tI6idmxEcgmKx6fOxKemz9yhAYfStDmXc&#xA;g68CEuVK0qTGhikCkdmXkD+o/jkQR1ZyB6FqJ5iSssfEjoymqn5dD+GJA6LEnqFQVoK9e+RZFL9e&#xA;0uLUrAwys6rGfVHpAFiVB2oeta5j6rCMkKPvc3Qao4MnEK323edJp0s6XlzaK/1W1FSzfaILBaGn&#xA;ehqfbOfGIyEpR+mL2ktQIGEZkcc/x+xh+oecE8teborPX7N5dFu4Y50eMlZUR/hEiDYMvJDUH6M2&#xA;Ok7PjOHFJ0/aXbMseTghW3Xnu9qneLX/ACi58uX6xx3tsV0+/iLUXbiDUfEpFOJ/aB982c4Hg4Y7&#xA;bPP4cojlE5jiF2R3vPIvyy80Xsmn6T5s1hbmwLtIjwNJLMxiUlYmklVNuLuVNDTfx2wBpJmozOzv&#xA;z2thgJTwQqXnQG/Wh8HrcEMcEEcEdfTiVUSpJNFFBUnc5swKFPMSkSST1VMUPOvziv8A0dK9IGlI&#xA;XJ+cpEa/xzV683khH4vQdkR4cOSfw/HzeT2icLWJfBRX503yk83KiNlbAl2Ko/RNE1DWdQjsLCP1&#xA;JpNyTsqKOruewGShAyNBhkyCAsovzb5Sv/LGpRWt1cRXUd2ry2skashCRlFKuprvVq7HLs+MRApx&#xA;tLnlkMr+CS5juYvJ4AAfbPU+HtilZihOPyzXl5w1eSlfTtIU5eHJy1Pppm77PHoeS7eP7wPUMz3Q&#xA;OxV2KvHfzOYSfmNp6g/3djHUe5lkP6iMwNefQ9B2GPUpKpZgo6k0H05oy9aBb2T8u7UJFdy02Hpx&#xA;J/sQSf4Zb2VH6pOP7QTrgh72YsCVIBKkjZhSo+/Nw80VHjeL0kRx/lKVP3g/wyVxYVLvC9TccDyR&#xA;OY+yAxofmeO2A0yF0pg3Sk8YYqHc0kIJP/AYgR/AQZT7vt/Y3684+1bt80KsPxIP4YeEd6OI9zcb&#xA;wytXgRInTmhUivhUfqwEEJBBc8Lli8UzKTvQ/Eh+g/wIwg94UxPMFchkMdJQA3Q8SSPCu4yMqZRv&#xA;qqYEuxVoIiiiqAPADbfGkkkvIfz28lLemy8yKhkWzjFpcxfsqhctG/y5OVPzGYmryThC4u77Dw4M&#xA;uXhyizzHce+/x3oX8l/NotLxvLt0/G2uiXsSdgswG6fJwNvce+Yuhz0eE9Xb+0PZwMBlgPp2Pu/Z&#xA;93uewPFa3clvKHDm1kMsfAgjkY3i36/syHNnYluDyeR9UAQRXEP0g/oROSanYq8Z/Oe89W8+qqa8&#xA;pIofoClz/wAM2afMeLUH+iHptNHh0kR/Pl+PuYdkG12KuxVknl3UNQ0iAXFlO0E85qxXoUXoGU7H&#xA;6cxp55Rl6TTtNLoceSHrF2h/O/mq61vVtOgukT6zZW0plljBFRO8ZUMKkAj0z08cyY55ZI3J1mXS&#xA;Y8GUiF1SSoAXFenU/Ib4qGiSSSep3OKtYoT38qlDeYfMjnrGtkgHsySH+Gb3QD92Hju3T+9/HcHp&#xA;eZrpHYq7FXjHn5jJ+Z1DQiK0jUe3Vv45ru0D6XpOwhv80RpsfqX8C/5QP/A7/wAM0WU1EvXYI3MP&#xA;b/JNv6WhI9N55Hf7jw/41zYdmwrFfeXS9t5OLUEfzQB+n9Kf5nuodiq3mvPhX4qcqe3TDSL6NhlJ&#xA;IBBI6jwxS3gV2Koc2ca7wkwN/kfZ+lT8OT4+/dr8MdNlccqCu5/aPTIFsDeKuxV2KpZ5luLC30G9&#xA;l1CFriy9MrcQpTkyOeBAqVH7XjlWeQjAmXJytDjnPNEQNTvYvm7UrSTR9YBt3LRoyXFjOwoXiJ5x&#xA;Oad6dffOfOx2fSsUvEx+rnyI8+r17y75gi1OyS/s2aNgeEq1oUcAEqfHrl8Jkbh57U6fhPBLdOYP&#xA;MeqQt6UpSYsD6UjrSpG9G403zJjrJjnu62fZuKXKwnmm65ZXyUDiK4UfvYHNGUjrStOQ9xmfizxm&#xA;PN1Go0c8Z5WO94d+YF59c8zwitV5zT/QWon/ABHNRjPFKcu8vSZY8MccO6KVZJg7FV8ETTTJEvVy&#xA;BgkaFs4R4iAyE+n6lK8YYhSp6BUGa3mXpABCDEbSZrua51JweV5IWQHqIl+GMfcM2UY8IAeYM+OR&#xA;l3oxdlZv9iPpwpW4oXc/FQfo/pim2SflNA/r+YboACKS5iiXx5RxVb/iYpm/0Q/dh4ntqV5i9CzL&#xA;dQuePhQMfj7r4fP3wAsjGluFi8S83MH/ADT1HahiihX51t0P/G2aztE7PT9hBN9Aj5Xpb+RCfpNB&#xA;mg1B9L2Gjjc7e8aJB6GkWcXdYkLfMip/E5vdNHhxxHk8nrcnHmmf6RYzqXmfWZNRlgsaQW8LmP1O&#xA;HNmKmh6huvyza49PHhuTz+bV5DIiOwDI9Fi1JLQNfzNLK+4VlVSo/wBiBuffMbMY36Q5+nE+H1Hd&#xA;KLvUdR1LVpdMtV+qi2Eha6B+M0FKA9FDFh4+OWRhGMeI724s8s8mQwjtXVIbDUoND1R3t3fUPWXg&#xA;5I9PqwJ7vybamZE4Gcd9nCx5RhnY9VvRFYMKg1B7jNc75oSIzMisCyU5qDuK7iowWmiuxQ1369O3&#xA;zxS3ih2KrJRKUPpFQ/bkCR+BGEV1RK62SvX7aW80a9s7mP8Ac3ETI7wuOQBHWjqP45XqYxOOQvo5&#xA;GhyThnga/iDzfzb5RTUNDH1GP/StLi5W6CpLQxgB4/c8RyHy980YxcQodHs9PrfDyer6Znf3nkWG&#xA;eRfMo0XVGS4NdPvV9K4U9FYV9OX/AGDH7ichiycNg8i7LtDSeLEEfVE7e7qPj99PVJ6cEavR0ofm&#xA;wH8cm6QLTEjTyKwqGVWHiCKgkH7sVYV5v0J/rKayhLLxa3mXwKyHi/8Asu/v88lE0KYZASb8mO5J&#xA;g7FUy0aKjSXB/wB1jin+s39mY+oltTsOz8XFK+5T8yXLw6Q0EZpPfuLaP2Vt5D8uO2VaeNyvucrt&#xA;PLww4Rzlsl8USoiRIKKoCqPYbDM10oCo5FeI+yu3zPc4pK3FDsVZj+Ua8tE1mXqf0tKhb2WGKg+j&#xA;Oh0g/dh4XtY3nP46s9ULE1CQJe7Hon/N36vn0v5uCPT7/u/askkBHFNkG+/UnxOEBjKXQclmFi8N&#xA;1t/V/MrXH5cgpjWv+rEq0+imartE8nrOwh6fh+tlflK0M8xUdZpEiX6T/wA3Zocw4pRj3vW6aXBC&#xA;U+4fc91AAAA2A6DOkeHQGqTR2UE14lqHmRCwm4rSvT4iPip45bAGRq2jNIQBlW6+x1EXLCP03DiN&#xA;ZGl4MsTFhvwZgK4JQpOPLxbV0+CRR+Y7fzXpOoQ6E7iWF/SYyAJzWu5Qgtsw8aHKNHq8c5e5ze1e&#xA;zM2HGAauQ/AYimuSC/h8rszQRcXNxcp8Sggu242YrQUNPxy7Lr4xziAHFI/Y4mm7FyT0UsxmIQjf&#xA;nxUd/wBXnTM/JctvHDc2ERlkML82lkTgvxACgFSR075fqQbBLh6CQAMReyChg8xQ+ebia206Cztt&#xA;QKfXbuSX1TcW9mvFGjRaFJT6wBDClB9+rAmMhoVf6HpZSxHTAGRkY8hVUZd/eNmZZlOqULy9trOB&#xA;7m5f04UoGehPU0GwBPU5DJkjAXLYNuHDPLIRgLkWC615sv5p5YbebhbrKrwSxVUlBWle+9RUe2aT&#xA;Ua6ZJAO17U9ZouyccYiUh6q3B70+0LzQb+4lN08FtCWCWsJakjEnvVvo6b5nabW+ITxUB073Ua/s&#xA;vwYjgEpS/iPQfZ+lkebB0qG1Ij6hcCu4jNfuyvP9B9zfpf72PvYvYXAt7yKU/ZVvi+R2P4ZqMU+G&#xA;QL0Wox8eMxeUfmZ5ag0XzDJJZEHT72s0ITcRsTV49vA7j2OQ1UBGfp5O87H1UsuEcf1x29/myHyD&#xA;rq6lpn6PuGrdWYXie7RA/Af9idvuyuBtp1+DglxDkWVFW+sK4Hw8SrH3qCP45NwEBrcQGh3yvRvg&#xA;kcfeWH3YQgvNMm1uxVPoITDaQw0+Mjm4/wApv7M1+WVyeg0WLggkGqzfWtfKA1g02P0l8PWk3cj6&#xA;Nsy8Eaj73Ua3Lx5fKK5CA6k9AQctccOZSpofoPjirWKFzbord9wfoxSkGifmd5k8qyajY2EdvJbT&#xA;3cs7xXMbNR2opIKsh6IM6DBKoD3PHazBGeWRPOz96axfnz5raRFew00qWAY+nOuxPiJtvuy3jLi/&#xA;k495TH/le2opGzyaPbsBSnCWRCD/ALIODh42H5Id6lH+f12OPq6LG383GcrX5VjamPGv5Id7HdI1&#xA;WTWfMWqarJEIWu29T01NQtSKCp67Zq+0DdPR9jw4QQ9Z/Lqz9S+sQRtzaZv9gCR/xEZqMI4tQPJ6&#xA;DVS4NHI9/wCk09czoHjku8xSXceiXhs2RbsxlYGkAKh22BIIYHr3GVZ5mMCRzcnR4ozyxjMXG9/c&#xA;hbG+ul8tJJcsrXaRiJ3QBVL0C1UAADKI5pHDxH6nLnpYDU8ERUOdeSD8s21np1veTQQpDEPiKxqF&#xA;DOak9O+wyjR1ASk5XaRlklCF2SgBpSanJOzMsL8C0lwFBIXkGI7HfDo5fveM9LLHtPGTp/Cia4iA&#xA;lekrrdt5guL2+uXubYygaZZrMUVV3AB5cVUBaVA6nL9DlyZMs7PpI+TjdsYcGHT4hCP7yJq+V7b3&#xA;5f2PQ7eezu1WeB0mCkqsi0ah6EA5mSiQd3VQyCQ2OyvgZIPVY5ZNMuEihS5kZfghenFt/cjp88qz&#xA;gmBAHE5OkkI5YkkxHeHndrezaVfXBa0hk5RtHNA37xFD0/a5Mfbr7Zz0ZnHI7D3Pazxxz441KXOw&#xA;eRP2D7vNV8q6fJdarE6CN1t2WSSOQkHjXdgB1p+vJ6LEZZARWzV2rqBjwkGxxChXezfU9TVUeKFy&#xA;sykBjTt3oc6eEL36PnufOADEGpJQbuas7seTToysT7kf0phz4rgR5Fp0eqrMJd8o/tQOc29+lnmP&#xA;RYtY0qW0agl+3A5/ZkH2T8ux9sEhbdp8xxzBeS6Zf3miawk4UrNbOUmiPcA8XQ5SDRegyQGWFdC9&#xA;ns7uC8tYrq3bnDModG9j4++Xh5ucDEkHmED5nk9PQbxvFQv/AATBf44QwLzXJtaJ0+39e7jQ/YB5&#xA;P/qrvleSVRbsGPjmAm11eR20NxfS/YgRpCPEj7K/ScwYR4jTv8+QY8ZPcxbTY5FtRJKazzsZpj4v&#xA;IanNk8zG+Z5lFYpXoSQUPTcj2PXFKzFC9PiBQ99wffFIQ0tnaTNylhR26cmUE/eckJkciwljieYC&#xA;i2j6U3W0i/4EZLxp95azp8f80fJZ+gNFP2rOM18Kj9RGS/MZO8sfymL+aFjeVtBf7MHE+BZv11yX&#xA;5rJ3sTocJ6Iiy0mz0/ktvHwLfaqST+OV5Msp823Fgjj2iKewfltZ8bguR/cW4X/ZORv+Byvs4Xll&#xA;Js7blw4IQ7z9weg5u3lUl8yT0jigH7RLt9Gw/XmDrZ7AO27Lx7mXwS+eYLpNtCOru7t9BoMxpS/d&#xA;gOdjheeUu4AOlk9HSYoB9q4Yyv8A6oNF++mMjw4wO/dEI8Wcy/mimlf6vpbAbSXbU/55p/U4g8OP&#xA;zl9yTHjzeUB9pRmnaPDdaZKJao1xVUlWnJV6HiSDSu4OZ2gBgOLvdT2wRklwdw+9M7GyntXkT1g9&#xA;pt6EXEBk/mqwpyqczZSB97rMeMxsX6eiLJoCfDK20NgUFBiqTy6JoFrFcepAFS8bjKd+55ALT7IB&#xA;Fdsx46PHuAPqczJ2rmHCTL6eX3b9/wAW9MbRo3V4IFguGAgAAJYotONSPo3OXDTRgbA8nEPaM8wA&#xA;lImyTSH1pHN0zehRQBSYAiu3c14+2++W4iAet/j4OLq4yMeUeHvNWP0qEt+8tlFalFAhNQ4G52/t&#xA;zIERZLr55SYRiQlrKVND9Gc1nx8EyH0DSZxlxRn3j7erWVOS88/Mjy/6cq6xbr8EhCXYHZuiv9PQ&#xA;5XMdXb9nZ7HAfg78t/MHCVtGuG+CSr2hPZurJ9PUfTjA9F7RwWOMfFkHnm59PS44AfimkFR/koKn&#xA;8aZcHTSYJkmCeaRAIdMluudJbl/RRAf91pRnJ+bEU+WY+oltzdj2djudkbD8bfalXmeXnHaaYvW6&#xA;f1rgf8VRbgH/AFmyOmjuSy7Uy3UFDMp1jsVbU8WB8O2KVxjJ3T4h2p1+kYrTSbBm7jYfM4qFuKHY&#xA;q7FXYqrWyetIkR6lgB8idxkZGhbOA4iA9m/L+NBZ3UtRzeQLx70Ra/8AG+ZPZUPQZef4+9wfaDJe&#xA;SMe6N/M/sZXm0efYvrU6yahICCwjARd6UI3P4nNTqp3M+T0Wgx8OIee6X7cdyaj7I7ZjuaudmcKz&#xA;NUgBQO4AG2Em0RiByVHMs8sUQWhoscan/PuTXJG5ED4NcQIRJ95LLo0jt4FSoWONQKnYUHjm5AER&#xA;XQPMSkZyJ6ldHLHIvKNw6/zKQR+GESB5IlAxNEU2a9sLFvFWPa2w+uMnqMfssYz9kGlKrv8Awy3E&#xA;d62/S4WriascXn/NQ7lFuAbL1OgC7VflTenHLZcvU4kCeKsd/ZaeTWK3lrAJXdXUAlqUY1G9QajM&#xA;YE8w7aWOJFS3abRrIyI3EhEXgY+x67nvXfrXBunhjYNbjb4dyA1jSY4rVZYAf3W0ldyQT1+jMLWY&#xA;yRxdXa9mZhA+HyB5JHmtd4o3lpBeWstrcLzhmUo6+x8PfEsoTMSCOYYXov5d3djrUV3NdRvbW7+p&#xA;EEDeoxH2eQIovvucrEN3ZZu0BKBAG5X+fJy1/bQV2jiL/S7U/wCNcui6iTGACSAOp2GSAYk0LZFc&#xA;+Up4iGsr6W2nAHON/wB7CxoN+J+zy9jnQS7OxTiAR8XjMPtDqcOQmJ2J5dGJwzXF5f3N7cFGdSLa&#xA;Jo68OEWxKV3ozb5oZ44wJjHk9fjzzzAZJ7SIRWRbGWeT/I0+sXfp6gk9lbzW7S2VwYyElfbiAzCh&#xA;2Jbbtl2LFxHdxs2oEBY333Zlrv5YaRL9UkSRdNsrK0P16dVqzstKMakCv2ix+WXz0491Bxcerlv1&#xA;JOzya6i9Kd1CPHGSTEsoo/A/ZJ6dswy7IFYP7tvYg/rH8cDJbih2KuxV2Kq9lMIbqOUjkENSPoyM&#xA;42KbMU+GQLIrHzra2tUKSRryryZGO/iDGWy3SanLp4mIEZA7uN2jodPq5icjKEgK/HNkml/mJHNK&#xA;kEV2HkchVjZlZiSafZejZnDtOJ+vGR7vwHVS7CmP7vNGX9bb9aZu7O7O27MSzH3O+asmzbvYxoAD&#xA;otwMnYqi9OuYIr1JrivFBtxFd6UGZeljcjI8oh1/aEyICERcpmv0rtT1Ke9cqlUi6Rp137E+JyGb&#xA;Och8mzS6WOIWefUovyX5buNF092vZzc6ndkSXkpJK1FeKqD2Wv8AmKDM3Sac447/AFHm67tTXDPP&#xA;0ioR2H62QdxmW6xvAqGvbFLsIruyqhrRe+EEjkwnjjIUVFNGtEmEoLBg4dQCABQ140p0rjZ70jHG&#xA;7rfn8UfgZOxVp1V0ZGFVYEEexxIvZIJBsMKniMU0kR6oxU/QaZopRokPWY58UQe9ZkWbsVYH55jZ&#xA;dXjcj4XhWh+TNXJhhJjuFi3NqXmVYHgttRPpMCqiZQ7IprUI/wBrvtXMuGuyAVbqsvY+CcuKv1KN&#xA;rbrb20cC7iNaV8T3P0nMQu0iKFKuKXtP5a3lydEs4p9Wt7hHUiCw4g3EYRj8PIPWgAruuw9sz9Od&#xA;ubq9ZDcnhPv6Mo0y0v7Z7uS8ujeRvJzt1pUoorUU/gPDJYoSiTxG99mrUZYTERCPCQN/N4/+Z+tQ&#xA;aprcTWt6l3axRkRqsbIYmLfErFh8R2GYuefEdi7DS4zCNEUWIIRWh6MKE5Q5QaIKkg7EYq1ih2Ku&#xA;xVcm3JvAH8dsUhbhALAziDRO5ZB5LsPrGq/WGWsdqpYHtzbZf4nIlsiGfZBm7FXYq7FFJNqfmvSb&#xA;C8+qTSfvVFXNG4rXoOVONfpzI02UY5iRjxOLrdOc2MwExC/I8vemGleerU0FveLKv++yQ4/4UkjN&#xA;p/KWnl9QlH3j9Vug/kTVw+gxye6X66ZMvmiIxBvRJcjpUcfv/szMGnvcHZ1stXw7EeoKLeZ7ivww&#xA;oB7kn+mTGmHe1HWnucvma4r8UKEexI/rj+WHeo1p7kVB5ltWNJY2j9x8Q/gfwyEtMejbHWRPMUmU&#xA;NzHPxeCRHj/bp19vl9OUmNc3JjMS3B2VsgzdirFNaj4alN4NRh9IFfxzUaoVkL0mgleIIHMdzHYq&#xA;xfz3ac7KC6A3hco3+q4/quSixkwnJMHYq7FXYqn/AJT83TeW5LqaC1innnj9OOWSoKb17dR4jbLM&#xA;eTg5NWbCMgopjbfmj5ktrG2t0KNNBM80lw45GUSFiUdRTark7e3hkhqJAMJaWBJJ6sWvryW9vbi8&#xA;lAEtzK80gUUUNIxY0HhU5UTZtvjGhShgSuDgijioHQ9xim3MtKGtVPQ4rS3FDgCTQbk4qucgDgN6&#xA;bsfE4pXIPhzpez8fDiF9d3yn2k1IyayVHaNR+XP7bZb5J1CBBNZOVSR2EkR6FtqEV9qbZr+09JXr&#xA;iNur0nsr2wZg4MsvUPpvr5fDp+xlckkcal5GCIOrMQB95zURiSaD2c8kYC5EAebo5YpU5xuroejK&#xA;QR94xlEg0dlx5IzFxII8t12RZpJ5i8xw6bE0MJD3rD4U6hK/tN/AYQGJLz6SR5HaR2LO5LMx3JJ3&#xA;JOTYLUokqSqB6iEMrEAkEYCLFJBo2mlx5s1425gt/SUEU5sW2+Qp/HJxyZBHg45cPd+1qyYcRn4n&#xA;hx4+/wA++uVoe117zHAgH18yEdQ6Ar+HE/jko5ZR+mUh8Sxngxz+qMJf5o/RumMHnjXI/wC9ihn+&#xA;RMf4Uf8AXl8dfmH8V+8D9FOJPsnTS/gr+rI/p4kwg/MCLYXFnIniy0YfgWP4ZkR7VyDnGJ9xr9bh&#xA;z9n8J+mco+8A/cR9yZ2fnzROYZbk28nYvWP/AIlxy8dqwP1Rl9hcWXYGWJuE4H5xP2j9LJbDzxG6&#xA;gieK4T+bofvG2EarTS5Sr37fewPZ+thzhxDyo/cm0XmyxZSzqVAFSVZWAHjX4cujjEvpkC42TNLH&#xA;/eQlH3j9dJZqWoWd/OtzaOJImQDkKUqCe4JzUa/GY5N+56LsbPHJhJiduL9TH5PNOix3HomepBoX&#xA;CkoD8xjHs7MY3Tj5PaXRRycBn8a2+aaI6SIHRgyMKqwNQR7HMIgg0XdwnGQEomwUk8239lFpslnM&#xA;S01wv7tF3IINQx8BUZl6XRzzHbYDq6ntbtrDogBL1TPKI+89wYAUoK1zK1HZpxw4runVdm+1ENTm&#xA;GIwMTLkbv57BbmtepdirsVdirsVdirsVdiq+Peqdm/X2xSFmKF0f7QHXiafRufwxSGlFTmTpMByz&#xA;A6dXVdsdojSYDP8AiO0ff+zmq51ID5CSSbLsKFzyyyU5uz06ciTT78iIgcg2Tyyl9RJTTy9rh0y4&#xA;b1Az2so+NF6gjowBpmHrtJ40dvqDu+we2fyWQ8VnFLmPPvCN1bzrdSoY7FPq6Hb1WoXp7Dov45pd&#xA;ToJYYiRNvcdl+0GPWZJQjExoXv1H6GLszOxZyWZjVmJqST3JzEd41irsVdirsVdirsVdiqn9Xh5c&#xA;uADfzAUP3jG0UrJNcqOP1iUxn7SM7MCPD4q5ZglGGQSobFxu0cM8+nniEj6o96JivLqKJ4opnSKX&#xA;+8RWIB+YzqjjhIiRAPc+Px1GbEJYxKUQdpC/vUstcZEW+oX1sCtvcSRKeqqxA+7Kp4IT+oAuXp9d&#xA;nwisc5RHkSoyzSzSGSV2kkb7TsSSfpOTjERFAUGjLlnkkZTJlI9Tupv9nMPtH+5Pw+93fswB+eh7&#xA;pf7kqec0+qOxV2KuxV2KuxVnf/IIf+X/APHMj915uF/hHk7/AJBD/wAv/wCOP7rzX/CPJw/5VHUc&#xA;f0hy7U61+nbH915pH5j+i7/kEP8Ay/8A44/uvNH+EeTX/IJOQ4fpDvWlOlDWtf4Y/uvNI/Mf0VGX&#xA;/lVXP93+leP/ABX6VP8Ah982mh+k+HXm8l7QeH4kfzPHy9NfT5/Hv+Cz/kF//a4/6d8zv3vk8/8A&#xA;63/7Y7/kF/8A2uP+nfH975L/AK3/AO2O/wCQX/8Aa4/6d8f3vkv+t/8Atjv+QX/9rj/p3x/e+S/6&#xA;3/7Yrxf8ql4D1P0ly/y+PL/hPhzU636/3l/oex7C4PB/weqve/q+P6F//IIf+X/8cw/3Xm7v/CPJ&#xA;3/IIf+X/APHH915r/hHk7/kEP/L/APjj+681/wAI8nf8gh/5f/xx/dea/wCEeTv+QQ/8v/44/uvN&#xA;f8I8nf8AIIf+X/8AHH915r/hHk7/AJBD/wAv/wCOP7rzX/CPJ3/IIf8Al/8Axx/dea/4R5O/5BD/&#xA;AMv/AOOP7rzX/CPJ3/IIf+X/APHH915r/hHkoP8A8qr5nj+luPbj6NPo5b/fm70/icA4eTwPaX5P&#xA;8xPxOLjveuVrf+QXf9rf/khl377ycL/W/wDpu/5Bd/2t/wDp3x/feS/63/03f8gu/wC1v/074/vf&#xA;JH+t/wDtjaf8qs5jn+luPfl6PH6ePxfdlGq4/DPHXC7Hsn8r+Zh4PH4m9Xy5G/sRH/IIf+X/APHN&#xA;L+683u/8I8nf8gh/5f8A8cf3Xmv+EeTv+QQ/8v8A+OP7rzX/AAjyd/yCH/l//HH915r/AIR5O/5B&#xA;D/y//jj+681/wjyd/wAgh/5f/wAcf3Xmv+EeT//Z"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:5a2347c1-4244-9244-9ea5-d311ed7b5f73"
    stRef:documentID="xmp.did:5a2347c1-4244-9244-9ea5-d311ed7b5f73"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:AC3D3EC9D6DEE611ADF3FA58164AFD71"
      stEvt:when="2017-01-20T09:07:56+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:02801174072068118083F6D0A67B0728"
      stEvt:when="2017-01-20T18:36:10+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:05801174072068118083F6D0A67B0728"
      stEvt:when="2017-01-20T21:11:37+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:577FABBD61206811822AA8872E1D75D1"
      stEvt:when="2019-04-07T19:22:06+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:0880117407206811822A8072EAEFE205"
      stEvt:when="2019-05-11T00:15:08+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:F87F117407206811822AB2A6B75D99AD"
      stEvt:when="2019-05-18T09:11:40+03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:17975739-5e94-244c-a37b-52bb849b1d25"
      stEvt:when="2022-01-30T00:21:01+03:00"
      stEvt:softwareAgent="Adobe Bridge 2022 (Windows)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:be9f6368-eb77-8440-ac0a-72065162e1f1"
      stEvt:when="2022-04-08T15:57:39+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:4baab35d-b831-c249-abea-1c814a1b5ff0"
      stEvt:when="2022-04-08T15:59:12+05:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Windows)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:c8250e5e-e3fa-e243-9c1b-cc256edfca41"
      stEvt:when="2022-05-01T10:39:30+03:00"
      stEvt:softwareAgent="Adobe Bridge 2022 (Windows)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="3000.000000"
    stDim:h="2000.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="R=255 G=255 B=255"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                               
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
3000 2000 li
3000 0 li
cp
clp
gsave
3000 0 mo
3000 2000 li
-6.79688e-05 2000 li
-6.79688e-05 0 li
3000 0 li
cp
clp
3000 0 mo
3000 2000 li
-6.79688e-05 2000 li
-6.79688e-05 0 li
3000 0 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.694118 .458824 .372549 rgb
f
515.404 1803.98 mo
505.997 1820.91 494.89 1836.93 482.264 1851.67 cv
469.601 1866.44 450.624 1879.78 444.058 1898.61 cv
436.659 1919.86 454.387 1939.6 455.436 1960.63 cv
456.359 1979 448.906 1997.2 435.574 2009.94 cv
432.878 2012.52 428.753 2008.43 431.467 2005.85 cv
438.649 1998.97 444.021 1990.57 446.97 1981.09 cv
449.883 1971.72 450.588 1961.64 448.472 1952.03 cv
446.12 1941.38 440.657 1931.7 437.943 1921.15 cv
433.059 1902.16 441.778 1886.55 454.405 1872.79 cv
467.719 1858.3 481.449 1844.78 492.936 1828.69 cv
504.061 1813.1 513.595 1796.4 521.464 1778.97 cv
545.777 1725.01 554.641 1661.04 542.684 1602.08 cv
541.2 1594.73 539.391 1587.46 537.239 1580.29 cv
534.217 1570.17 530.527 1560.26 526.149 1550.66 cv
525.335 1548.87 524.467 1547.08 523.581 1545.32 cv
514.771 1527.75 502.831 1512.02 486.913 1500.09 cv
469.419 1486.97 449.05 1478.05 429.133 1469.25 cv
385.084 1449.76 339.769 1433.08 293.586 1419.24 cv
280.652 1415.37 267.265 1411.98 253.897 1408.36 cv
251.4 1407.7 248.904 1407.02 246.408 1406.32 cv
242.5 1405.23 238.611 1404.1 234.74 1402.92 cv
213.466 1396.46 192.843 1388.46 174.735 1375.79 cv
146.732 1356.21 124.663 1320.13 134.196 1285.3 cv
139.442 1266.13 157.098 1252.5 159.54 1232.45 cv
162.091 1211.47 150.477 1191.6 134.413 1178.78 cv
117.173 1165.02 94.9408 1157.69 73.5224 1153.32 cv
49.7162 1148.48 25.1142 1148.02 1.10882 1151.73 cv
.71087 1151.78 .349053 1151.78 .00530312 1151.71 cv
.00530312 1146.1 li
11.1308 1144.4 22.3461 1143.45 33.6161 1143.48 cv
56.934 1143.57 80.3969 1147.48 102.34 1155.31 cv
121.135 1162.03 139.497 1172.17 151.833 1188.13 cv
163.085 1202.71 168.911 1222.4 163.881 1240.44 cv
158.509 1259.67 141.486 1272.92 138.465 1293.2 cv
135.553 1312.69 142.988 1332.54 154.384 1348.18 cv
166.939 1365.42 185.191 1377.21 204.602 1385.68 cv
215.021 1390.23 225.785 1393.9 236.675 1397.16 cv
240.564 1398.33 244.454 1399.46 248.361 1400.55 cv
250.858 1401.25 253.354 1401.93 255.851 1402.61 cv
259.903 1403.72 263.955 1404.8 267.989 1405.91 cv
291.578 1412.37 314.986 1419.56 338.123 1427.48 cv
361.043 1435.32 383.709 1443.89 406.087 1453.15 cv
427.632 1462.07 449.448 1471.1 469.872 1482.39 cv
488.124 1492.46 504.333 1505.23 516.507 1522.18 cv
520.071 1527.14 523.291 1532.32 526.167 1537.67 cv
531.993 1548.39 536.551 1559.78 540.278 1571.35 cv
541.074 1573.88 541.833 1576.39 542.557 1578.91 cv
543.823 1583.32 544.981 1587.76 546.012 1592.22 cv
562.673 1663.26 550.842 1740.2 515.404 1803.98 cv
cp
.792157 .509804 .439216 rgb
f
1166.47 224.868 mo
1166.23 222.251 1165.85 219.557 1164.48 217.306 cv
1163.11 215.054 1160.5 213.346 1157.89 213.785 cv
1154.72 214.317 1152.84 217.575 1151.83 220.598 cv
1149.25 228.312 1149.36 236.732 1151.07 244.679 cv
1152.79 252.625 1156.06 260.161 1159.72 267.435 cv
1159.74 267.552 li
1164.2 253.912 1167.82 239.146 1166.47 224.868 cv
cp
.909804 .458824 .4 rgb
f
1201.2 264.004 mo
1203.7 263.108 1206.24 262.071 1208.09 260.192 cv
1209.95 258.313 1210.96 255.382 1209.87 252.985 cv
1208.56 250.081 1204.9 249.104 1201.69 248.896 cv
1193.5 248.365 1185.3 250.586 1177.97 254.233 cv
1170.64 257.879 1164.09 262.909 1157.91 268.248 cv
1157.8 268.291 li
1172.25 269.141 1187.59 268.89 1201.2 264.004 cv
cp
f
1188.1 239.547 mo
1189.36 237.427 1190.57 235.179 1190.77 232.727 cv
1190.98 230.274 1189.95 227.561 1187.72 226.473 cv
1185.02 225.154 1181.79 226.608 1179.35 228.353 cv
1173.12 232.805 1168.54 239.253 1165.44 246.216 cv
1162.34 253.18 1160.65 260.675 1159.4 268.182 cv
1159.34 268.279 li
1170.29 260.355 1181.21 251.115 1188.1 239.547 cv
cp
f
1144.52 230.878 mo
1142.99 228.938 1141.33 227.002 1139.1 225.912 cv
1136.87 224.821 1133.94 224.78 1132.1 226.436 cv
1129.87 228.441 1130.06 231.948 1130.8 234.837 cv
1132.7 242.209 1137.08 248.794 1142.49 254.2 cv
1147.9 259.605 1154.32 263.911 1160.92 267.814 cv
1160.99 267.899 li
1157.55 254.91 1152.87 241.459 1144.52 230.878 cv
cp
f
1120.89 275.052 mo
1118.68 276.187 1116.45 277.459 1114.97 279.428 cv
1113.47 281.398 1112.9 284.242 1114.21 286.335 cv
1115.79 288.871 1119.3 289.333 1122.31 289.136 cv
1129.97 288.633 1137.31 285.574 1143.67 281.297 cv
1150.02 277.02 1155.47 271.555 1160.55 265.848 cv
1160.65 265.794 li
1147.13 266.762 1132.92 268.861 1120.89 275.052 cv
cp
f
1158.91 304.097 mo
1159.67 306.438 1160.58 308.823 1162.29 310.602 cv
1164.01 312.381 1166.75 313.412 1169.05 312.479 cv
1171.83 311.348 1172.87 307.991 1173.17 305.024 cv
1173.93 297.453 1172.09 289.781 1168.87 282.87 cv
1165.66 275.959 1161.11 269.738 1156.26 263.836 cv
1156.22 263.732 li
1154.96 277.102 1154.72 291.327 1158.91 304.097 cv
cp
f
1195.81 283.748 mo
1198.26 284.144 1200.82 284.444 1203.2 283.748 cv
1205.58 283.051 1207.76 281.113 1207.98 278.661 cv
1208.24 275.691 1205.7 273.239 1203.18 271.618 cv
1196.73 267.481 1189 265.588 1181.32 265.252 cv
1173.65 264.917 1165.98 266.071 1158.46 267.637 cv
1158.35 267.622 li
1169.77 274.854 1182.43 281.586 1195.81 283.748 cv
cp
f
1180.64 303.657 mo
1182.51 305.523 1184.53 307.368 1187.03 308.246 cv
1189.53 309.124 1192.64 308.802 1194.38 306.816 cv
1196.49 304.412 1195.85 300.716 1194.69 297.746 cv
1191.74 290.164 1186.25 283.727 1179.83 278.67 cv
1173.41 273.614 1166.05 269.849 1158.56 266.533 cv
1158.47 266.452 li
1163.77 279.798 1170.44 293.478 1180.64 303.657 cv
cp
f
1130.82 299.319 mo
1129.6 301.652 1128.44 304.12 1128.36 306.747 cv
1128.28 309.374 1129.55 312.208 1131.99 313.24 cv
1134.94 314.49 1138.3 312.754 1140.8 310.753 cv
1147.18 305.646 1151.69 298.507 1154.59 290.903 cv
1157.48 283.299 1158.85 275.209 1159.74 267.131 cv
1159.79 267.025 li
1148.59 276.104 1137.48 286.587 1130.82 299.319 cv
cp
f
1123.52 245.374 mo
1120.98 244.606 1118.32 243.926 1115.7 244.325 cv
1113.07 244.724 1110.49 246.466 1109.9 249.029 cv
1109.2 252.136 1111.53 255.091 1113.97 257.165 cv
1120.19 262.459 1128.1 265.56 1136.17 267.004 cv
1144.25 268.449 1152.53 268.316 1160.71 267.726 cv
1160.83 267.758 li
1149.79 258.482 1137.37 249.561 1123.52 245.374 cv
cp
f
1150.12 266.288 mo
1150.42 259.805 1154.52 258.432 1159.75 258.07 cv
1164.73 257.725 1168.12 262.204 1167.54 267.859 cv
1167.09 272.27 1163.34 275.792 1157.13 274.729 cv
1152.72 273.974 1149.92 270.716 1150.12 266.288 cv
cp
f
1126.74 299.371 mo
1125.55 301.115 1124.79 303.031 1124.45 305.108 cv
1124.27 306.236 1126.05 306.383 1126.24 305.26 cv
1126.53 303.496 1127.19 301.875 1128.2 300.396 cv
1128.85 299.447 1127.38 298.422 1126.74 299.371 cv
1126.74 299.371 li
cp
f
1115.55 276.224 mo
1117.03 274.924 1118.75 273.978 1120.66 273.46 cv
1121.77 273.162 1121.45 271.411 1120.34 271.713 cv
1118.12 272.313 1116.12 273.356 1114.39 274.865 cv
1113.53 275.622 1114.68 276.983 1115.55 276.224 cv
1115.55 276.224 li
cp
f
1190.23 225.633 mo
1191.67 227.23 1192.43 229.134 1192.53 231.268 cv
1192.59 232.405 1194.35 232.073 1194.3 230.944 cv
1194.18 228.533 1193.22 226.288 1191.6 224.489 cv
1190.83 223.637 1189.46 224.778 1190.23 225.633 cv
1190.23 225.633 li
cp
f
1143.96 225.547 mo
1143.13 224.159 1141.98 223.114 1140.51 222.406 cv
1139.47 221.904 1138.86 223.575 1139.89 224.072 cv
1140.9 224.561 1141.76 225.351 1142.34 226.309 cv
1142.92 227.283 1144.55 226.532 1143.96 225.547 cv
1143.96 225.547 li
cp
f
1166.66 222.745 mo
1166.41 220.128 1166.03 217.434 1164.67 215.182 cv
1163.3 212.931 1160.69 211.223 1158.07 211.662 cv
1154.9 212.194 1153.03 215.452 1152.02 218.475 cv
1149.43 226.188 1149.54 234.609 1151.26 242.556 cv
1152.98 250.501 1156.25 258.038 1159.91 265.312 cv
1159.92 265.429 li
1164.39 251.789 1168.01 237.023 1166.66 222.745 cv
cp
1 1 1 rgb
f
1201.39 261.881 mo
1203.88 260.985 1206.42 259.948 1208.28 258.069 cv
1210.13 256.19 1211.14 253.259 1210.06 250.862 cv
1208.74 247.958 1205.08 246.98 1201.88 246.772 cv
1193.69 246.242 1185.49 248.463 1178.15 252.109 cv
1170.82 255.756 1164.28 260.786 1158.09 266.125 cv
1157.98 266.168 li
1172.43 267.018 1187.77 266.767 1201.39 261.881 cv
cp
f
1188.28 237.424 mo
1189.54 235.304 1190.75 233.056 1190.96 230.603 cv
1191.17 228.151 1190.13 225.437 1187.9 224.349 cv
1185.2 223.031 1181.98 224.484 1179.53 226.229 cv
1173.3 230.682 1168.72 237.13 1165.62 244.093 cv
1162.53 251.057 1160.83 258.552 1159.58 266.059 cv
1159.53 266.156 li
1170.47 258.232 1181.4 248.991 1188.28 237.424 cv
cp
f
1144.71 228.755 mo
1143.18 226.815 1141.51 224.879 1139.28 223.789 cv
1137.05 222.698 1134.13 222.657 1132.29 224.313 cv
1130.06 226.318 1130.24 229.825 1130.99 232.713 cv
1132.89 240.086 1137.27 246.671 1142.68 252.077 cv
1148.08 257.482 1154.51 261.788 1161.1 265.691 cv
1161.17 265.776 li
1157.74 252.787 1153.06 239.336 1144.71 228.755 cv
cp
f
1121.07 272.929 mo
1118.87 274.064 1116.64 275.336 1115.15 277.305 cv
1113.66 279.275 1113.08 282.119 1114.39 284.212 cv
1115.97 286.748 1119.49 287.21 1122.49 287.013 cv
1130.16 286.51 1137.5 283.451 1143.85 279.174 cv
1150.21 274.897 1155.66 269.432 1160.74 263.724 cv
1160.83 263.67 li
1147.31 264.639 1133.1 266.738 1121.07 272.929 cv
cp
f
1159.09 301.974 mo
1159.86 304.314 1160.76 306.7 1162.48 308.479 cv
1164.19 310.258 1166.93 311.289 1169.23 310.355 cv
1172.02 309.225 1173.06 305.868 1173.35 302.901 cv
1174.11 295.329 1172.27 287.658 1169.06 280.747 cv
1165.84 273.836 1161.29 267.615 1156.44 261.713 cv
1156.41 261.609 li
1155.15 274.979 1154.9 289.204 1159.09 301.974 cv
cp
f
1196 281.625 mo
1198.45 282.021 1201 282.321 1203.39 281.625 cv
1205.77 280.928 1207.95 278.989 1208.16 276.538 cv
1208.43 273.568 1205.89 271.116 1203.36 269.495 cv
1196.91 265.358 1189.18 263.464 1181.51 263.129 cv
1173.83 262.794 1166.16 263.948 1158.65 265.514 cv
1158.53 265.499 li
1169.96 272.731 1182.61 279.463 1196 281.625 cv
cp
f
1180.83 301.534 mo
1182.7 303.4 1184.71 305.245 1187.21 306.123 cv
1189.72 307.001 1192.83 306.679 1194.57 304.693 cv
1196.67 302.289 1196.03 298.593 1194.87 295.622 cv
1191.92 288.041 1186.44 281.604 1180.01 276.547 cv
1173.59 271.49 1166.23 267.726 1158.74 264.41 cv
1158.65 264.329 li
1163.95 277.675 1170.63 291.354 1180.83 301.534 cv
cp
f
1131 297.196 mo
1129.78 299.529 1128.62 301.996 1128.55 304.624 cv
1128.47 307.25 1129.73 310.084 1132.17 311.117 cv
1135.13 312.367 1138.48 310.631 1140.99 308.63 cv
1147.37 303.523 1151.88 296.384 1154.77 288.78 cv
1157.67 281.176 1159.03 273.086 1159.93 265.008 cv
1159.98 264.902 li
1148.77 273.981 1137.66 284.464 1131 297.196 cv
cp
f
1123.7 243.25 mo
1121.16 242.483 1118.5 241.803 1115.88 242.202 cv
1113.26 242.601 1110.67 244.342 1110.09 246.906 cv
1109.38 250.013 1111.71 252.968 1114.15 255.042 cv
1120.38 260.336 1128.28 263.437 1136.36 264.881 cv
1144.43 266.325 1152.71 266.193 1160.9 265.603 cv
1161.01 265.634 li
1149.97 256.359 1137.55 247.438 1123.7 243.25 cv
cp
f
1150.31 264.165 mo
1150.6 257.682 1154.7 256.309 1159.93 255.947 cv
1164.91 255.602 1168.31 260.081 1167.72 265.736 cv
1167.27 270.146 1163.52 273.669 1157.32 272.606 cv
1152.91 271.85 1150.11 268.593 1150.31 264.165 cv
cp
1 .560784 .396078 rgb
f
1126.92 297.248 mo
1125.73 298.992 1124.98 300.908 1124.64 302.984 cv
1124.45 304.113 1126.24 304.26 1126.42 303.137 cv
1126.71 301.373 1127.38 299.751 1128.39 298.272 cv
1129.03 297.324 1127.57 296.299 1126.92 297.248 cv
1126.92 297.248 li
cp
1 1 1 rgb
f
1115.73 274.101 mo
1117.22 272.801 1118.93 271.855 1120.85 271.337 cv
1121.95 271.039 1121.64 269.288 1120.52 269.59 cv
1118.31 270.189 1116.3 271.233 1114.58 272.742 cv
1113.71 273.499 1114.86 274.859 1115.73 274.101 cv
1115.73 274.101 li
cp
f
1190.41 223.51 mo
1191.85 225.107 1192.61 227.011 1192.72 229.145 cv
1192.78 230.282 1194.54 229.95 1194.48 228.821 cv
1194.36 226.41 1193.4 224.165 1191.78 222.366 cv
1191.02 221.514 1189.64 222.655 1190.41 223.51 cv
1190.41 223.51 li
cp
f
1144.14 223.424 mo
1143.31 222.036 1142.16 220.991 1140.7 220.283 cv
1139.66 219.781 1139.05 221.452 1140.07 221.949 cv
1141.09 222.438 1141.95 223.228 1142.52 224.186 cv
1143.11 225.16 1144.74 224.409 1144.14 223.424 cv
1144.14 223.424 li
cp
f
1752.86 181.017 mo
1752.23 174.291 1751.26 167.366 1747.74 161.579 cv
1744.23 155.792 1737.52 151.402 1730.79 152.531 cv
1722.65 153.898 1717.83 162.271 1715.23 170.041 cv
1708.6 189.868 1708.87 211.511 1713.29 231.935 cv
1717.7 252.358 1726.1 271.728 1735.51 290.422 cv
1735.55 290.724 li
1747.03 255.666 1756.33 217.714 1752.86 181.017 cv
cp
.909804 .458824 .4 rgb
f
1842.13 281.605 mo
1848.54 279.304 1855.07 276.637 1859.84 271.808 cv
1864.61 266.979 1867.21 259.446 1864.41 253.285 cv
1861.02 245.819 1851.63 243.308 1843.38 242.773 cv
1822.34 241.408 1801.26 247.118 1782.41 256.491 cv
1763.56 265.863 1746.75 278.792 1730.85 292.513 cv
1730.56 292.624 li
1767.71 294.809 1807.14 294.164 1842.13 281.605 cv
cp
f
1808.44 218.745 mo
1811.68 213.296 1814.79 207.517 1815.32 201.214 cv
1815.86 194.912 1813.2 187.937 1807.47 185.14 cv
1800.53 181.752 1792.24 185.488 1785.96 189.972 cv
1769.95 201.417 1758.17 217.989 1750.21 235.887 cv
1742.24 253.785 1737.89 273.048 1734.68 292.344 cv
1734.54 292.593 li
1762.67 272.229 1790.74 248.476 1808.44 218.745 cv
cp
f
1696.45 196.463 mo
1692.52 191.479 1688.23 186.501 1682.5 183.699 cv
1676.77 180.896 1669.25 180.792 1664.52 185.046 cv
1658.8 190.201 1659.27 199.213 1661.18 206.638 cv
1666.07 225.587 1677.32 242.514 1691.22 256.407 cv
1705.12 270.299 1721.63 281.367 1738.58 291.399 cv
1738.76 291.618 li
1729.94 258.231 1717.9 223.661 1696.45 196.463 cv
cp
f
1635.7 310.002 mo
1630.03 312.918 1624.3 316.188 1620.47 321.25 cv
1616.65 326.313 1615.16 333.622 1618.52 339.001 cv
1622.59 345.519 1631.63 346.708 1639.35 346.202 cv
1659.05 344.909 1677.91 337.045 1694.25 326.053 cv
1710.58 315.06 1724.59 301.014 1737.65 286.343 cv
1737.9 286.206 li
1703.14 288.695 1666.62 294.089 1635.7 310.002 cv
cp
f
1733.42 384.655 mo
1735.39 390.67 1737.7 396.802 1742.12 401.375 cv
1746.53 405.947 1753.57 408.595 1759.48 406.197 cv
1766.64 403.292 1769.31 394.664 1770.07 387.038 cv
1772.02 367.576 1767.29 347.858 1759.03 330.096 cv
1750.76 312.333 1739.07 296.343 1726.61 281.175 cv
1726.51 280.907 li
1723.28 315.271 1722.65 351.832 1733.42 384.655 cv
cp
f
1828.27 332.352 mo
1834.57 333.371 1841.14 334.141 1847.26 332.351 cv
1853.39 330.561 1858.99 325.579 1859.54 319.278 cv
1860.22 311.643 1853.69 305.341 1847.2 301.175 cv
1830.62 290.542 1810.76 285.676 1791.03 284.814 cv
1771.3 283.953 1751.6 286.917 1732.27 290.943 cv
1731.99 290.905 li
1761.35 309.492 1793.88 326.795 1828.27 332.352 cv
cp
f
1789.28 383.524 mo
1794.09 388.319 1799.27 393.062 1805.7 395.318 cv
1812.13 397.575 1820.13 396.747 1824.6 391.645 cv
1830.01 385.462 1828.36 375.964 1825.39 368.329 cv
1817.79 348.844 1803.7 332.299 1787.19 319.302 cv
1770.68 306.304 1751.77 296.628 1732.52 288.106 cv
1732.29 287.896 li
1745.91 322.2 1763.07 357.36 1789.28 383.524 cv
cp
f
1661.22 372.374 mo
1658.08 378.371 1655.11 384.712 1654.91 391.464 cv
1654.71 398.216 1657.95 405.501 1664.22 408.153 cv
1671.83 411.367 1680.45 406.905 1686.88 401.762 cv
1703.29 388.637 1714.88 370.286 1722.31 350.742 cv
1729.75 331.198 1733.27 310.405 1735.56 289.643 cv
1735.7 289.37 li
1706.89 312.706 1678.35 339.65 1661.22 372.374 cv
cp
f
1642.46 233.72 mo
1635.93 231.748 1629.1 230 1622.36 231.025 cv
1615.61 232.05 1608.97 236.527 1607.47 243.117 cv
1605.65 251.101 1611.64 258.696 1617.91 264.028 cv
1633.91 277.634 1654.23 285.604 1674.99 289.316 cv
1695.74 293.029 1717.02 292.689 1738.06 291.172 cv
1738.35 291.253 li
1709.97 267.414 1678.05 244.484 1642.46 233.72 cv
cp
f
1710.84 287.475 mo
1711.59 270.813 1722.13 267.284 1735.58 266.354 cv
1748.38 265.467 1757.1 276.979 1755.6 291.515 cv
1754.44 302.851 1744.81 311.904 1728.85 309.171 cv
1717.52 307.229 1710.33 298.857 1710.84 287.475 cv
cp
f
1650.73 372.506 mo
1647.67 376.991 1645.73 381.915 1644.86 387.252 cv
1644.38 390.153 1648.98 390.53 1649.45 387.643 cv
1650.2 383.109 1651.9 378.942 1654.5 375.14 cv
1656.16 372.703 1652.39 370.068 1650.73 372.506 cv
1650.73 372.506 li
cp
f
1621.97 313.014 mo
1625.79 309.672 1630.2 307.241 1635.12 305.91 cv
1637.96 305.143 1637.15 300.644 1634.28 301.42 cv
1628.59 302.96 1623.43 305.644 1619 309.521 cv
1616.78 311.466 1619.74 314.964 1621.97 313.014 cv
1621.97 313.014 li
cp
f
1813.92 182.983 mo
1817.61 187.089 1819.57 191.98 1819.85 197.466 cv
1819.99 200.388 1824.52 199.535 1824.38 196.634 cv
1824.07 190.437 1821.61 184.666 1817.44 180.043 cv
1815.47 177.851 1811.93 180.785 1813.92 182.983 cv
1813.92 182.983 li
cp
f
1695 182.761 mo
1692.86 179.193 1689.9 176.509 1686.14 174.688 cv
1683.47 173.399 1681.89 177.694 1684.54 178.971 cv
1687.14 180.228 1689.35 182.257 1690.83 184.72 cv
1692.34 187.223 1696.52 185.293 1695 182.761 cv
1695 182.761 li
cp
f
1753.34 175.56 mo
1752.7 168.834 1751.74 161.909 1748.22 156.122 cv
1744.7 150.335 1737.99 145.945 1731.27 147.074 cv
1723.12 148.441 1718.3 156.814 1715.7 164.583 cv
1709.07 184.411 1709.34 206.054 1713.76 226.478 cv
1718.17 246.901 1726.58 266.271 1735.98 284.965 cv
1736.02 285.267 li
1747.51 250.209 1756.8 212.257 1753.34 175.56 cv
cp
1 1 1 rgb
f
1842.6 276.148 mo
1849.01 273.847 1855.54 271.18 1860.31 266.351 cv
1865.08 261.522 1867.68 253.989 1864.88 247.828 cv
1861.5 240.362 1852.1 237.851 1843.85 237.316 cv
1822.81 235.951 1801.73 241.661 1782.88 251.034 cv
1764.03 260.407 1747.22 273.335 1731.32 287.056 cv
1731.03 287.167 li
1768.18 289.353 1807.61 288.707 1842.6 276.148 cv
cp
f
1808.91 213.288 mo
1812.16 207.839 1815.26 202.06 1815.8 195.757 cv
1816.33 189.455 1813.67 182.479 1807.94 179.683 cv
1801 176.295 1792.71 180.031 1786.43 184.515 cv
1770.42 195.959 1758.64 212.532 1750.68 230.43 cv
1742.72 248.328 1738.37 267.591 1735.15 286.888 cv
1735.01 287.136 li
1763.14 266.771 1791.22 243.019 1808.91 213.288 cv
cp
f
1696.92 191.006 mo
1692.99 186.021 1688.7 181.044 1682.97 178.242 cv
1677.25 175.439 1669.72 175.334 1665 179.589 cv
1659.27 184.744 1659.74 193.756 1661.66 201.181 cv
1666.54 220.13 1677.8 237.057 1691.7 250.949 cv
1705.6 264.842 1722.1 275.91 1739.05 285.942 cv
1739.24 286.161 li
1730.41 252.774 1718.38 218.204 1696.92 191.006 cv
cp
f
1636.17 304.545 mo
1630.5 307.461 1624.78 310.73 1620.95 315.793 cv
1617.12 320.855 1615.64 328.165 1619 333.544 cv
1623.07 340.062 1632.1 341.251 1639.82 340.745 cv
1659.53 339.452 1678.39 331.588 1694.72 320.596 cv
1711.06 309.603 1725.06 295.557 1738.12 280.886 cv
1738.37 280.749 li
1703.61 283.238 1667.09 288.632 1636.17 304.545 cv
cp
f
1733.89 379.198 mo
1735.86 385.214 1738.18 391.345 1742.59 395.917 cv
1747 400.49 1754.04 403.138 1759.95 400.74 cv
1767.11 397.835 1769.78 389.207 1770.55 381.581 cv
1772.5 362.119 1767.76 342.401 1759.5 324.639 cv
1751.24 306.876 1739.55 290.886 1727.08 275.718 cv
1726.98 275.45 li
1723.75 309.813 1723.12 346.375 1733.89 379.198 cv
cp
f
1828.74 326.895 mo
1835.05 327.914 1841.61 328.684 1847.74 326.894 cv
1853.86 325.104 1859.46 320.122 1860.02 313.821 cv
1860.69 306.186 1854.17 299.884 1847.67 295.718 cv
1831.1 285.085 1811.23 280.218 1791.5 279.357 cv
1771.77 278.496 1752.07 281.46 1732.74 285.486 cv
1732.46 285.448 li
1761.82 304.035 1794.35 321.338 1828.74 326.895 cv
cp
f
1789.76 378.066 mo
1794.56 382.862 1799.75 387.604 1806.17 389.861 cv
1812.6 392.118 1820.6 391.29 1825.07 386.188 cv
1830.48 380.005 1828.84 370.507 1825.86 362.872 cv
1818.27 343.387 1804.18 326.842 1787.67 313.845 cv
1771.16 300.847 1752.24 291.171 1732.99 282.649 cv
1732.77 282.439 li
1746.38 316.743 1763.54 351.903 1789.76 378.066 cv
cp
f
1661.69 366.917 mo
1658.56 372.914 1655.58 379.255 1655.38 386.007 cv
1655.18 392.759 1658.43 400.044 1664.7 402.696 cv
1672.3 405.91 1680.93 401.449 1687.35 396.305 cv
1703.76 383.18 1715.35 364.829 1722.79 345.285 cv
1730.23 325.741 1733.74 304.948 1736.04 284.186 cv
1736.17 283.913 li
1707.36 307.249 1678.82 334.193 1661.69 366.917 cv
cp
f
1642.93 228.263 mo
1636.41 226.291 1629.57 224.543 1622.83 225.568 cv
1616.09 226.593 1609.44 231.07 1607.94 237.66 cv
1606.12 245.644 1612.11 253.239 1618.38 258.571 cv
1634.39 272.177 1654.7 280.147 1675.46 283.859 cv
1696.21 287.572 1717.5 287.232 1738.53 285.715 cv
1738.83 285.796 li
1710.44 261.957 1678.52 239.027 1642.93 228.263 cv
cp
f
1711.31 282.018 mo
1712.07 265.355 1722.61 261.827 1736.05 260.896 cv
1748.85 260.01 1757.57 271.521 1756.08 286.058 cv
1754.91 297.394 1745.29 306.448 1729.33 303.714 cv
1717.99 301.772 1710.8 293.4 1711.31 282.018 cv
cp
1 .560784 .396078 rgb
f
1651.2 367.049 mo
1648.14 371.533 1646.21 376.458 1645.33 381.795 cv
1644.85 384.696 1649.45 385.073 1649.93 382.186 cv
1650.67 377.652 1652.38 373.485 1654.97 369.683 cv
1656.63 367.246 1652.87 364.611 1651.2 367.049 cv
1651.2 367.049 li
cp
1 1 1 rgb
f
1622.44 307.557 mo
1626.26 304.215 1630.67 301.784 1635.6 300.453 cv
1638.44 299.686 1637.63 295.187 1634.76 295.963 cv
1629.06 297.503 1623.9 300.187 1619.47 304.064 cv
1617.25 306.009 1620.21 309.507 1622.44 307.557 cv
1622.44 307.557 li
cp
f
1814.39 177.526 mo
1818.09 181.632 1820.04 186.523 1820.32 192.009 cv
1820.47 194.931 1825 194.078 1824.85 191.177 cv
1824.54 184.98 1822.08 179.209 1817.92 174.586 cv
1815.94 172.394 1812.41 175.328 1814.39 177.526 cv
1814.39 177.526 li
cp
f
1695.47 177.304 mo
1693.33 173.736 1690.38 171.052 1686.61 169.231 cv
1683.94 167.942 1682.37 172.237 1685.01 173.514 cv
1687.61 174.771 1689.83 176.801 1691.31 179.263 cv
1692.81 181.766 1696.99 179.836 1695.47 177.304 cv
1695.47 177.304 li
cp
f
2853.69 1542.85 mo
2853.15 1537.13 2852.33 1531.25 2849.34 1526.33 cv
2846.35 1521.42 2840.65 1517.69 2834.94 1518.65 cv
2828.02 1519.81 2823.92 1526.92 2821.72 1533.52 cv
2816.08 1550.37 2816.31 1568.75 2820.06 1586.1 cv
2823.81 1603.46 2830.95 1619.91 2838.94 1635.79 cv
2838.98 1636.05 li
2848.73 1606.26 2856.63 1574.02 2853.69 1542.85 cv
cp
.909804 .458824 .4 rgb
f
2929.52 1628.3 mo
2934.97 1626.35 2940.52 1624.08 2944.57 1619.98 cv
2948.62 1615.88 2950.83 1609.48 2948.45 1604.24 cv
2945.58 1597.9 2937.6 1595.77 2930.59 1595.31 cv
2912.71 1594.15 2894.8 1599 2878.79 1606.97 cv
2862.78 1614.93 2848.49 1625.91 2834.98 1637.57 cv
2834.74 1637.66 li
2866.3 1639.52 2899.8 1638.97 2929.52 1628.3 cv
cp
f
2900.9 1574.9 mo
2903.66 1570.27 2906.3 1565.36 2906.75 1560 cv
2907.21 1554.65 2904.95 1548.72 2900.08 1546.35 cv
2894.18 1543.47 2887.14 1546.64 2881.81 1550.45 cv
2868.2 1560.18 2858.19 1574.26 2851.43 1589.46 cv
2844.67 1604.67 2840.97 1621.03 2838.24 1637.43 cv
2838.12 1637.64 li
2862.02 1620.34 2885.87 1600.16 2900.9 1574.9 cv
cp
f
2805.76 1555.97 mo
2802.42 1551.73 2798.77 1547.5 2793.91 1545.12 cv
2789.05 1542.74 2782.65 1542.65 2778.64 1546.27 cv
2773.77 1550.65 2774.17 1558.3 2775.8 1564.61 cv
2779.95 1580.71 2789.51 1595.09 2801.32 1606.89 cv
2813.13 1618.7 2827.15 1628.1 2841.55 1636.62 cv
2841.71 1636.81 li
2834.21 1608.44 2823.99 1579.07 2805.76 1555.97 cv
cp
f
2754.15 1652.43 mo
2749.33 1654.9 2744.47 1657.68 2741.22 1661.98 cv
2737.96 1666.28 2736.7 1672.49 2739.56 1677.06 cv
2743.02 1682.6 2750.69 1683.61 2757.25 1683.18 cv
2773.99 1682.08 2790.02 1675.4 2803.89 1666.06 cv
2817.77 1656.72 2829.67 1644.79 2840.76 1632.33 cv
2840.97 1632.21 li
2811.44 1634.33 2780.42 1638.91 2754.15 1652.43 cv
cp
f
2837.17 1715.85 mo
2838.84 1720.96 2840.81 1726.17 2844.56 1730.05 cv
2848.31 1733.94 2854.29 1736.19 2859.31 1734.15 cv
2865.39 1731.68 2867.66 1724.35 2868.31 1717.87 cv
2869.97 1701.34 2865.94 1684.59 2858.92 1669.5 cv
2851.9 1654.41 2841.97 1640.82 2831.38 1627.94 cv
2831.3 1627.71 li
2828.55 1656.9 2828.02 1687.96 2837.17 1715.85 cv
cp
f
2917.75 1671.42 mo
2923.11 1672.28 2928.68 1672.93 2933.89 1671.41 cv
2939.09 1669.89 2943.85 1665.66 2944.32 1660.31 cv
2944.89 1653.82 2939.35 1648.47 2933.83 1644.93 cv
2919.75 1635.89 2902.87 1631.76 2886.11 1631.03 cv
2869.35 1630.3 2852.61 1632.82 2836.19 1636.23 cv
2835.95 1636.2 li
2860.9 1651.99 2888.53 1666.69 2917.75 1671.42 cv
cp
f
2884.63 1714.89 mo
2888.71 1718.96 2893.11 1722.99 2898.58 1724.91 cv
2904.04 1726.83 2910.83 1726.12 2914.63 1721.79 cv
2919.23 1716.54 2917.83 1708.47 2915.3 1701.98 cv
2908.85 1685.42 2896.88 1671.37 2882.85 1660.33 cv
2868.83 1649.29 2852.76 1641.07 2836.4 1633.82 cv
2836.21 1633.65 li
2847.78 1662.79 2862.36 1692.66 2884.63 1714.89 cv
cp
f
2775.83 1705.42 mo
2773.17 1710.51 2770.64 1715.9 2770.47 1721.63 cv
2770.3 1727.37 2773.06 1733.56 2778.39 1735.81 cv
2784.84 1738.54 2792.17 1734.75 2797.63 1730.38 cv
2811.57 1719.23 2821.42 1703.64 2827.74 1687.04 cv
2834.06 1670.43 2837.04 1652.77 2838.99 1635.13 cv
2839.1 1634.9 li
2814.63 1654.72 2790.38 1677.61 2775.83 1705.42 cv
cp
f
2759.89 1587.62 mo
2754.35 1585.94 2748.54 1584.46 2742.81 1585.33 cv
2737.09 1586.2 2731.44 1590.01 2730.16 1595.6 cv
2728.62 1602.39 2733.71 1608.84 2739.04 1613.37 cv
2752.63 1624.93 2769.89 1631.7 2787.53 1634.85 cv
2805.16 1638.01 2823.24 1637.72 2841.11 1636.43 cv
2841.36 1636.5 li
2817.25 1616.25 2790.13 1596.76 2759.89 1587.62 cv
cp
f
2817.99 1633.29 mo
2818.63 1619.13 2827.58 1616.13 2839 1615.34 cv
2849.88 1614.59 2857.29 1624.37 2856.02 1636.72 cv
2855.03 1646.35 2846.85 1654.04 2833.29 1651.72 cv
2823.66 1650.07 2817.55 1642.96 2817.99 1633.29 cv
cp
f
2766.92 1705.53 mo
2764.32 1709.34 2762.68 1713.52 2761.93 1718.06 cv
2761.53 1720.52 2765.43 1720.84 2765.83 1718.39 cv
2766.47 1714.54 2767.92 1711 2770.12 1707.77 cv
2771.53 1705.7 2768.33 1703.46 2766.92 1705.53 cv
2766.92 1705.53 li
cp
f
2742.48 1654.99 mo
2745.73 1652.15 2749.48 1650.08 2753.66 1648.95 cv
2756.07 1648.3 2755.39 1644.48 2752.95 1645.14 cv
2748.11 1646.44 2743.73 1648.72 2739.96 1652.02 cv
2738.07 1653.67 2740.59 1656.64 2742.48 1654.99 cv
2742.48 1654.99 li
cp
f
2905.56 1544.52 mo
2908.7 1548 2910.36 1552.16 2910.59 1556.82 cv
2910.72 1559.3 2914.57 1558.58 2914.45 1556.11 cv
2914.18 1550.85 2912.09 1545.95 2908.55 1542.02 cv
2906.87 1540.16 2903.87 1542.65 2905.56 1544.52 cv
2905.56 1544.52 li
cp
f
2804.53 1544.33 mo
2802.71 1541.3 2800.2 1539.02 2797 1537.47 cv
2794.73 1536.37 2793.39 1540.02 2795.64 1541.11 cv
2797.85 1542.17 2799.73 1543.9 2800.99 1545.99 cv
2802.27 1548.12 2805.82 1546.48 2804.53 1544.33 cv
2804.53 1544.33 li
cp
f
2854.09 1538.21 mo
2853.55 1532.5 2852.73 1526.61 2849.74 1521.7 cv
2846.75 1516.78 2841.06 1513.05 2835.34 1514.01 cv
2828.42 1515.17 2824.33 1522.28 2822.12 1528.88 cv
2816.48 1545.73 2816.72 1564.12 2820.47 1581.47 cv
2824.22 1598.82 2831.36 1615.27 2839.35 1631.16 cv
2839.38 1631.41 li
2849.14 1601.63 2857.03 1569.39 2854.09 1538.21 cv
cp
1 1 1 rgb
f
2929.93 1623.67 mo
2935.37 1621.71 2940.92 1619.45 2944.97 1615.34 cv
2949.02 1611.24 2951.23 1604.84 2948.86 1599.61 cv
2945.98 1593.26 2938 1591.13 2930.99 1590.68 cv
2913.11 1589.52 2895.2 1594.37 2879.19 1602.33 cv
2863.18 1610.29 2848.89 1621.28 2835.38 1632.93 cv
2835.14 1633.03 li
2866.7 1634.88 2900.2 1634.34 2929.93 1623.67 cv
cp
f
2901.31 1570.26 mo
2904.06 1565.63 2906.7 1560.72 2907.15 1555.37 cv
2907.61 1550.01 2905.35 1544.09 2900.48 1541.71 cv
2894.59 1538.83 2887.54 1542.01 2882.21 1545.82 cv
2868.6 1555.54 2858.6 1569.62 2851.83 1584.83 cv
2845.07 1600.03 2841.37 1616.4 2838.64 1632.79 cv
2838.52 1633 li
2862.42 1615.7 2886.27 1595.52 2901.31 1570.26 cv
cp
f
2806.16 1551.33 mo
2802.82 1547.1 2799.18 1542.87 2794.31 1540.49 cv
2789.45 1538.11 2783.05 1538.02 2779.04 1541.63 cv
2774.17 1546.01 2774.58 1553.67 2776.2 1559.98 cv
2780.35 1576.08 2789.92 1590.46 2801.72 1602.26 cv
2813.53 1614.06 2827.56 1623.46 2841.96 1631.99 cv
2842.11 1632.17 li
2834.61 1603.81 2824.39 1574.44 2806.16 1551.33 cv
cp
f
2754.55 1647.79 mo
2749.74 1650.27 2744.87 1653.05 2741.62 1657.35 cv
2738.37 1661.65 2737.11 1667.86 2739.96 1672.43 cv
2743.42 1677.96 2751.09 1678.97 2757.65 1678.54 cv
2774.39 1677.45 2790.42 1670.77 2804.29 1661.43 cv
2818.17 1652.09 2830.07 1640.16 2841.16 1627.69 cv
2841.38 1627.57 li
2811.85 1629.69 2780.82 1634.27 2754.55 1647.79 cv
cp
f
2837.57 1711.21 mo
2839.25 1716.32 2841.21 1721.53 2844.96 1725.42 cv
2848.71 1729.3 2854.69 1731.55 2859.71 1729.51 cv
2865.79 1727.05 2868.06 1719.72 2868.71 1713.24 cv
2870.37 1696.7 2866.35 1679.95 2859.33 1664.86 cv
2852.31 1649.77 2842.38 1636.19 2831.78 1623.3 cv
2831.7 1623.07 li
2828.96 1652.27 2828.42 1683.33 2837.57 1711.21 cv
cp
f
2918.15 1666.78 mo
2923.51 1667.64 2929.08 1668.3 2934.29 1666.78 cv
2939.49 1665.26 2944.25 1661.02 2944.72 1655.67 cv
2945.29 1649.18 2939.75 1643.83 2934.23 1640.29 cv
2920.15 1631.26 2903.28 1627.12 2886.52 1626.39 cv
2869.75 1625.66 2853.01 1628.18 2836.6 1631.6 cv
2836.35 1631.57 li
2861.3 1647.36 2888.93 1662.06 2918.15 1666.78 cv
cp
f
2885.03 1710.25 mo
2889.11 1714.33 2893.52 1718.35 2898.98 1720.27 cv
2904.44 1722.19 2911.23 1721.49 2915.03 1717.15 cv
2919.63 1711.9 2918.23 1703.83 2915.7 1697.34 cv
2909.25 1680.79 2897.28 1666.73 2883.26 1655.69 cv
2869.23 1644.65 2853.16 1636.43 2836.8 1629.19 cv
2836.62 1629.01 li
2848.18 1658.15 2862.76 1688.02 2885.03 1710.25 cv
cp
f
2776.23 1700.78 mo
2773.57 1705.87 2771.04 1711.26 2770.87 1717 cv
2770.7 1722.73 2773.46 1728.92 2778.79 1731.18 cv
2785.24 1733.91 2792.57 1730.12 2798.03 1725.75 cv
2811.97 1714.6 2821.82 1699.01 2828.14 1682.4 cv
2834.46 1665.8 2837.44 1648.13 2839.39 1630.49 cv
2839.51 1630.26 li
2815.03 1650.09 2790.78 1672.98 2776.23 1700.78 cv
cp
f
2760.29 1582.98 mo
2754.75 1581.31 2748.94 1579.82 2743.22 1580.7 cv
2737.49 1581.57 2731.84 1585.37 2730.57 1590.97 cv
2729.02 1597.75 2734.11 1604.2 2739.44 1608.73 cv
2753.03 1620.29 2770.3 1627.06 2787.93 1630.22 cv
2805.56 1633.37 2823.64 1633.08 2841.51 1631.79 cv
2841.76 1631.86 li
2817.65 1611.61 2790.53 1592.13 2760.29 1582.98 cv
cp
f
2818.39 1628.65 mo
2819.03 1614.5 2827.98 1611.5 2839.41 1610.71 cv
2850.28 1609.96 2857.69 1619.74 2856.42 1632.08 cv
2855.43 1641.71 2847.25 1649.41 2833.69 1647.08 cv
2824.06 1645.43 2817.95 1638.32 2818.39 1628.65 cv
cp
1 .560784 .396078 rgb
f
2767.32 1700.89 mo
2764.72 1704.7 2763.08 1708.89 2762.33 1713.42 cv
2761.93 1715.88 2765.83 1716.2 2766.24 1713.75 cv
2766.87 1709.9 2768.32 1706.36 2770.52 1703.13 cv
2771.93 1701.06 2768.73 1698.82 2767.32 1700.89 cv
2767.32 1700.89 li
cp
1 1 1 rgb
f
2742.89 1650.35 mo
2746.13 1647.51 2749.88 1645.45 2754.06 1644.31 cv
2756.48 1643.66 2755.79 1639.84 2753.35 1640.5 cv
2748.51 1641.81 2744.13 1644.09 2740.36 1647.38 cv
2738.48 1649.03 2740.99 1652.01 2742.89 1650.35 cv
2742.89 1650.35 li
cp
f
2905.96 1539.88 mo
2909.1 1543.37 2910.76 1547.52 2911 1552.18 cv
2911.12 1554.67 2914.97 1553.94 2914.85 1551.48 cv
2914.58 1546.21 2912.49 1541.31 2908.95 1537.38 cv
2907.28 1535.52 2904.28 1538.01 2905.96 1539.88 cv
2905.96 1539.88 li
cp
f
2804.93 1539.69 mo
2803.11 1536.66 2800.6 1534.38 2797.4 1532.83 cv
2795.14 1531.74 2793.8 1535.39 2796.04 1536.47 cv
2798.25 1537.54 2800.14 1539.26 2801.39 1541.36 cv
2802.67 1543.48 2806.22 1541.84 2804.93 1539.69 cv
2804.93 1539.69 li
cp
f
467.504 214.42 mo
466.965 208.706 466.146 202.823 463.157 197.906 cv
460.168 192.99 454.47 189.26 448.757 190.219 cv
441.835 191.381 437.741 198.494 435.533 205.095 cv
429.899 221.939 430.131 240.326 433.882 257.678 cv
437.633 275.029 444.771 291.485 452.762 307.367 cv
452.793 307.623 li
462.552 277.839 470.449 245.596 467.504 214.42 cv
cp
.909804 .458824 .4 rgb
f
543.342 299.876 mo
548.79 297.92 554.333 295.655 558.386 291.553 cv
562.438 287.451 564.648 281.05 562.273 275.816 cv
559.395 269.474 551.413 267.34 544.407 266.886 cv
526.528 265.726 508.618 270.577 492.606 278.54 cv
476.594 286.502 462.309 297.486 448.8 309.143 cv
448.558 309.237 li
480.121 311.094 513.617 310.545 543.342 299.876 cv
cp
f
514.723 246.472 mo
517.477 241.843 520.115 236.934 520.57 231.579 cv
521.025 226.224 518.766 220.298 513.899 217.923 cv
508.002 215.044 500.956 218.218 495.624 222.028 cv
482.019 231.75 472.012 245.83 465.248 261.035 cv
458.484 276.241 454.787 292.606 452.054 309 cv
451.936 309.21 li
475.839 291.91 499.689 271.731 514.723 246.472 cv
cp
f
419.58 227.542 mo
416.24 223.308 412.593 219.079 407.728 216.698 cv
402.864 214.318 396.469 214.229 392.455 217.843 cv
387.59 222.223 387.991 229.879 389.617 236.187 cv
393.768 252.286 403.331 266.666 415.14 278.468 cv
426.948 290.271 440.97 299.673 455.372 308.196 cv
455.527 308.382 li
448.028 280.019 437.805 250.648 419.58 227.542 cv
cp
f
367.966 324.001 mo
363.151 326.479 358.287 329.256 355.034 333.557 cv
351.781 337.857 350.522 344.067 353.376 348.638 cv
356.834 354.175 364.508 355.185 371.068 354.754 cv
387.809 353.657 403.832 346.976 417.709 337.637 cv
431.585 328.298 443.483 316.365 454.578 303.901 cv
454.791 303.784 li
425.262 305.899 394.237 310.481 367.966 324.001 cv
cp
f
450.985 387.423 mo
452.661 392.534 454.628 397.743 458.377 401.627 cv
462.126 405.512 468.104 407.762 473.125 405.725 cv
479.209 403.256 481.476 395.926 482.126 389.447 cv
483.784 372.913 479.763 356.162 472.742 341.072 cv
465.721 325.981 455.791 312.397 445.2 299.51 cv
445.119 299.283 li
442.372 328.477 441.837 359.538 450.985 387.423 cv
cp
f
531.568 342.989 mo
536.923 343.854 542.499 344.508 547.704 342.988 cv
552.908 341.467 557.665 337.234 558.138 331.881 cv
558.709 325.395 553.168 320.042 547.65 316.501 cv
533.569 307.468 516.692 303.334 499.931 302.602 cv
483.17 301.87 466.429 304.389 450.01 307.809 cv
449.769 307.776 li
474.714 323.568 502.349 338.268 531.568 342.989 cv
cp
f
498.446 386.462 mo
502.527 390.536 506.933 394.565 512.394 396.482 cv
517.856 398.399 524.649 397.696 528.447 393.361 cv
533.048 388.109 531.648 380.04 529.12 373.553 cv
522.668 356.999 510.696 342.943 496.67 331.901 cv
482.644 320.859 466.578 312.639 450.219 305.399 cv
450.031 305.221 li
461.596 334.364 476.176 364.234 498.446 386.462 cv
cp
f
389.65 376.989 mo
386.983 382.084 384.459 387.472 384.288 393.208 cv
384.117 398.944 386.873 405.133 392.203 407.386 cv
398.66 410.116 405.988 406.326 411.45 401.957 cv
425.387 390.806 435.233 375.216 441.553 358.612 cv
447.874 342.008 450.856 324.343 452.808 306.704 cv
452.921 306.472 li
428.448 326.298 404.199 349.189 389.65 376.989 cv
cp
f
373.708 259.195 mo
368.166 257.519 362.36 256.034 356.632 256.905 cv
350.905 257.776 345.257 261.58 343.982 267.178 cv
342.439 273.961 347.528 280.413 352.855 284.943 cv
366.449 296.502 383.712 303.273 401.344 306.427 cv
418.977 309.581 437.059 309.292 454.929 308.004 cv
455.18 308.072 li
431.066 287.819 403.948 268.339 373.708 259.195 cv
cp
f
431.805 304.862 mo
432.444 290.707 441.4 287.709 452.822 286.918 cv
463.697 286.166 471.103 295.945 469.835 308.295 cv
468.846 317.925 460.665 325.617 447.109 323.295 cv
437.477 321.645 431.369 314.533 431.805 304.862 cv
cp
f
380.736 377.102 mo
378.138 380.912 376.494 385.095 375.749 389.629 cv
375.344 392.094 379.248 392.414 379.651 389.961 cv
380.284 386.11 381.733 382.57 383.936 379.339 cv
385.349 377.269 382.149 375.031 380.736 377.102 cv
380.736 377.102 li
cp
f
356.303 326.56 mo
359.547 323.721 363.296 321.655 367.479 320.524 cv
369.89 319.873 369.204 316.05 366.765 316.709 cv
361.925 318.018 357.546 320.298 353.78 323.592 cv
351.892 325.245 354.409 328.216 356.303 326.56 cv
356.303 326.56 li
cp
f
519.373 216.09 mo
522.516 219.579 524.177 223.734 524.412 228.395 cv
524.537 230.876 528.388 230.152 528.264 227.688 cv
527.998 222.423 525.909 217.52 522.37 213.592 cv
520.692 211.73 517.691 214.223 519.373 216.09 cv
519.373 216.09 li
cp
f
418.346 215.902 mo
416.526 212.871 414.018 210.59 410.818 209.043 cv
408.551 207.948 407.212 211.597 409.457 212.682 cv
411.666 213.749 413.552 215.474 414.808 217.565 cv
416.084 219.692 419.638 218.053 418.346 215.902 cv
418.346 215.902 li
cp
f
467.907 209.784 mo
467.367 204.07 466.548 198.187 463.56 193.27 cv
460.571 188.354 454.873 184.624 449.16 185.583 cv
442.237 186.745 438.143 193.858 435.935 200.458 cv
430.302 217.303 430.534 235.69 434.285 253.042 cv
438.036 270.393 445.174 286.849 453.164 302.73 cv
453.196 302.986 li
462.955 273.203 470.851 240.96 467.907 209.784 cv
cp
1 1 1 rgb
f
543.745 295.24 mo
549.193 293.285 554.736 291.019 558.788 286.917 cv
562.84 282.814 565.051 276.414 562.675 271.18 cv
559.797 264.837 551.815 262.704 544.81 262.25 cv
526.931 261.09 509.02 265.94 493.008 273.903 cv
476.996 281.866 462.712 292.85 449.203 304.506 cv
448.96 304.601 li
480.523 306.458 514.019 305.91 543.745 295.24 cv
cp
f
515.125 241.836 mo
517.88 237.207 520.517 232.297 520.972 226.943 cv
521.427 221.588 519.168 215.662 514.302 213.287 cv
508.405 210.408 501.358 213.582 496.027 217.392 cv
482.422 227.115 472.414 241.194 465.65 256.399 cv
458.887 271.604 455.189 287.97 452.457 304.364 cv
452.339 304.575 li
476.241 287.273 500.091 267.095 515.125 241.836 cv
cp
f
419.982 222.906 mo
416.642 218.671 412.996 214.443 408.131 212.063 cv
403.267 209.682 396.872 209.592 392.857 213.207 cv
387.993 217.586 388.393 225.243 390.02 231.551 cv
394.171 247.649 403.734 262.029 415.542 273.832 cv
427.351 285.635 441.373 295.037 455.774 303.56 cv
455.93 303.746 li
448.43 275.382 438.207 246.012 419.982 222.906 cv
cp
f
368.369 319.365 mo
363.554 321.843 358.689 324.62 355.436 328.92 cv
352.183 333.221 350.925 339.432 353.779 344.001 cv
357.237 349.539 364.911 350.549 371.471 350.119 cv
388.211 349.021 404.235 342.34 418.111 333 cv
431.988 323.662 443.886 311.729 454.98 299.265 cv
455.193 299.148 li
425.664 301.263 394.639 305.845 368.369 319.365 cv
cp
f
451.387 382.787 mo
453.064 387.898 455.03 393.106 458.779 396.991 cv
462.529 400.876 468.507 403.125 473.528 401.088 cv
479.612 398.62 481.879 391.29 482.528 384.811 cv
484.186 368.277 480.165 351.526 473.144 336.436 cv
466.123 321.345 456.193 307.761 445.603 294.875 cv
445.521 294.647 li
442.774 323.841 442.239 354.902 451.387 382.787 cv
cp
f
531.971 338.353 mo
537.326 339.218 542.902 339.873 548.106 338.352 cv
553.31 336.831 558.068 332.598 558.54 327.245 cv
559.111 320.759 553.57 315.405 548.053 311.865 cv
533.972 302.832 517.095 298.698 500.333 297.966 cv
483.572 297.234 466.831 299.753 450.413 303.173 cv
450.171 303.141 li
475.117 318.932 502.751 333.631 531.971 338.353 cv
cp
f
498.848 381.826 mo
502.93 385.9 507.335 389.929 512.797 391.846 cv
518.259 393.763 525.052 393.06 528.849 388.725 cv
533.451 383.473 532.051 375.404 529.522 368.917 cv
523.07 352.363 511.099 338.308 497.073 327.265 cv
483.047 316.223 466.98 308.003 450.622 300.763 cv
450.434 300.585 li
461.998 329.728 476.579 359.598 498.848 381.826 cv
cp
f
390.052 372.353 mo
387.386 377.448 384.861 382.835 384.69 388.572 cv
384.519 394.308 387.276 400.497 392.605 402.75 cv
399.062 405.48 406.391 401.69 411.852 397.321 cv
425.789 386.169 435.635 370.58 441.956 353.976 cv
448.276 337.372 451.259 319.707 453.21 302.068 cv
453.324 301.836 li
428.85 321.662 404.601 344.553 390.052 372.353 cv
cp
f
374.111 254.559 mo
368.569 252.883 362.762 251.398 357.035 252.269 cv
351.307 253.14 345.659 256.943 344.385 262.542 cv
342.841 269.325 347.931 275.777 353.257 280.307 cv
366.852 291.866 384.114 298.637 401.747 301.791 cv
419.379 304.945 437.461 304.656 455.331 303.368 cv
455.582 303.437 li
431.468 283.183 404.351 263.703 374.111 254.559 cv
cp
f
432.208 300.226 mo
432.847 286.071 441.802 283.073 453.224 282.283 cv
464.1 281.53 471.506 291.309 470.237 303.659 cv
469.248 313.289 461.068 320.981 447.511 318.659 cv
437.88 317.009 431.771 309.896 432.208 300.226 cv
cp
1 .560784 .396078 rgb
f
381.139 372.466 mo
378.54 376.275 376.896 380.459 376.151 384.993 cv
375.747 387.458 379.651 387.778 380.054 385.326 cv
380.686 381.474 382.136 377.934 384.339 374.703 cv
385.751 372.633 382.552 370.395 381.139 372.466 cv
381.139 372.466 li
cp
1 1 1 rgb
f
356.705 321.923 mo
359.95 319.085 363.699 317.019 367.881 315.888 cv
370.292 315.236 369.607 311.414 367.167 312.074 cv
362.328 313.382 357.948 315.662 354.183 318.956 cv
352.294 320.608 354.811 323.58 356.705 321.923 cv
356.705 321.923 li
cp
f
519.776 211.454 mo
522.918 214.942 524.579 219.098 524.814 223.759 cv
524.939 226.24 528.79 225.516 528.666 223.052 cv
528.401 217.787 526.311 212.884 522.772 208.957 cv
521.095 207.094 518.094 209.587 519.776 211.454 cv
519.776 211.454 li
cp
f
418.749 211.266 mo
416.929 208.235 414.42 205.954 411.221 204.408 cv
408.954 203.313 407.615 206.961 409.86 208.045 cv
412.069 209.113 413.954 210.838 415.21 212.93 cv
416.487 215.056 420.04 213.417 418.749 211.266 cv
418.749 211.266 li
cp
f
534.617 655.454 mo
183.652 637.845 li
168.751 637.098 156.06 648.454 155.305 663.211 cv
118.177 1388.97 li
117.422 1403.73 128.89 1416.29 143.791 1417.04 cv
494.756 1434.65 li
509.657 1435.4 522.349 1424.04 523.103 1409.29 cv
560.231 683.528 li
560.986 668.771 549.518 656.202 534.617 655.454 cv
cp
.505882 .352941 .298039 rgb
f
2762.53 895.155 mo
2771.69 898.7 li
2773.23 926.092 li
2777.6 1003.89 li
2688.46 969.386 li
2743.24 914.487 li
2762.53 895.155 li
cp
.439216 .301961 .219608 rgb
f
2450.05 1597.02 mo
2468.62 1548.13 li
2468.62 1548.13 li
2468.76 1547.76 li
2470.75 1542.53 li
2470.75 1542.53 li
2474.77 1531.94 li
2688.46 969.386 li
2733.03 986.637 li
2756.78 995.829 li
2756.78 995.829 li
2777.6 1003.89 li
2563.91 1566.44 li
2559.89 1577.03 li
2559.89 1577.03 li
2539.19 1631.52 li
2534.14 1644.82 2519.21 1651.4 2505.85 1646.23 cv
2465.1 1630.46 li
2451.74 1625.29 2445 1610.32 2450.05 1597.02 cv
cp
f
2549.91 1541 mo
2763.6 978.448 li
2674.46 943.948 li
2460.77 1506.5 li
2549.91 1541 li
cp
1 .552941 .403922 rgb
f
2529.09 1532.94 mo
2742.78 970.391 li
2695.28 952.005 li
2481.59 1514.56 li
2529.09 1532.94 li
cp
1 .466667 .341176 rgb
f
2674.46 943.948 mo
2763.6 978.449 li
2759.22 900.653 li
2757.69 873.262 li
2748.53 869.716 li
2729.24 889.049 li
2674.46 943.948 li
cp
1 1 1 rgb
f
2729.24 889.049 mo
2759.22 900.653 li
2757.69 873.262 li
2748.53 869.716 li
2729.24 889.049 li
cp
.219608 .286275 .333333 rgb
f
2525.87 1604.27 mo
2545.88 1551.59 li
2456.75 1517.09 li
2436.74 1569.77 li
2431.31 1584.07 2438.55 1600.17 2452.92 1605.73 cv
2490.02 1620.09 li
2504.39 1625.65 2520.44 1618.57 2525.87 1604.27 cv
cp
.486275 .8 .858824 rgb
f
2543.75 1557.2 mo
2549.91 1541 li
2460.77 1506.5 li
2454.62 1522.7 li
2543.75 1557.2 li
cp
.286275 .388235 .454902 rgb
f
2450.59 1574.65 mo
2449.44 1580.68 2450.96 1586.91 2454.68 1591.82 cv
2456.56 1594.3 2452.98 1597.55 2451.08 1595.04 cv
2446.21 1588.62 2444.46 1580.99 2445.96 1573.14 cv
2446.55 1570.09 2451.17 1571.62 2450.59 1574.65 cv
2450.59 1574.65 li
cp
.913725 .956863 .964706 rgb
f
2465.01 1598.92 mo
2467.13 1600.16 2469.26 1601.39 2471.39 1602.63 cv
2474.1 1604.21 2471.45 1608.25 2468.74 1606.68 cv
2466.62 1605.44 2464.49 1604.21 2462.36 1602.97 cv
2459.65 1601.39 2462.3 1597.35 2465.01 1598.92 cv
2465.01 1598.92 li
cp
f
2493.26 1447.65 mo
2487.83 1461.45 2482.4 1475.26 2476.97 1489.07 cv
2475.83 1491.95 2471.19 1490.46 2472.33 1487.56 cv
2477.76 1473.75 2483.19 1459.95 2488.62 1446.14 cv
2489.76 1443.26 2494.4 1444.74 2493.26 1447.65 cv
2493.26 1447.65 li
cp
f
2508.48 1410.67 mo
2507.26 1413.88 2506.04 1417.1 2504.82 1420.32 cv
2503.72 1423.21 2499.08 1421.73 2500.19 1418.81 cv
2501.41 1415.59 2502.63 1412.38 2503.85 1409.16 cv
2504.95 1406.26 2509.59 1407.75 2508.48 1410.67 cv
2508.48 1410.67 li
cp
f
-13.0142 208.65 mo
21.1708 162.422 85.3676 158.246 138.188 163.894 cv
200.018 170.505 262.064 193.154 324.634 179.33 cv
353.888 172.866 377.796 157.255 399.112 136.9 cv
419.425 117.501 437.793 95.041 462.509 80.8496 cv
493.829 62.8657 529.415 66.5005 563.159 74.8047 cv
597.426 83.2383 630.661 94.5142 666.211 96.4048 cv
702.489 98.334 739.982 91.6807 770.821 71.8999 cv
797.311 54.9092 818.179 29.2949 825.753 -1.35938 cv
826.69 -5.15283 820.782 -6.771 819.844 -2.97266 cv
812.646 26.1553 792.918 50.502 767.728 66.6597 cv
738.999 85.0864 704.477 91.688 670.618 90.5288 cv
634.025 89.2754 599.975 77.6118 564.788 68.9521 cv
533.038 61.1387 499.277 57.0083 468.575 70.9053 cv
443.246 82.3711 424.087 103.379 404.878 122.671 cv
383.354 144.288 360.731 163.3 330.576 171.6 cv
268.537 188.677 204.974 165.828 143.368 158.413 cv
86.6298 151.583 18.4155 155.93 -18.3062 205.586 cv
-20.6387 208.741 -15.3233 211.772 -13.0142 208.65 cv
-13.0142 208.65 li
cp
.792157 .509804 .439216 rgb
f
2770.95 6.51563 mo
2778.05 21.8555 2781.77 38.5444 2781.82 55.4258 cv
2781.87 72.4443 2777.55 87.8081 2771.74 103.641 cv
2766.92 116.759 2765.99 129.248 2772.04 142.13 cv
2777.92 154.655 2788.4 164.669 2799.53 172.686 cv
2812.21 181.811 2826.31 189.001 2838.16 199.235 cv
2850.28 209.695 2857.35 223.118 2863.6 237.537 cv
2869.55 251.249 2875.67 264.542 2884.59 276.656 cv
2892.37 287.228 2901.47 296.814 2911.67 305.124 cv
2935.46 324.49 2964.41 336.787 2995.05 340.003 cv
2998.68 340.384 2998.66 334.753 2995.05 334.375 cv
2967.15 331.446 2940.39 320.375 2918.33 303.244 cv
2907.46 294.798 2897.64 284.875 2889.49 273.815 cv
2880.97 262.243 2874.94 249.598 2869.27 236.475 cv
2863.38 222.826 2857.02 209.464 2846.18 198.914 cv
2836.4 189.381 2824.51 182.355 2813.06 174.99 cv
2800.56 166.937 2788.23 157.989 2780.22 145.241 cv
2776.32 139.038 2773.56 132.053 2773.23 124.693 cv
2772.86 116.526 2775.78 108.933 2778.63 101.418 cv
2790.75 69.4331 2790.31 34.8936 2775.86 3.6748 cv
2774.33 .386719 2769.43 3.24316 2770.95 6.51563 cv
2770.95 6.51563 li
cp
f
2810.02 1219.73 mo
2803.25 1247.07 2807.51 1274.52 2827.65 1295.19 cv
2843.08 1311.04 2862.93 1322.2 2877.2 1339.22 cv
2884.71 1348.2 2889.92 1358.41 2892.39 1369.84 cv
2895.35 1383.56 2894.96 1397.67 2896.44 1411.56 cv
2899.04 1435.95 2911.2 1457.36 2931.1 1472.07 cv
2950.02 1486.04 2974.16 1493.02 2997.6 1488.99 cv
2998.58 1488.82 2999.39 1489.1 3000 1489.61 cv
3000 1494.12 li
2999.75 1494.26 2999.45 1494.36 2999.11 1494.42 cv
2973.34 1498.85 2946.98 1491.33 2926.42 1475.56 cv
2904.33 1458.61 2892.69 1434.93 2890.39 1407.63 cv
2889.11 1392.41 2889.59 1376.62 2884.28 1362.04 cv
2880 1350.29 2871.78 1340.7 2862.61 1332.35 cv
2845.43 1316.72 2824.31 1304.47 2811.84 1284.37 cv
2797.31 1260.95 2799.31 1231.53 2808.07 1206.45 cv
2817.9 1178.33 2836.18 1154.24 2850.38 1128.28 cv
2880.19 1073.77 2885.23 1010.98 2906.14 953.304 cv
2922.95 906.953 2951.43 861.202 2998.99 841.351 cv
2999.35 841.201 2999.69 841.131 3000 841.121 cv
3000 846.991 li
2946.48 869.622 2919.09 926.473 2903.88 978.805 cv
2895.78 1006.7 2889.88 1035.17 2881.95 1063.11 cv
2873.94 1091.27 2863.32 1118.03 2848.33 1143.27 cv
2833.79 1167.78 2816.97 1191.75 2810.02 1219.73 cv
cp
f
6.46526 1327.95 mo
33.3266 1335.96 37.8046 1368.42 40.3041 1391.82 cv
41.726 1405.13 43.2211 1418.68 48.6684 1431.07 cv
53.998 1443.19 63.4023 1452.38 71.2924 1462.82 cv
79.8242 1474.1 84.1742 1486.27 80.6396 1500.36 cv
77.0219 1514.77 68.3564 1527.32 62.3281 1540.77 cv
50.6801 1566.77 48.9643 1595.63 50.8676 1623.66 cv
54.414 1675.9 64.873 1733.32 100.241 1774.28 cv
117.92 1794.75 141.229 1809.2 164.018 1823.41 cv
187.539 1838.08 210.359 1853.31 228.972 1874.01 cv
249.283 1896.61 264.432 1924.53 268.702 1954.72 cv
273.081 1985.68 266.206 2018.55 246.672 2043.48 cv
244.276 2046.54 248.594 2050.88 251.016 2047.78 cv
285.017 2004.39 282.016 1944.22 254.622 1898.42 cv
240.63 1875.02 221.199 1855.23 199.136 1839.2 cv
175.749 1822.21 149.679 1809.07 126.976 1791.12 cv
104.105 1773.04 87.478 1749.86 76.9448 1722.86 cv
66.4492 1695.96 61.3696 1667.2 58.3334 1638.62 cv
55.0908 1608.1 54.4711 1575.97 66.2719 1547.03 cv
76.329 1522.37 97.226 1497.71 83.3344 1470.23 cv
76.7514 1457.21 65.0991 1447.62 57.6479 1435.16 cv
48.496 1419.86 47.6181 1401.67 45.6523 1384.44 cv
42.8632 1360 35.0024 1330.1 8.09808 1322.08 cv
4.30413 1320.95 2.68255 1326.82 6.46526 1327.95 cv
6.46526 1327.95 li
cp
f
480.787 1427.05 mo
129.821 1409.44 li
114.92 1408.69 103.453 1396.12 104.208 1381.37 cv
141.335 655.608 li
142.09 640.851 154.782 629.494 169.683 630.242 cv
520.648 647.851 li
535.549 648.599 547.017 661.167 546.262 675.925 cv
509.134 1401.68 li
508.379 1416.44 495.688 1427.8 480.787 1427.05 cv
cp
.219608 .286275 .333333 rgb
f
517.35 682.749 mo
483.367 1347.05 li
483.053 1353.19 477.78 1357.91 471.592 1357.6 cv
141.049 1341.01 li
134.847 1340.7 130.083 1335.48 130.397 1329.34 cv
164.38 665.039 li
164.694 658.904 169.968 654.179 176.169 654.49 cv
506.712 671.075 li
512.9 671.385 517.664 676.614 517.35 682.749 cv
cp
.631373 .901961 .933333 rgb
f
343.693 1384.67 mo
343.593 1386.38 li
343.481 1388.72 342.452 1390.87 340.685 1392.46 cv
338.931 1394.02 336.646 1394.81 334.29 1394.69 cv
282.761 1392.1 li
280.42 1391.99 278.221 1390.98 276.652 1389.24 cv
275.065 1387.48 274.255 1385.25 274.37 1382.92 cv
274.463 1381.18 li
274.575 1378.84 275.627 1376.69 277.378 1375.13 cv
278.204 1374.37 279.159 1373.8 280.183 1373.43 cv
281.305 1373.01 282.501 1372.8 283.762 1372.87 cv
335.304 1375.45 li
337.659 1375.58 339.835 1376.59 341.411 1378.35 cv
343.015 1380.08 343.797 1382.31 343.693 1384.67 cv
cp
343.941 1376.09 mo
341.746 1373.66 338.738 1372.26 335.461 1372.1 cv
283.913 1369.5 li
280.656 1369.32 277.497 1370.44 275.097 1372.62 cv
272.656 1374.79 271.242 1377.77 271.07 1381.02 cv
270.974 1382.74 li
270.813 1385.99 271.929 1389.08 274.121 1391.5 cv
276.307 1393.89 279.321 1395.32 282.602 1395.49 cv
334.143 1398.07 li
335.847 1398.17 337.541 1397.89 339.113 1397.31 cv
340.507 1396.77 341.81 1395.99 342.965 1394.97 cv
345.4 1392.78 346.814 1389.8 346.99 1386.56 cv
347.094 1384.82 li
347.249 1381.6 346.151 1378.48 343.941 1376.09 cv
cp
.360784 .45098 .501961 rgb
f
190.519 1307.23 mo
190.166 1307.36 189.755 1307.28 189.477 1307 cv
189.106 1306.61 189.117 1306 189.507 1305.64 cv
328.656 1174.88 li
329.069 1174.53 329.653 1174.53 330.025 1174.91 cv
330.396 1175.3 330.385 1175.91 329.995 1176.27 cv
190.847 1307.02 li
190.747 1307.12 190.638 1307.18 190.519 1307.23 cv
cp
1 1 1 rgb
f
262.583 1292.07 mo
262.23 1292.2 261.818 1292.12 261.54 1291.83 cv
261.169 1291.45 261.18 1290.84 261.57 1290.48 cv
337.063 1219.54 li
337.436 1219.17 338.065 1219.2 338.433 1219.57 cv
338.804 1219.95 338.793 1220.57 338.403 1220.93 cv
262.91 1291.86 li
262.81 1291.96 262.701 1292.02 262.583 1292.07 cv
cp
f
370.78 1352.39 mo
369.358 1352.47 li
141.049 1341.01 li
134.847 1340.7 130.083 1335.48 130.397 1329.34 cv
137.547 1189.56 li
139.55 1191.33 149.165 1200.49 146.488 1211.64 cv
143.499 1224.08 139.152 1309.06 173.793 1324.91 cv
208.434 1340.77 369.054 1332.82 370.78 1352.39 cv
cp
.698039 .980392 1 rgb
f
2415.42 118.413 mo
2575.94 55.7388 2757.36 133.8 2820.65 292.768 cv
2883.93 451.735 2805.11 631.411 2644.59 694.084 cv
2484.08 756.758 2302.65 678.697 2239.36 519.729 cv
2176.08 360.762 2254.9 181.086 2415.42 118.413 cv
cp
1 1 1 rgb
f
2261.59 511.036 mo
2232.25 437.327 2236.11 358.658 2266.02 291.301 cv
2275.01 271.075 2286.33 251.881 2299.82 234.147 cv
2299.84 234.14 li
2301.44 231.984 2303.11 229.87 2304.8 227.77 cv
2308.81 222.792 2313 217.941 2317.36 213.214 cv
2346.03 182.15 2382.05 156.928 2424.16 140.486 cv
2572.13 82.71 2739.99 154.925 2798.33 301.469 cv
2799.83 305.24 2801.24 309.025 2802.56 312.813 cv
2802.57 312.822 li
2807.94 328.152 2811.9 343.66 2814.51 359.188 cv
2814.91 361.538 2815.27 363.87 2815.62 366.22 cv
2815.63 366.229 li
2817.28 377.828 2818.19 389.415 2818.38 400.958 cv
2820.43 516.717 2750.76 627.131 2635.77 672.028 cv
2487.78 729.812 2319.94 657.589 2261.59 511.036 cv
cp
2828.14 401.439 mo
2828.14 401.43 li
2827.96 389.062 2826.98 376.623 2825.16 364.196 cv
2825.15 364.187 li
2825.15 364.177 2825.15 364.177 2825.14 364.159 cv
2825.04 363.35 2824.93 362.554 2824.79 361.737 cv
2824.79 361.724 2824.78 361.718 2824.78 361.718 cv
2824.1 357.219 2823.29 352.713 2822.4 348.222 cv
2822.39 348.213 li
2821.84 345.554 2821.27 342.894 2820.64 340.236 cv
2820.63 340.218 li
2820.03 337.559 2819.37 334.931 2818.68 332.264 cv
2818.67 332.236 li
2817.99 329.638 2817.27 327.049 2816.52 324.468 cv
2815.16 319.824 2813.7 315.22 2812.1 310.627 cv
2812.09 310.599 li
2810.63 306.351 2809.06 302.142 2807.38 297.934 cv
2747.08 146.446 2573.55 71.7939 2420.59 131.519 cv
2376.48 148.74 2338.83 175.288 2309.01 207.976 cv
2304.78 212.617 2300.71 217.37 2296.8 222.24 cv
2296.79 222.248 li
2295.29 224.122 2293.83 226.016 2292.38 227.916 cv
2278.49 246.099 2266.81 265.797 2257.52 286.541 cv
2226.24 356.357 2222.08 438.069 2252.54 514.571 cv
2312.85 666.078 2486.37 740.72 2639.34 680.996 cv
2757.99 634.667 2829.99 520.874 2828.14 401.439 cv
cp
1 .635294 .52549 rgb
f
2379.35 272.061 mo
2449.37 181.245 2563.24 145.219 2681.38 228.704 cv
2775.31 295.072 2787.31 425.458 2720.63 518.707 cv
2649.84 617.693 2519.5 626.924 2427.8 557.575 cv
2336.1 488.226 2309.32 362.876 2379.35 272.061 cv
cp
1 .560784 .396078 rgb
f
2414.79 269.951 mo
2414.34 261.943 li
2380.61 228.038 2341.09 199.804 2297.97 178.809 cv
2287.64 173.782 2276.09 169.06 2264.94 171.833 cv
2259.3 173.235 2254.26 176.484 2250 180.403 cv
2230.97 197.908 2228.57 230.3 2244.83 250.366 cv
2253.08 260.551 2264.84 267.217 2276.32 273.643 cv
2305.15 289.783 2333.98 305.924 2362.81 322.064 cv
2366.46 324.106 2370.27 326.199 2374.46 326.429 cv
2379.22 326.69 2383.76 324.495 2387.73 321.891 cv
2404.87 310.658 2415.48 290.291 2414.79 269.951 cv
cp
f
2398.34 285.226 mo
2460.69 204.368 2562.07 172.291 2667.26 246.623 cv
2750.89 305.715 2761.58 421.806 2702.2 504.831 cv
2639.18 592.965 2523.13 601.183 2441.48 539.438 cv
2359.83 477.692 2335.99 366.085 2398.34 285.226 cv
cp
.74902 .219608 .133333 rgb
f
2701.81 430.673 mo
2701.81 430.673 2740.58 356.471 2690.84 306.677 cv
2641.11 256.883 2589.52 240.057 2572.35 253.022 cv
2555.18 265.986 2621.12 306.724 2627.1 368.081 cv
2633.08 429.438 2676.46 479.5 2701.81 430.673 cv
cp
.831373 .262745 .207843 rgb
f
2262.05 206.624 mo
2272.1 185.803 2297.35 203.493 2308.46 212.591 cv
2312.51 215.907 2317.38 209.445 2313.35 206.142 cv
2303.56 198.124 2292.55 189.43 2279.2 189.206 cv
2268.55 189.027 2259.13 193.993 2254.51 203.573 cv
2252.24 208.27 2259.79 211.29 2262.05 206.624 cv
2262.05 206.624 li
cp
1 1 1 rgb
f
2318.58 220.013 mo
2322.14 222.706 2325.7 225.398 2329.26 228.09 cv
2333.43 231.246 2338.32 224.795 2334.15 221.641 cv
2330.59 218.948 2327.03 216.256 2323.47 213.563 cv
2319.3 210.408 2314.41 216.858 2318.58 220.013 cv
2318.58 220.013 li
cp
f
2725.16 299.547 mo
2733.32 313.219 2736.28 328.941 2740.34 344.141 cv
2741.67 349.097 2749.75 348.021 2748.41 343.005 cv
2744.17 327.155 2741.14 310.589 2732.63 296.33 cv
2730 291.925 2722.49 295.076 2725.16 299.547 cv
2725.16 299.547 li
cp
f
2741.77 362.292 mo
2742.49 366.502 2743.56 370.449 2745.02 374.463 cv
2746.8 379.343 2754.27 376.12 2752.49 371.245 cv
2751.28 367.924 2750.43 364.638 2749.83 361.157 cv
2748.96 356.047 2740.89 357.163 2741.77 362.292 cv
2741.77 362.292 li
cp
f
2430.68 289.663 mo
2430.68 289.663 2386.38 329.401 2391.85 398.498 cv
2397.33 467.594 2471.38 536.834 2513.4 548.764 cv
2584.31 568.896 2638.73 516.027 2614.26 478.654 cv
2589.79 441.281 2477.09 444.348 2484.04 323.683 cv
2485.56 297.304 2450.35 264.273 2430.68 289.663 cv
cp
.631373 .141176 .0941176 rgb
f
2634.64 82.5405 mo
2621.39 79.0962 2608.02 76.1816 2594.54 73.7959 cv
2587.31 72.5171 2585.6 83.6572 2592.8 84.9316 cv
2606.28 87.3174 2619.65 90.2324 2632.9 93.6768 cv
2639.99 95.5195 2641.65 84.3647 2634.64 82.5405 cv
2634.64 82.5405 li
cp
1 1 1 rgb
f
2650.87 103.216 mo
2654 104.755 2657.13 106.293 2660.26 107.832 cv
2662.93 109.145 2666.68 107.651 2667.74 104.909 cv
2668.9 101.941 2667.65 98.8989 2664.79 97.498 cv
2661.66 95.9595 2658.53 94.4214 2655.4 92.8828 cv
2652.73 91.5693 2648.98 93.0625 2647.92 95.8047 cv
2646.77 98.7729 2648.02 101.815 2650.87 103.216 cv
2650.87 103.216 li
cp
f
2277.89 629.653 mo
2292.41 649.708 2310.25 667.17 2330.71 681.258 cv
2336.69 685.379 2343.78 676.556 2337.74 672.4 cv
2318.03 658.821 2300.98 642.213 2286.99 622.882 cv
2282.72 616.993 2273.62 623.749 2277.89 629.653 cv
2277.89 629.653 li
cp
f
2351.8 693.376 mo
2356.13 696.148 2360.46 698.92 2364.79 701.692 cv
2367.37 703.34 2370.76 703.294 2372.78 700.745 cv
2374.54 698.522 2374.42 694.493 2371.82 692.833 cv
2367.49 690.062 2363.16 687.29 2358.83 684.518 cv
2356.25 682.869 2352.86 682.915 2350.84 685.464 cv
2349.08 687.688 2349.2 691.716 2351.8 693.376 cv
2351.8 693.376 li
cp
f
1322.8 1791.73 mo
1322.8 1791.73 1319.63 1833.11 1367.93 1839.23 cv
1416.22 1845.36 1440.37 1807.16 1440.37 1807.16 cv
1322.8 1791.73 li
cp
.505882 .352941 .298039 rgb
f
1430.21 589.466 mo
1430.21 589.466 1463.56 526.607 1427.24 509.485 cv
1390.91 492.363 1321.23 551.329 1321.23 551.329 cv
1321.82 591.532 li
1430.21 589.466 li
cp
f
2127.9 1937.68 mo
591.305 1666.07 li
576.945 1663.53 567.381 1649.94 569.944 1635.72 cv
768.879 531.914 li
772.12 513.934 789.464 501.96 807.619 505.17 cv
1573.46 668.536 li
2347.3 777.328 li
2361.74 779.88 2371.35 793.538 2368.77 807.834 cv
2170.44 1908.31 li
2166.88 1928.05 2147.83 1941.2 2127.9 1937.68 cv
cp
f
623.459 1598.44 mo
623.459 1598.44 635.598 1630.38 626.974 1641.39 cv
1346.24 1777.5 li
1346.24 1777.5 1338.76 1809.25 1376.66 1816.07 cv
1414.55 1822.9 1423.03 1798.49 1423.03 1798.49 cv
2099.42 1911.54 li
2099.42 1911.54 2102.37 1883.49 2141.65 1866.8 cv
1906.58 1771.9 li
1332.87 1575.26 li
887.295 1493.24 li
720.042 1526.33 li
623.459 1598.44 li
cp
f
1575.92 659.724 mo
1575.92 659.724 1503.83 526.91 1237.19 535.589 cv
973.633 544.167 819.433 490.699 819.433 490.699 cv
623.459 1598.44 li
623.459 1598.44 826.72 1670.2 1001.29 1660.47 cv
1174.69 1650.8 1377.39 1761.26 1377.39 1761.26 cv
1575.92 659.724 li
cp
f
1575.92 659.724 mo
1575.92 659.724 1645.56 564.216 1937.1 659.307 cv
2187.56 741.001 2344.74 760.316 2344.74 760.316 cv
2141.65 1866.8 li
2141.65 1866.8 1921.77 1873.19 1765.48 1795.55 cv
1567.56 1697.22 1377.39 1761.26 1377.39 1761.26 cv
1575.92 659.724 li
cp
f
913.529 640.03 mo
988.547 655.28 1064.6 670.483 1141.6 665.911 cv
1146.48 665.62 1146.53 658.039 1141.6 658.332 cv
1065.25 662.866 989.952 647.848 915.565 632.726 cv
910.768 631.75 908.696 639.047 913.529 640.03 cv
913.529 640.03 li
cp
f
1320.71 675.16 mo
1340.81 670.878 1361.47 673.385 1379.9 682.436 cv
1384.29 684.591 1388.24 678.096 1383.82 675.928 cv
1363.46 665.932 1340.97 663.102 1318.74 667.835 cv
1313.93 668.861 1315.9 676.185 1320.71 675.16 cv
1320.71 675.16 li
cp
f
1440.01 698.042 mo
1460.82 708.658 1481.62 719.273 1502.43 729.888 cv
1506.79 732.115 1510.74 725.617 1506.35 723.381 cv
1485.55 712.766 1464.74 702.15 1443.93 691.535 cv
1439.57 689.309 1435.63 695.807 1440.01 698.042 cv
1440.01 698.042 li
cp
f
905.089 681.055 mo
944.109 689.445 983.07 698.864 1022.43 705.593 cv
1057.41 711.574 1093.21 714.119 1128.03 705.77 cv
1132.81 704.622 1130.86 697.295 1126.06 698.445 cv
1090.85 706.889 1054.54 703.724 1019.26 697.376 cv
981.686 690.615 944.44 681.774 907.125 673.751 cv
902.333 672.721 900.266 680.018 905.089 681.055 cv
905.089 681.055 li
cp
f
1298.76 728.967 mo
1366.64 720.837 1430.18 751.896 1488.93 781.526 cv
1493.3 783.731 1497.25 777.233 1492.86 775.019 cv
1432.99 744.825 1367.94 713.102 1298.76 721.388 cv
1293.94 721.965 1293.87 729.553 1298.76 728.967 cv
1298.76 728.967 li
cp
f
891.558 738.714 mo
926.973 745.237 962.389 751.76 997.804 758.283 cv
1002.61 759.168 1004.69 751.873 999.84 750.979 cv
964.425 744.457 929.009 737.934 893.594 731.411 cv
888.789 730.525 886.709 737.822 891.558 738.714 cv
891.558 738.714 li
cp
f
1055.12 765.281 mo
1069.21 763.286 1083.37 762.263 1097.61 762.105 cv
1102.53 762.051 1102.56 754.472 1097.62 754.526 cv
1082.71 754.691 1067.91 755.868 1053.15 757.957 cv
1048.29 758.645 1050.28 765.965 1055.12 765.281 cv
1055.12 765.281 li
cp
f
856.392 987.745 mo
879.812 993.982 903.4 999.401 927.417 1002.83 cv
951.638 1006.29 976.032 1008.51 1000.33 1011.32 cv
1005.21 1011.88 1005.19 1004.3 1000.34 1003.74 cv
976.071 1000.94 951.69 998.789 927.517 995.249 cv
904.163 991.829 881.213 986.509 858.428 980.441 cv
853.675 979.175 851.629 986.477 856.392 987.745 cv
856.392 987.745 li
cp
f
1043.91 1010.66 mo
1087.93 1008.23 1132.28 1011.74 1175.91 1017.56 cv
1214.84 1022.75 1253.89 1029.74 1291.62 1040.71 cv
1296.35 1042.08 1298.39 1034.78 1293.66 1033.4 cv
1256.03 1022.46 1217.11 1015.54 1178.3 1010.3 cv
1133.88 1004.31 1088.74 1000.6 1043.91 1003.08 cv
1039.02 1003.35 1038.97 1010.93 1043.91 1010.66 cv
1043.91 1010.66 li
cp
f
1337.72 1053.24 mo
1371.67 1062.64 1404.94 1075.68 1435.7 1092.8 cv
1439.99 1095.18 1443.92 1088.68 1439.62 1086.29 cv
1408.3 1068.86 1374.33 1055.51 1339.76 1045.93 cv
1335.01 1044.62 1332.97 1051.92 1337.72 1053.24 cv
1337.72 1053.24 li
cp
f
877.957 910.379 mo
901.377 916.616 924.965 922.036 948.982 925.467 cv
973.203 928.928 997.597 931.144 1021.9 933.955 cv
1026.77 934.519 1026.75 926.937 1021.9 926.376 cv
997.636 923.569 973.255 921.423 949.081 917.884 cv
925.728 914.463 902.778 909.143 879.993 903.076 cv
875.24 901.81 873.194 909.111 877.957 910.379 cv
877.957 910.379 li
cp
f
1065.47 933.291 mo
1109.49 930.86 1153.85 934.376 1197.47 940.196 cv
1236.4 945.39 1275.46 952.37 1313.19 963.342 cv
1317.92 964.716 1319.95 957.413 1315.22 956.038 cv
1277.6 945.096 1238.68 938.177 1199.86 932.938 cv
1155.45 926.942 1110.31 923.236 1065.48 925.712 cv
1060.59 925.982 1060.54 933.563 1065.47 933.291 cv
1065.47 933.291 li
cp
f
1359.29 975.874 mo
1393.23 985.279 1426.5 998.313 1457.26 1015.43 cv
1461.56 1017.82 1465.48 1011.31 1461.19 1008.92 cv
1429.86 991.492 1395.89 978.147 1361.32 968.569 cv
1356.58 967.256 1354.54 974.558 1359.29 975.874 cv
1359.29 975.874 li
cp
f
900.678 828.865 mo
924.098 835.102 947.686 840.521 971.704 843.953 cv
995.924 847.414 1020.32 849.629 1044.62 852.44 cv
1049.5 853.004 1049.47 845.422 1044.62 844.861 cv
1020.36 842.055 995.977 839.909 971.803 836.369 cv
948.449 832.949 925.499 827.629 902.714 821.561 cv
897.961 820.295 895.915 827.597 900.678 828.865 cv
900.678 828.865 li
cp
f
1088.2 851.776 mo
1132.22 849.345 1176.57 852.861 1220.19 858.681 cv
1259.12 863.875 1298.18 870.855 1335.91 881.827 cv
1340.64 883.202 1342.67 875.898 1337.95 874.523 cv
1300.32 863.582 1261.4 856.663 1222.58 851.423 cv
1178.17 845.428 1133.03 841.722 1088.2 844.197 cv
1083.31 844.467 1083.26 852.049 1088.2 851.776 cv
1088.2 851.776 li
cp
f
1382.01 894.359 mo
1415.96 903.765 1449.23 916.799 1479.98 933.915 cv
1484.28 936.304 1488.2 929.799 1483.91 927.408 cv
1452.59 909.978 1418.61 896.633 1384.04 887.055 cv
1379.3 885.741 1377.26 893.043 1382.01 894.359 cv
1382.01 894.359 li
cp
f
1347.72 472.005 mo
1347.72 472.005 1203.67 444.832 1186.19 625.394 cv
1168.71 805.956 1079.15 891.58 1021.41 908.33 cv
1067.83 922.519 li
1077.68 959.693 li
1077.68 959.693 1228.61 908.363 1253.87 727.104 cv
1279.12 545.846 1395.36 496.932 1427.24 509.485 cv
1347.72 472.005 li
cp
f
1013.36 1614.4 mo
1017.91 1612.55 1022.8 1612.75 1027.36 1614.38 cv
1032 1616.03 1034.01 1608.72 1029.4 1607.08 cv
1022.8 1604.73 1016.01 1605.2 1009.59 1607.81 cv
1005.04 1609.66 1008.86 1616.23 1013.36 1614.4 cv
1013.36 1614.4 li
cp
f
1759.14 1750.73 mo
1766.06 1754.7 1773.57 1756.81 1781.56 1757.06 cv
1786.48 1757.21 1786.49 1749.63 1781.56 1749.48 cv
1774.93 1749.27 1768.81 1747.52 1763.06 1744.22 cv
1758.8 1741.78 1754.88 1748.28 1759.14 1750.73 cv
1759.14 1750.73 li
cp
f
1781.99 1186.46 mo
1785.38 1185.65 1789.65 1184.39 1793.08 1185.58 cv
1796.99 1186.93 1797.11 1190.1 1799.24 1192.75 cv
1801.26 1195.27 1803.66 1196.75 1806.92 1197.13 cv
1810.96 1197.58 1814.9 1195.93 1818.68 1194.78 cv
1820.3 1194.28 1822.26 1193.41 1823.97 1193.5 cv
1827.3 1193.66 1828.11 1195.81 1830.44 1197.69 cv
1833.45 1200.09 1836.76 1200.51 1840.46 1200.14 cv
1842.9 1199.9 1845.21 1199.08 1847.61 1198.68 cv
1852.93 1197.78 1855.85 1200.16 1859.82 1203.17 cv
1863.44 1205.92 1866.61 1207.75 1871.27 1208.28 cv
1880.1 1209.29 1886.81 1209.64 1893.74 1215.88 cv
1897.37 1219.16 1902.86 1213.88 1899.22 1210.59 cv
1894.78 1206.59 1889.74 1203.49 1883.89 1201.98 cv
1881.08 1201.25 1878.35 1201.07 1875.47 1200.86 cv
1869.47 1200.43 1866.31 1198.42 1861.63 1194.96 cv
1857.44 1191.87 1853.51 1190.37 1848.22 1190.93 cv
1845.48 1191.22 1842.74 1192.48 1840.01 1192.53 cv
1835.63 1192.61 1834.56 1190.12 1831.41 1187.96 cv
1828.43 1185.92 1824.95 1185.65 1821.46 1186.22 cv
1817.4 1186.88 1811.41 1190.67 1807.31 1189.41 cv
1803.34 1188.19 1801.76 1180.98 1797.03 1178.97 cv
1791.64 1176.69 1785.51 1177.82 1780.03 1179.13 cv
1775.24 1180.27 1777.19 1187.6 1781.99 1186.46 cv
1781.99 1186.46 li
cp
f
1297.39 1774.68 mo
1297.39 1774.68 1294.22 1816.06 1342.52 1822.18 cv
1390.81 1828.31 1414.95 1790.11 1414.95 1790.11 cv
1297.39 1774.68 li
cp
1 .560784 .396078 rgb
f
1404.8 572.417 mo
1404.8 572.417 1438.15 509.558 1401.82 492.436 cv
1365.5 475.314 1295.82 534.28 1295.82 534.28 cv
1296.4 574.483 li
1404.8 572.417 li
cp
.941176 .439216 .298039 rgb
f
2102.48 1920.63 mo
565.893 1649.02 li
551.533 1646.48 541.97 1632.89 544.533 1618.67 cv
743.467 514.865 li
746.707 496.885 764.052 484.911 782.207 488.121 cv
1548.05 651.486 li
2321.89 760.279 li
2336.32 762.831 2345.94 776.489 2343.36 790.785 cv
2145.03 1891.26 li
2141.47 1911 2122.42 1924.15 2102.48 1920.63 cv
cp
1 .560784 .396078 rgb
f
598.048 1581.39 mo
598.048 1581.39 610.186 1613.33 601.562 1624.34 cv
1320.83 1760.45 li
1320.83 1760.45 1313.35 1792.2 1351.24 1799.02 cv
1389.14 1805.85 1397.62 1781.44 1397.62 1781.44 cv
2074.01 1894.49 li
2074.01 1894.49 2076.96 1866.44 2116.24 1849.75 cv
1881.17 1754.85 li
1307.45 1558.21 li
861.883 1476.19 li
694.63 1509.28 li
598.048 1581.39 li
cp
.611765 .85098 .937255 rgb
f
1550.51 642.674 mo
1550.51 642.674 1478.42 509.861 1211.78 518.54 cv
948.221 527.118 794.021 473.649 794.021 473.649 cv
598.048 1581.39 li
598.048 1581.39 801.309 1653.15 975.88 1643.42 cv
1149.28 1633.75 1351.98 1744.21 1351.98 1744.21 cv
1550.51 642.674 li
cp
.929412 .976471 .984314 rgb
f
1550.51 642.674 mo
1550.51 642.674 1620.15 547.167 1911.69 642.258 cv
2162.15 723.952 2319.33 743.267 2319.33 743.267 cv
2116.24 1849.75 li
2116.24 1849.75 1896.36 1856.14 1740.07 1778.5 cv
1542.14 1680.17 1351.98 1744.21 1351.98 1744.21 cv
1550.51 642.674 li
cp
f
888.118 622.98 mo
963.135 638.231 1039.19 653.434 1116.19 648.861 cv
1121.07 648.571 1121.12 640.989 1116.19 641.282 cv
1039.84 645.816 964.54 630.799 890.153 615.677 cv
885.356 614.701 883.284 621.998 888.118 622.98 cv
888.118 622.98 li
cp
.611765 .85098 .937255 rgb
f
1295.3 658.11 mo
1315.4 653.829 1336.05 656.335 1354.49 665.386 cv
1358.88 667.542 1362.82 661.046 1358.41 658.879 cv
1338.05 648.882 1315.56 646.052 1293.33 650.786 cv
1288.52 651.812 1290.48 659.135 1295.3 658.11 cv
1295.3 658.11 li
cp
f
1414.6 680.993 mo
1435.41 691.608 1456.21 702.224 1477.02 712.839 cv
1481.38 715.065 1485.32 708.567 1480.94 706.332 cv
1460.14 695.717 1439.33 685.101 1418.52 674.486 cv
1414.16 672.26 1410.22 678.758 1414.6 680.993 cv
1414.6 680.993 li
cp
f
879.677 664.006 mo
918.697 672.396 957.658 681.814 997.014 688.544 cv
1031.99 694.524 1067.8 697.069 1102.61 688.72 cv
1107.4 687.572 1105.44 680.246 1100.65 681.396 cv
1065.44 689.839 1029.13 686.675 993.849 680.327 cv
956.275 673.565 919.028 664.725 881.713 656.702 cv
876.921 655.671 874.854 662.969 879.677 664.006 cv
879.677 664.006 li
cp
f
1273.35 711.918 mo
1341.23 703.788 1404.77 734.847 1463.52 764.477 cv
1467.89 766.682 1471.83 760.184 1467.44 757.97 cv
1407.58 727.775 1342.53 696.053 1273.35 704.339 cv
1268.53 704.916 1268.46 712.504 1273.35 711.918 cv
1273.35 711.918 li
cp
f
866.146 721.665 mo
901.561 728.188 936.977 734.711 972.392 741.234 cv
977.197 742.119 979.277 734.823 974.428 733.93 cv
939.013 727.407 903.597 720.884 868.182 714.361 cv
863.377 713.476 861.298 720.772 866.146 721.665 cv
866.146 721.665 li
cp
f
1029.7 748.231 mo
1043.8 746.237 1057.96 745.214 1072.2 745.056 cv
1077.12 745.002 1077.14 737.422 1072.2 737.477 cv
1057.3 737.642 1042.5 738.819 1027.74 740.907 cv
1022.88 741.595 1024.87 748.916 1029.7 748.231 cv
1029.7 748.231 li
cp
f
830.98 970.696 mo
854.4 976.933 877.988 982.352 902.005 985.784 cv
926.226 989.244 950.62 991.46 974.922 994.271 cv
979.797 994.835 979.773 987.253 974.925 986.692 cv
950.659 983.886 926.278 981.74 902.105 978.2 cv
878.751 974.78 855.801 969.459 833.016 963.392 cv
828.264 962.126 826.217 969.427 830.98 970.696 cv
830.98 970.696 li
cp
f
1018.5 993.607 mo
1062.52 991.176 1106.87 994.692 1150.5 1000.51 cv
1189.43 1005.71 1228.48 1012.69 1266.21 1023.66 cv
1270.94 1025.03 1272.98 1017.73 1268.25 1016.35 cv
1230.62 1005.41 1191.7 998.494 1152.89 993.254 cv
1108.47 987.258 1063.33 983.552 1018.5 986.028 cv
1013.61 986.298 1013.56 993.88 1018.5 993.607 cv
1018.5 993.607 li
cp
f
1312.31 1036.19 mo
1346.26 1045.6 1379.53 1058.63 1410.29 1075.75 cv
1414.58 1078.13 1418.51 1071.63 1414.21 1069.24 cv
1382.89 1051.81 1348.91 1038.46 1314.34 1028.89 cv
1309.6 1027.57 1307.56 1034.87 1312.31 1036.19 cv
1312.31 1036.19 li
cp
f
852.545 893.33 mo
875.965 899.567 899.553 904.986 923.57 908.418 cv
947.791 911.879 972.185 914.095 996.487 916.906 cv
1001.36 917.47 1001.34 909.888 996.49 909.327 cv
972.224 906.52 947.843 904.374 923.67 900.834 cv
900.316 897.414 877.366 892.094 854.581 886.026 cv
849.829 884.761 847.782 892.062 852.545 893.33 cv
852.545 893.33 li
cp
f
1040.06 916.242 mo
1084.08 913.811 1128.44 917.327 1172.06 923.147 cv
1210.99 928.34 1250.05 935.321 1287.78 946.292 cv
1292.5 947.667 1294.54 940.364 1289.81 938.989 cv
1252.19 928.047 1213.26 921.128 1174.45 915.888 cv
1130.04 909.893 1084.89 906.187 1040.06 908.663 cv
1035.17 908.933 1035.13 916.514 1040.06 916.242 cv
1040.06 916.242 li
cp
f
1333.87 958.824 mo
1367.82 968.229 1401.09 981.264 1431.85 998.381 cv
1436.14 1000.77 1440.07 994.265 1435.77 991.874 cv
1404.45 974.443 1370.48 961.098 1335.91 951.52 cv
1331.17 950.207 1329.13 957.509 1333.87 958.824 cv
1333.87 958.824 li
cp
f
875.267 811.815 mo
898.686 818.052 922.274 823.472 946.292 826.903 cv
970.512 830.364 994.907 832.58 1019.21 835.391 cv
1024.08 835.955 1024.06 828.373 1019.21 827.812 cv
994.945 825.005 970.564 822.859 946.391 819.32 cv
923.038 815.899 900.087 810.58 877.302 804.512 cv
872.55 803.246 870.503 810.547 875.267 811.815 cv
875.267 811.815 li
cp
f
1062.78 834.727 mo
1106.8 832.296 1151.16 835.812 1194.78 841.632 cv
1233.71 846.826 1272.77 853.806 1310.5 864.778 cv
1315.22 866.152 1317.26 858.849 1312.54 857.474 cv
1274.91 846.532 1235.99 839.613 1197.17 834.374 cv
1152.76 828.378 1107.62 824.672 1062.79 827.148 cv
1057.9 827.418 1057.85 835 1062.78 834.727 cv
1062.78 834.727 li
cp
f
1356.6 877.31 mo
1390.54 886.715 1423.81 899.75 1454.57 916.866 cv
1458.86 919.254 1462.79 912.75 1458.5 910.359 cv
1427.17 892.929 1393.2 879.583 1358.63 870.005 cv
1353.89 868.692 1351.85 875.994 1356.6 877.31 cv
1356.6 877.31 li
cp
f
1322.3 454.956 mo
1322.3 454.956 1178.26 427.782 1160.78 608.344 cv
1143.3 788.906 1053.74 874.531 996.001 891.28 cv
1042.41 905.469 li
1052.27 942.644 li
1052.27 942.644 1203.2 891.313 1228.45 710.055 cv
1253.71 528.797 1369.94 479.883 1401.82 492.436 cv
1322.3 454.956 li
cp
1 .560784 .396078 rgb
f
987.952 1597.35 mo
992.501 1595.5 997.387 1595.71 1001.95 1597.33 cv
1006.58 1598.98 1008.6 1591.67 1003.99 1590.03 cv
997.389 1587.68 990.595 1588.15 984.177 1590.76 cv
979.629 1592.61 983.451 1599.18 987.952 1597.35 cv
987.952 1597.35 li
cp
.611765 .85098 .937255 rgb
f
1733.73 1733.68 mo
1740.65 1737.65 1748.16 1739.76 1756.15 1740.01 cv
1761.07 1740.16 1761.08 1732.58 1756.15 1732.43 cv
1749.51 1732.22 1743.4 1730.47 1737.65 1727.17 cv
1733.39 1724.73 1729.47 1731.23 1733.73 1733.68 cv
1733.73 1733.68 li
cp
f
1756.58 1169.41 mo
1759.97 1168.6 1764.24 1167.34 1767.67 1168.53 cv
1771.58 1169.88 1771.7 1173.05 1773.83 1175.7 cv
1775.85 1178.22 1778.25 1179.71 1781.51 1180.08 cv
1785.55 1180.54 1789.49 1178.88 1793.26 1177.73 cv
1794.89 1177.23 1796.85 1176.36 1798.55 1176.45 cv
1801.89 1176.61 1802.7 1178.76 1805.03 1180.64 cv
1808.03 1183.04 1811.35 1183.46 1815.05 1183.09 cv
1817.49 1182.85 1819.8 1182.03 1822.2 1181.63 cv
1827.52 1180.73 1830.44 1183.11 1834.41 1186.12 cv
1838.03 1188.87 1841.2 1190.7 1845.86 1191.23 cv
1854.69 1192.24 1861.4 1192.59 1868.32 1198.83 cv
1871.96 1202.11 1877.45 1196.83 1873.8 1193.54 cv
1869.36 1189.54 1864.33 1186.44 1858.48 1184.93 cv
1855.67 1184.2 1852.93 1184.02 1850.06 1183.81 cv
1844.06 1183.38 1840.9 1181.38 1836.22 1177.91 cv
1832.03 1174.82 1828.09 1173.32 1822.81 1173.88 cv
1820.07 1174.17 1817.33 1175.43 1814.59 1175.48 cv
1810.22 1175.56 1809.14 1173.07 1806 1170.91 cv
1803.02 1168.87 1799.54 1168.6 1796.05 1169.17 cv
1791.99 1169.83 1786 1173.62 1781.9 1172.36 cv
1777.93 1171.14 1776.35 1163.93 1771.61 1161.92 cv
1766.23 1159.64 1760.1 1160.78 1754.61 1162.08 cv
1749.83 1163.22 1751.78 1170.55 1756.58 1169.41 cv
1756.58 1169.41 li
cp
f
1781.49 728.545 mo
1780.89 722.215 1779.98 715.697 1776.67 710.25 cv
1773.36 704.803 1767.05 700.671 1760.72 701.733 cv
1753.05 703.021 1748.51 710.901 1746.07 718.214 cv
1739.83 736.876 1740.08 757.248 1744.24 776.471 cv
1748.39 795.695 1756.3 813.927 1765.16 831.522 cv
1765.19 831.806 li
1776 798.808 1784.75 763.086 1781.49 728.545 cv
cp
1 .552941 .403922 rgb
f
1865.51 823.224 mo
1871.55 821.057 1877.69 818.547 1882.18 814.002 cv
1886.67 809.457 1889.12 802.366 1886.48 796.567 cv
1883.3 789.541 1874.45 787.177 1866.69 786.673 cv
1846.88 785.388 1827.04 790.763 1809.3 799.584 cv
1791.56 808.407 1775.73 820.576 1760.77 833.49 cv
1760.5 833.595 li
1795.47 835.652 1832.58 835.044 1865.51 823.224 cv
cp
f
1833.8 764.057 mo
1836.85 758.928 1839.78 753.489 1840.28 747.556 cv
1840.78 741.624 1838.28 735.059 1832.89 732.427 cv
1826.36 729.237 1818.55 732.754 1812.64 736.975 cv
1797.57 747.747 1786.48 763.345 1778.99 780.191 cv
1771.49 797.038 1767.4 815.169 1764.37 833.332 cv
1764.24 833.565 li
1790.72 814.397 1817.15 792.041 1833.8 764.057 cv
cp
f
1728.39 743.084 mo
1724.69 738.393 1720.65 733.708 1715.26 731.07 cv
1709.87 728.433 1702.79 728.333 1698.34 732.338 cv
1692.95 737.19 1693.39 745.673 1695.2 752.662 cv
1699.8 770.498 1710.39 786.429 1723.47 799.505 cv
1736.56 812.582 1752.09 822.999 1768.05 832.441 cv
1768.22 832.647 li
1759.91 801.223 1748.58 768.684 1728.39 743.084 cv
cp
f
1671.21 849.952 mo
1665.87 852.697 1660.48 855.774 1656.88 860.539 cv
1653.28 865.304 1651.88 872.184 1655.04 877.247 cv
1658.88 883.382 1667.38 884.501 1674.65 884.024 cv
1693.19 882.808 1710.95 875.406 1726.32 865.059 cv
1741.69 854.712 1754.88 841.492 1767.17 827.683 cv
1767.4 827.554 li
1734.69 829.897 1700.31 834.974 1671.21 849.952 cv
cp
f
1763.19 920.218 mo
1765.04 925.88 1767.22 931.651 1771.38 935.955 cv
1775.53 940.259 1782.15 942.751 1787.72 940.494 cv
1794.46 937.76 1796.97 929.639 1797.69 922.46 cv
1799.52 904.143 1795.07 885.583 1787.29 868.865 cv
1779.51 852.146 1768.51 837.096 1756.78 822.818 cv
1756.69 822.566 li
1753.64 854.911 1753.05 889.324 1763.19 920.218 cv
cp
f
1852.47 870.989 mo
1858.4 871.947 1864.58 872.672 1870.34 870.987 cv
1876.11 869.302 1881.38 864.613 1881.9 858.683 cv
1882.54 851.497 1876.4 845.565 1870.28 841.643 cv
1854.68 831.635 1835.98 827.055 1817.41 826.244 cv
1798.84 825.433 1780.3 828.224 1762.11 832.012 cv
1761.84 831.977 li
1789.48 849.472 1820.09 865.758 1852.47 870.989 cv
cp
f
1815.77 919.153 mo
1820.29 923.667 1825.17 928.13 1831.22 930.255 cv
1837.27 932.379 1844.8 931.599 1849.01 926.797 cv
1854.1 920.978 1852.55 912.038 1849.75 904.851 cv
1842.6 886.511 1829.34 870.938 1813.8 858.705 cv
1798.26 846.471 1780.46 837.364 1762.34 829.342 cv
1762.13 829.145 li
1774.94 861.433 1791.1 894.526 1815.77 919.153 cv
cp
f
1695.23 908.658 mo
1692.28 914.303 1689.48 920.271 1689.29 926.627 cv
1689.1 932.982 1692.16 939.839 1698.06 942.335 cv
1705.22 945.36 1713.33 941.161 1719.38 936.32 cv
1734.83 923.966 1745.73 906.693 1752.74 888.297 cv
1759.74 869.902 1763.04 850.331 1765.21 830.789 cv
1765.33 830.532 li
1738.22 852.497 1711.35 877.858 1695.23 908.658 cv
cp
f
1677.57 778.152 mo
1671.43 776.295 1665 774.651 1658.65 775.615 cv
1652.31 776.58 1646.05 780.794 1644.64 786.997 cv
1642.93 794.512 1648.56 801.661 1654.47 806.679 cv
1669.53 819.485 1688.65 826.987 1708.19 830.481 cv
1727.72 833.976 1747.76 833.656 1767.56 832.229 cv
1767.83 832.304 li
1741.12 809.866 1711.07 788.283 1677.57 778.152 cv
cp
f
1741.94 828.748 mo
1742.64 813.065 1752.57 809.744 1765.22 808.868 cv
1777.27 808.034 1785.48 818.868 1784.07 832.551 cv
1782.97 843.221 1773.91 851.742 1758.89 849.169 cv
1748.22 847.342 1741.45 839.462 1741.94 828.748 cv
cp
f
1685.36 908.783 mo
1682.48 913.004 1680.66 917.639 1679.83 922.663 cv
1679.38 925.393 1683.71 925.748 1684.15 923.03 cv
1684.86 918.763 1686.46 914.841 1688.9 911.262 cv
1690.47 908.968 1686.92 906.489 1685.36 908.783 cv
1685.36 908.783 li
cp
f
1658.29 852.787 mo
1661.88 849.642 1666.03 847.353 1670.67 846.1 cv
1673.34 845.378 1672.58 841.143 1669.88 841.874 cv
1664.52 843.323 1659.66 845.85 1655.49 849.499 cv
1653.4 851.33 1656.19 854.622 1658.29 852.787 cv
1658.29 852.787 li
cp
f
1838.95 730.396 mo
1842.44 734.261 1844.28 738.865 1844.54 744.028 cv
1844.68 746.778 1848.94 745.976 1848.8 743.245 cv
1848.51 737.413 1846.19 731.98 1842.27 727.629 cv
1840.42 725.566 1837.09 728.327 1838.95 730.396 cv
1838.95 730.396 li
cp
f
1727.03 730.188 mo
1725.01 726.83 1722.23 724.302 1718.68 722.589 cv
1716.17 721.375 1714.69 725.418 1717.18 726.62 cv
1719.63 727.803 1721.71 729.713 1723.1 732.031 cv
1724.52 734.387 1728.46 732.571 1727.03 730.188 cv
1727.03 730.188 li
cp
f
1781.93 723.409 mo
1781.34 717.079 1780.43 710.561 1777.12 705.113 cv
1773.81 699.667 1767.49 695.535 1761.16 696.597 cv
1753.49 697.884 1748.96 705.765 1746.51 713.078 cv
1740.27 731.74 1740.53 752.111 1744.68 771.335 cv
1748.84 790.559 1756.75 808.791 1765.6 826.386 cv
1765.64 826.669 li
1776.45 793.672 1785.2 757.95 1781.93 723.409 cv
cp
f
1865.96 818.087 mo
1871.99 815.921 1878.13 813.411 1882.62 808.866 cv
1887.11 804.321 1889.56 797.23 1886.93 791.431 cv
1883.74 784.404 1874.9 782.04 1867.14 781.537 cv
1847.33 780.252 1827.48 785.626 1809.74 794.448 cv
1792 803.271 1776.18 815.439 1761.21 828.354 cv
1760.94 828.458 li
1795.91 830.515 1833.02 829.908 1865.96 818.087 cv
cp
f
1834.25 758.92 mo
1837.3 753.792 1840.22 748.352 1840.73 742.42 cv
1841.23 736.487 1838.73 729.922 1833.34 727.29 cv
1826.8 724.101 1819 727.618 1813.09 731.838 cv
1798.02 742.61 1786.93 758.209 1779.43 775.055 cv
1771.94 791.901 1767.84 810.033 1764.82 828.195 cv
1764.69 828.429 li
1791.17 809.261 1817.59 786.905 1834.25 758.92 cv
cp
f
1728.84 737.948 mo
1725.14 733.256 1721.1 728.571 1715.71 725.934 cv
1710.32 723.296 1703.23 723.197 1698.79 727.202 cv
1693.4 732.054 1693.84 740.536 1695.64 747.525 cv
1700.24 765.361 1710.84 781.292 1723.92 794.369 cv
1737 807.445 1752.54 817.862 1768.49 827.305 cv
1768.66 827.511 li
1760.36 796.087 1749.03 763.547 1728.84 737.948 cv
cp
f
1671.65 844.815 mo
1666.32 847.561 1660.93 850.637 1657.33 855.402 cv
1653.72 860.167 1652.33 867.047 1655.49 872.111 cv
1659.32 878.246 1667.82 879.364 1675.09 878.888 cv
1693.64 877.671 1711.39 870.27 1726.77 859.923 cv
1742.14 849.576 1755.32 836.355 1767.61 822.547 cv
1767.85 822.417 li
1735.13 824.76 1700.76 829.837 1671.65 844.815 cv
cp
f
1763.63 915.082 mo
1765.49 920.744 1767.67 926.515 1771.82 930.818 cv
1775.98 935.122 1782.6 937.615 1788.16 935.358 cv
1794.9 932.624 1797.41 924.502 1798.13 917.324 cv
1799.97 899.006 1795.52 880.447 1787.74 863.728 cv
1779.96 847.009 1768.96 831.959 1757.22 817.682 cv
1757.13 817.43 li
1754.09 849.774 1753.5 884.188 1763.63 915.082 cv
cp
f
1852.91 865.852 mo
1858.84 866.811 1865.02 867.536 1870.79 865.851 cv
1876.55 864.166 1881.83 859.477 1882.35 853.546 cv
1882.98 846.36 1876.84 840.429 1870.73 836.507 cv
1855.13 826.499 1836.43 821.918 1817.86 821.107 cv
1799.29 820.297 1780.74 823.087 1762.55 826.876 cv
1762.28 826.84 li
1789.92 844.335 1820.54 860.622 1852.91 865.852 cv
cp
f
1816.21 914.017 mo
1820.74 918.53 1825.62 922.994 1831.67 925.118 cv
1837.72 927.243 1845.25 926.463 1849.45 921.66 cv
1854.55 915.842 1853 906.902 1850.2 899.715 cv
1843.05 881.375 1829.79 865.802 1814.25 853.568 cv
1798.71 841.334 1780.91 832.228 1762.78 824.206 cv
1762.58 824.009 li
1775.39 856.297 1791.54 889.39 1816.21 914.017 cv
cp
f
1695.68 903.522 mo
1692.72 909.167 1689.93 915.135 1689.74 921.491 cv
1689.55 927.846 1692.6 934.703 1698.51 937.199 cv
1705.66 940.224 1713.78 936.025 1719.83 931.184 cv
1735.27 918.829 1746.18 901.557 1753.18 883.161 cv
1760.18 864.766 1763.49 845.195 1765.65 825.652 cv
1765.78 825.396 li
1738.66 847.36 1711.8 872.721 1695.68 903.522 cv
cp
f
1678.02 773.016 mo
1671.88 771.159 1665.44 769.515 1659.1 770.479 cv
1652.75 771.444 1646.49 775.658 1645.08 781.86 cv
1643.37 789.375 1649.01 796.524 1654.91 801.542 cv
1669.97 814.349 1689.1 821.851 1708.63 825.345 cv
1728.17 828.839 1748.2 828.52 1768 827.092 cv
1768.28 827.168 li
1741.56 804.729 1711.52 783.147 1678.02 773.016 cv
cp
f
1742.38 823.611 mo
1743.09 807.929 1753.01 804.607 1765.67 803.731 cv
1777.72 802.897 1785.92 813.732 1784.52 827.415 cv
1783.42 838.084 1774.36 846.606 1759.34 844.033 cv
1748.67 842.206 1741.9 834.325 1742.38 823.611 cv
cp
1 1 1 rgb
f
1685.8 903.647 mo
1682.92 907.868 1681.1 912.503 1680.28 917.526 cv
1679.83 920.256 1684.15 920.611 1684.6 917.894 cv
1685.3 913.627 1686.91 909.705 1689.35 906.125 cv
1690.91 903.832 1687.37 901.353 1685.8 903.647 cv
1685.8 903.647 li
cp
1 .552941 .403922 rgb
f
1658.73 847.65 mo
1662.33 844.505 1666.48 842.217 1671.11 840.964 cv
1673.79 840.242 1673.03 836.006 1670.32 836.737 cv
1664.96 838.187 1660.11 840.713 1655.94 844.362 cv
1653.85 846.193 1656.63 849.486 1658.73 847.65 cv
1658.73 847.65 li
cp
f
1839.4 725.26 mo
1842.88 729.125 1844.72 733.729 1844.98 738.892 cv
1845.12 741.642 1849.39 740.839 1849.25 738.109 cv
1848.96 732.276 1846.64 726.844 1842.72 722.493 cv
1840.86 720.43 1837.54 723.191 1839.4 725.26 cv
1839.4 725.26 li
cp
f
1727.47 725.051 mo
1725.45 721.693 1722.68 719.166 1719.13 717.453 cv
1716.62 716.239 1715.14 720.282 1717.62 721.483 cv
1720.07 722.667 1722.16 724.577 1723.55 726.895 cv
1724.97 729.25 1728.9 727.435 1727.47 725.051 cv
1727.47 725.051 li
cp
f
761.567 1214.04 mo
761.567 1214.04 820.071 1263.13 887.65 1150.59 cv
887.65 1150.59 753.116 1129.72 761.567 1214.04 cv
761.567 1214.04 li
cp
.423529 .756863 .847059 rgb
f
887.888 1150.48 mo
769.913 1218.88 li
788.224 1227.75 835.307 1238.04 887.888 1150.48 cv
887.888 1150.48 li
cp
.611765 .85098 .937255 rgb
f
774.432 1215.88 mo
774.461 1215.76 774.539 1215.65 774.653 1215.58 cv
887.647 1150.07 li
887.875 1149.94 888.167 1150.02 888.299 1150.24 cv
888.432 1150.46 888.355 1150.75 888.129 1150.89 cv
775.134 1216.4 li
774.908 1216.53 774.617 1216.45 774.484 1216.23 cv
774.419 1216.12 774.403 1215.99 774.432 1215.88 cv
774.432 1215.88 li
cp
.568627 .709804 .972549 rgb
f
828.438 1184.57 mo
828.441 1184.56 828.444 1184.55 828.448 1184.54 cv
839.411 1150.19 li
839.491 1149.94 839.758 1149.8 840.007 1149.88 cv
840.26 1149.96 840.4 1150.24 840.319 1150.47 cv
829.355 1184.82 li
829.276 1185.07 829.008 1185.21 828.757 1185.13 cv
828.516 1185.05 828.379 1184.8 828.438 1184.57 cv
828.438 1184.57 li
cp
.611765 .85098 .937255 rgb
f
804.234 1198.6 mo
804.284 1198.4 804.464 1198.25 804.682 1198.24 cv
840.373 1197.25 li
840.636 1197.25 840.855 1197.45 840.862 1197.71 cv
840.866 1197.97 840.663 1198.19 840.399 1198.2 cv
804.71 1199.18 li
804.448 1199.19 804.228 1198.98 804.22 1198.72 cv
804.22 1198.68 804.224 1198.64 804.234 1198.6 cv
804.234 1198.6 li
cp
.423529 .756863 .847059 rgb
f
980.464 1105.38 mo
980.389 1105.42 979.068 1106.1 978.997 1106.15 cv
978.435 1106.53 1007.11 1155.08 1007.51 1155.63 cv
1110.28 1301.19 1192.83 1400.69 1239.96 1435.81 cv
1241.01 1436.59 1241.76 1437.15 1242.08 1437.46 cv
1242.57 1437.93 1243.36 1437.91 1243.84 1437.43 cv
1244.32 1436.94 1244.3 1436.16 1243.81 1435.69 cv
1243.38 1435.28 1242.66 1434.73 1241.45 1433.84 cv
1194.53 1398.87 1112.17 1299.57 1009.54 1154.22 cv
1009.2 1153.74 980.995 1105.16 980.464 1105.38 cv
cp
f
1265.03 1436.84 mo
1259.54 1432.96 1237.35 1429.8 1236.23 1431.35 cv
1235.12 1432.9 1245.36 1452.65 1250.85 1456.52 cv
1256.34 1460.4 1263.96 1459.14 1267.88 1453.7 cv
1271.79 1448.27 1270.51 1440.72 1265.03 1436.84 cv
cp
f
1223.04 1433.31 mo
1222.86 1426.48 1211.81 1406.58 1209.84 1406.63 cv
1207.87 1406.68 1197.89 1427.13 1198.08 1433.96 cv
1198.26 1440.79 1203.99 1446.18 1210.89 1446 cv
1217.78 1445.82 1223.22 1440.13 1223.04 1433.31 cv
cp
f
1233.44 1388.81 mo
1226.77 1390.52 1209.68 1405.67 1210.17 1407.55 cv
1210.66 1409.44 1233.03 1414.46 1239.71 1412.75 cv
1246.38 1411.04 1250.39 1404.29 1248.66 1397.68 cv
1246.93 1391.07 1240.12 1387.1 1233.44 1388.81 cv
cp
f
1131.42 1344.5 mo
1132.36 1333.08 1117.55 1297.89 1114.26 1297.62 cv
1110.97 1297.36 1090.58 1329.69 1089.64 1341.12 cv
1088.7 1352.54 1097.28 1362.56 1108.82 1363.5 cv
1120.36 1364.43 1130.48 1355.93 1131.42 1344.5 cv
cp
f
1156.9 1272.11 mo
1145.45 1273.77 1114.17 1295.99 1114.64 1299.22 cv
1115.12 1302.46 1151.53 1314.85 1162.98 1313.19 cv
1174.43 1311.52 1182.36 1300.98 1180.68 1289.64 cv
1179 1278.29 1168.36 1270.45 1156.9 1272.11 cv
cp
f
1089.4 1313.43 mo
1093.63 1300.04 1085.53 1254.08 1081.67 1252.89 cv
1077.81 1251.69 1044.68 1284.85 1040.45 1298.24 cv
1036.21 1311.63 1043.74 1325.88 1057.26 1330.08 cv
1070.78 1334.27 1085.17 1326.82 1089.4 1313.43 cv
cp
f
1128.17 1216.91 mo
1114.44 1220.36 1079.19 1251.3 1080.18 1255.18 cv
1081.18 1259.06 1127.07 1269.6 1140.8 1266.15 cv
1154.53 1262.7 1162.83 1248.88 1159.35 1235.28 cv
1155.86 1221.68 1141.91 1213.46 1128.17 1216.91 cv
cp
f
1054.19 1266.52 mo
1058.42 1253.13 1050.32 1207.17 1046.46 1205.98 cv
1042.6 1204.78 1009.47 1237.94 1005.24 1251.33 cv
1001 1264.72 1008.53 1278.97 1022.05 1283.17 cv
1035.57 1287.36 1049.96 1279.91 1054.19 1266.52 cv
cp
f
1092.96 1170 mo
1079.23 1173.45 1043.98 1204.39 1044.97 1208.27 cv
1045.97 1212.15 1091.86 1222.69 1105.58 1219.24 cv
1119.32 1215.79 1127.62 1201.97 1124.14 1188.37 cv
1120.65 1174.77 1106.69 1166.55 1092.96 1170 cv
cp
f
993.391 1212.97 mo
1002.45 1202.19 1012.63 1156.64 1009.53 1154.08 cv
1006.42 1151.52 963.032 1169.68 953.967 1180.46 cv
944.904 1191.24 946.381 1207.26 957.267 1216.24 cv
968.153 1225.21 984.326 1223.75 993.391 1212.97 cv
cp
f
1059.99 1123 mo
1045.93 1124.72 1007.04 1151.05 1007.54 1155.03 cv
1008.04 1159 1052.24 1175.14 1066.29 1173.42 cv
1080.35 1171.69 1090.34 1159.01 1088.6 1145.08 cv
1086.85 1131.16 1074.05 1121.27 1059.99 1123 cv
cp
f
1194.68 1405.6 mo
1194.49 1398.67 1183.27 1378.45 1181.27 1378.5 cv
1179.27 1378.55 1169.13 1399.33 1169.31 1406.27 cv
1169.5 1413.2 1175.33 1418.68 1182.33 1418.5 cv
1189.34 1418.31 1194.86 1412.54 1194.68 1405.6 cv
cp
f
1204.25 1360.27 mo
1197.47 1362.01 1180.11 1377.4 1180.61 1379.32 cv
1181.11 1381.24 1203.83 1386.34 1210.61 1384.6 cv
1217.4 1382.86 1221.47 1376 1219.71 1369.29 cv
1217.96 1362.57 1211.03 1358.53 1204.25 1360.27 cv
cp
f
1164.66 1381.07 mo
1165.22 1371.23 1151.7 1341.31 1148.86 1341.15 cv
1146.02 1340.99 1129.22 1369.24 1128.67 1379.09 cv
1128.11 1388.93 1135.72 1397.35 1145.66 1397.9 cv
1155.6 1398.45 1164.11 1390.92 1164.66 1381.07 cv
cp
f
1182.53 1315.24 mo
1172.89 1317.71 1148.22 1339.57 1148.94 1342.3 cv
1149.65 1345.02 1181.93 1352.27 1191.57 1349.8 cv
1201.2 1347.33 1206.99 1337.59 1204.5 1328.04 cv
1202 1318.5 1192.16 1312.77 1182.53 1315.24 cv
cp
f
786.31 1284.75 mo
820.316 1290.79 847.622 1293.75 867.334 1293.44 cv
868.644 1293.42 869.589 1293.4 870.03 1293.45 cv
870.713 1293.52 871.326 1293.03 871.401 1292.36 cv
871.476 1291.68 870.983 1291.08 870.3 1291 cv
869.705 1290.94 868.797 1290.95 867.294 1290.98 cv
847.626 1291.29 820.332 1288.31 786.311 1282.26 cv
786.31 1284.75 li
cp
f
887.762 1279.02 mo
881.026 1279.29 861.551 1290.29 861.63 1292.19 cv
861.71 1294.09 882.039 1303.45 888.774 1303.17 cv
895.51 1302.89 900.743 1297.26 900.463 1290.59 cv
900.184 1283.92 894.497 1278.74 887.762 1279.02 cv
cp
f
852.431 1301.75 mo
848.054 1296.47 826.994 1287.49 825.472 1288.72 cv
823.951 1289.96 828.752 1312.17 833.128 1317.45 cv
837.504 1322.73 845.372 1323.49 850.703 1319.16 cv
856.033 1314.82 856.807 1307.03 852.431 1301.75 cv
cp
f
833.054 1260.3 mo
828.847 1265.72 824.747 1288.06 826.306 1289.25 cv
827.866 1290.44 848.633 1280.81 852.841 1275.4 cv
857.049 1269.98 856.031 1262.22 850.567 1258.05 cv
845.102 1253.88 837.263 1254.89 833.054 1260.3 cv
cp
f
1278.97 1322.93 mo
1274.38 1289.01 1268.88 1262.36 1262.56 1243.87 cv
1262.14 1242.64 1261.84 1241.75 1261.75 1241.32 cv
1261.61 1240.65 1260.95 1240.23 1260.28 1240.36 cv
1259.61 1240.5 1259.18 1241.15 1259.31 1241.81 cv
1259.43 1242.39 1259.72 1243.25 1260.21 1244.66 cv
1266.52 1263.11 1272 1289.75 1276.57 1323.69 cv
1278.97 1322.93 li
cp
.74902 .219608 .133333 rgb
f
1242.45 1229.01 mo
1244.78 1235.28 1261.3 1250.28 1263.1 1249.63 cv
1264.91 1248.97 1267.69 1226.94 1265.37 1220.68 cv
1263.04 1214.41 1256.03 1211.2 1249.7 1213.5 cv
1243.37 1215.8 1240.13 1222.75 1242.45 1229.01 cv
cp
f
1275.11 1255.38 mo
1271.37 1261.12 1269.16 1283.73 1270.82 1284.78 cv
1272.47 1285.84 1292.36 1274.53 1296.1 1268.79 cv
1299.83 1263.05 1298.17 1255.39 1292.37 1251.69 cv
1286.57 1247.99 1278.85 1249.64 1275.11 1255.38 cv
cp
f
1241.18 1286.32 mo
1247.67 1288.63 1270.4 1285.67 1271.07 1283.84 cv
1271.74 1282 1256.13 1265.36 1249.64 1263.05 cv
1243.15 1260.73 1236 1264.07 1233.66 1270.49 cv
1231.32 1276.92 1234.69 1284 1241.18 1286.32 cv
cp
f
1835.06 1337.59 mo
1834.5 1331.65 1833.65 1325.54 1830.54 1320.42 cv
1827.43 1315.31 1821.51 1311.44 1815.57 1312.43 cv
1808.37 1313.64 1804.12 1321.04 1801.82 1327.9 cv
1795.97 1345.41 1796.21 1364.53 1800.11 1382.57 cv
1804.01 1400.6 1811.43 1417.71 1819.73 1434.22 cv
1819.77 1434.49 li
1829.91 1403.53 1838.12 1370 1835.06 1337.59 cv
cp
1 .552941 .403922 rgb
f
1913.91 1426.44 mo
1919.57 1424.4 1925.33 1422.05 1929.55 1417.78 cv
1933.76 1413.52 1936.06 1406.86 1933.59 1401.42 cv
1930.59 1394.83 1922.3 1392.61 1915.01 1392.14 cv
1896.42 1390.93 1877.81 1395.98 1861.16 1404.25 cv
1844.51 1412.53 1829.66 1423.95 1815.62 1436.07 cv
1815.36 1436.17 li
1848.18 1438.1 1883 1437.53 1913.91 1426.44 cv
cp
f
1884.15 1370.92 mo
1887.02 1366.1 1889.76 1361 1890.23 1355.43 cv
1890.7 1349.87 1888.35 1343.7 1883.3 1341.23 cv
1877.16 1338.24 1869.84 1341.54 1864.3 1345.5 cv
1850.15 1355.61 1839.75 1370.25 1832.72 1386.06 cv
1825.68 1401.86 1821.84 1418.88 1819 1435.92 cv
1818.88 1436.14 li
1843.73 1418.15 1868.52 1397.18 1884.15 1370.92 cv
cp
f
1785.24 1351.24 mo
1781.76 1346.83 1777.97 1342.44 1772.92 1339.96 cv
1767.86 1337.49 1761.21 1337.39 1757.04 1341.15 cv
1751.98 1345.71 1752.4 1353.66 1754.09 1360.22 cv
1758.4 1376.96 1768.34 1391.91 1780.62 1404.18 cv
1792.9 1416.45 1807.47 1426.23 1822.45 1435.09 cv
1822.61 1435.28 li
1814.81 1405.79 1804.18 1375.26 1785.24 1351.24 cv
cp
f
1731.58 1451.52 mo
1726.57 1454.09 1721.51 1456.98 1718.13 1461.45 cv
1714.75 1465.92 1713.44 1472.38 1716.41 1477.13 cv
1720 1482.89 1727.98 1483.94 1734.8 1483.49 cv
1752.21 1482.35 1768.87 1475.4 1783.29 1465.69 cv
1797.72 1455.99 1810.09 1443.58 1821.62 1430.62 cv
1821.84 1430.5 li
1791.14 1432.7 1758.89 1437.46 1731.58 1451.52 cv
cp
f
1817.89 1517.45 mo
1819.63 1522.77 1821.67 1528.18 1825.57 1532.22 cv
1829.47 1536.26 1835.68 1538.6 1840.9 1536.48 cv
1847.23 1533.92 1849.59 1526.29 1850.26 1519.56 cv
1851.99 1502.37 1847.81 1484.95 1840.51 1469.26 cv
1833.21 1453.58 1822.88 1439.45 1811.87 1426.06 cv
1811.79 1425.82 li
1808.93 1456.17 1808.38 1488.46 1817.89 1517.45 cv
cp
f
1901.66 1471.26 mo
1907.23 1472.16 1913.03 1472.84 1918.44 1471.26 cv
1923.85 1469.68 1928.8 1465.28 1929.29 1459.71 cv
1929.88 1452.97 1924.12 1447.4 1918.38 1443.72 cv
1903.74 1434.33 1886.2 1430.03 1868.77 1429.27 cv
1851.35 1428.51 1833.94 1431.13 1816.87 1434.68 cv
1816.62 1434.65 li
1842.56 1451.07 1871.29 1466.35 1901.66 1471.26 cv
cp
f
1867.23 1516.46 mo
1871.47 1520.69 1876.05 1524.88 1881.73 1526.87 cv
1887.41 1528.87 1894.47 1528.13 1898.42 1523.63 cv
1903.2 1518.17 1901.75 1509.78 1899.12 1503.03 cv
1892.41 1485.82 1879.97 1471.21 1865.38 1459.73 cv
1850.8 1448.25 1834.1 1439.71 1817.09 1432.18 cv
1816.9 1431.99 li
1828.92 1462.29 1844.08 1493.35 1867.23 1516.46 cv
cp
f
1754.12 1506.61 mo
1751.35 1511.9 1748.72 1517.5 1748.55 1523.47 cv
1748.37 1529.43 1751.23 1535.87 1756.77 1538.21 cv
1763.49 1541.05 1771.11 1537.11 1776.78 1532.56 cv
1791.27 1520.97 1801.51 1504.76 1808.08 1487.5 cv
1814.65 1470.24 1817.75 1451.87 1819.78 1433.54 cv
1819.9 1433.29 li
1794.46 1453.91 1769.25 1477.7 1754.12 1506.61 cv
cp
f
1737.55 1384.14 mo
1731.79 1382.4 1725.75 1380.86 1719.79 1381.76 cv
1713.84 1382.67 1707.97 1386.62 1706.64 1392.44 cv
1705.04 1399.49 1710.33 1406.2 1715.87 1410.91 cv
1730 1422.93 1747.95 1429.97 1766.28 1433.25 cv
1784.61 1436.53 1803.41 1436.23 1821.99 1434.89 cv
1822.25 1434.96 li
1797.18 1413.9 1768.99 1393.65 1737.55 1384.14 cv
cp
f
1797.95 1431.62 mo
1798.61 1416.9 1807.92 1413.79 1819.8 1412.97 cv
1831.1 1412.18 1838.8 1422.35 1837.48 1435.19 cv
1836.46 1445.2 1827.95 1453.2 1813.86 1450.78 cv
1803.84 1449.07 1797.49 1441.67 1797.95 1431.62 cv
cp
f
1744.85 1506.72 mo
1742.15 1510.68 1740.44 1515.03 1739.67 1519.75 cv
1739.25 1522.31 1743.31 1522.64 1743.73 1520.09 cv
1744.38 1516.09 1745.89 1512.41 1748.18 1509.05 cv
1749.65 1506.9 1746.32 1504.57 1744.85 1506.72 cv
1744.85 1506.72 li
cp
f
1719.45 1454.18 mo
1722.82 1451.23 1726.72 1449.08 1731.07 1447.9 cv
1733.58 1447.23 1732.86 1443.25 1730.33 1443.94 cv
1725.3 1445.3 1720.74 1447.67 1716.83 1451.09 cv
1714.87 1452.81 1717.48 1455.9 1719.45 1454.18 cv
1719.45 1454.18 li
cp
f
1888.99 1339.33 mo
1892.25 1342.96 1893.98 1347.28 1894.22 1352.12 cv
1894.35 1354.7 1898.36 1353.95 1898.23 1351.39 cv
1897.95 1345.91 1895.78 1340.82 1892.1 1336.73 cv
1890.36 1334.8 1887.24 1337.39 1888.99 1339.33 cv
1888.99 1339.33 li
cp
f
1783.95 1339.13 mo
1782.06 1335.98 1779.45 1333.61 1776.13 1332 cv
1773.77 1330.86 1772.38 1334.66 1774.71 1335.79 cv
1777.01 1336.9 1778.97 1338.69 1780.28 1340.86 cv
1781.6 1343.07 1785.3 1341.37 1783.95 1339.13 cv
1783.95 1339.13 li
cp
f
1835.48 1332.77 mo
1834.92 1326.83 1834.07 1320.72 1830.96 1315.6 cv
1827.85 1310.49 1821.93 1306.62 1815.99 1307.61 cv
1808.79 1308.82 1804.54 1316.22 1802.24 1323.08 cv
1796.38 1340.59 1796.63 1359.71 1800.52 1377.75 cv
1804.42 1395.78 1811.85 1412.89 1820.15 1429.4 cv
1820.18 1429.67 li
1830.33 1398.71 1838.54 1365.19 1835.48 1332.77 cv
cp
.631373 .901961 .933333 rgb
f
1914.32 1421.62 mo
1919.99 1419.58 1925.75 1417.23 1929.96 1412.96 cv
1934.18 1408.7 1936.47 1402.04 1934 1396.6 cv
1931.01 1390.01 1922.71 1387.79 1915.43 1387.32 cv
1896.84 1386.11 1878.22 1391.16 1861.58 1399.43 cv
1844.93 1407.71 1830.08 1419.13 1816.03 1431.25 cv
1815.78 1431.35 li
1848.6 1433.28 1883.42 1432.71 1914.32 1421.62 cv
cp
f
1884.57 1366.1 mo
1887.43 1361.28 1890.18 1356.18 1890.65 1350.61 cv
1891.12 1345.04 1888.77 1338.88 1883.71 1336.42 cv
1877.58 1333.42 1870.26 1336.72 1864.71 1340.68 cv
1850.57 1350.79 1840.17 1365.43 1833.13 1381.24 cv
1826.1 1397.04 1822.26 1414.06 1819.42 1431.1 cv
1819.29 1431.32 li
1844.14 1413.33 1868.94 1392.36 1884.57 1366.1 cv
cp
f
1785.66 1346.42 mo
1782.18 1342.01 1778.39 1337.62 1773.33 1335.14 cv
1768.28 1332.67 1761.63 1332.57 1757.45 1336.33 cv
1752.4 1340.88 1752.81 1348.84 1754.51 1355.4 cv
1758.82 1372.14 1768.76 1387.09 1781.04 1399.36 cv
1793.32 1411.63 1807.89 1421.41 1822.87 1430.27 cv
1823.03 1430.46 li
1815.23 1400.97 1804.6 1370.44 1785.66 1346.42 cv
cp
f
1732 1446.7 mo
1726.99 1449.27 1721.93 1452.16 1718.55 1456.63 cv
1715.17 1461.1 1713.86 1467.56 1716.83 1472.31 cv
1720.42 1478.07 1728.4 1479.12 1735.22 1478.67 cv
1752.63 1477.53 1769.28 1470.58 1783.71 1460.87 cv
1798.14 1451.17 1810.51 1438.76 1822.04 1425.8 cv
1822.26 1425.68 li
1791.56 1427.88 1759.31 1432.64 1732 1446.7 cv
cp
f
1818.31 1512.63 mo
1820.05 1517.95 1822.09 1523.36 1825.99 1527.4 cv
1829.89 1531.44 1836.1 1533.78 1841.32 1531.66 cv
1847.65 1529.09 1850.01 1521.47 1850.68 1514.74 cv
1852.4 1497.55 1848.22 1480.13 1840.92 1464.45 cv
1833.63 1448.76 1823.3 1434.63 1812.29 1421.24 cv
1812.21 1421 li
1809.35 1451.35 1808.79 1483.64 1818.31 1512.63 cv
cp
f
1902.08 1466.44 mo
1907.65 1467.34 1913.45 1468.02 1918.86 1466.44 cv
1924.27 1464.86 1929.22 1460.46 1929.71 1454.89 cv
1930.3 1448.15 1924.54 1442.58 1918.8 1438.9 cv
1904.16 1429.51 1886.62 1425.21 1869.19 1424.45 cv
1851.77 1423.69 1834.36 1426.31 1817.29 1429.86 cv
1817.04 1429.83 li
1842.97 1446.25 1871.71 1461.53 1902.08 1466.44 cv
cp
f
1867.65 1511.63 mo
1871.89 1515.87 1876.47 1520.06 1882.15 1522.05 cv
1887.83 1524.05 1894.89 1523.31 1898.84 1518.81 cv
1903.62 1513.35 1902.17 1504.96 1899.54 1498.21 cv
1892.83 1481 1880.38 1466.39 1865.8 1454.91 cv
1851.22 1443.43 1834.52 1434.89 1817.51 1427.36 cv
1817.31 1427.17 li
1829.34 1457.47 1844.5 1488.53 1867.65 1511.63 cv
cp
f
1754.54 1501.79 mo
1751.77 1507.08 1749.14 1512.68 1748.97 1518.65 cv
1748.79 1524.61 1751.65 1531.05 1757.19 1533.39 cv
1763.91 1536.23 1771.52 1532.29 1777.2 1527.74 cv
1791.69 1516.15 1801.93 1499.94 1808.5 1482.68 cv
1815.07 1465.42 1818.17 1447.05 1820.2 1428.72 cv
1820.32 1428.47 li
1794.88 1449.09 1769.66 1472.88 1754.54 1501.79 cv
cp
f
1737.97 1379.32 mo
1732.2 1377.58 1726.17 1376.04 1720.21 1376.94 cv
1714.26 1377.85 1708.39 1381.8 1707.06 1387.62 cv
1705.46 1394.67 1710.75 1401.38 1716.29 1406.09 cv
1730.42 1418.11 1748.37 1425.15 1766.7 1428.43 cv
1785.03 1431.71 1803.83 1431.41 1822.41 1430.07 cv
1822.67 1430.14 li
1797.6 1409.08 1769.4 1388.83 1737.97 1379.32 cv
cp
f
1798.37 1426.8 mo
1799.03 1412.08 1808.34 1408.97 1820.22 1408.15 cv
1831.52 1407.36 1839.22 1417.53 1837.9 1430.37 cv
1836.87 1440.38 1828.37 1448.38 1814.28 1445.96 cv
1804.26 1444.25 1797.91 1436.85 1798.37 1426.8 cv
cp
1 1 1 rgb
f
1745.27 1501.9 mo
1742.57 1505.86 1740.86 1510.21 1740.09 1514.93 cv
1739.67 1517.49 1743.72 1517.82 1744.14 1515.27 cv
1744.8 1511.27 1746.31 1507.59 1748.6 1504.23 cv
1750.07 1502.08 1746.74 1499.75 1745.27 1501.9 cv
1745.27 1501.9 li
cp
.631373 .901961 .933333 rgb
f
1719.87 1449.36 mo
1723.24 1446.41 1727.14 1444.26 1731.49 1443.08 cv
1734 1442.41 1733.28 1438.43 1730.75 1439.12 cv
1725.72 1440.48 1721.16 1442.85 1717.25 1446.27 cv
1715.28 1447.99 1717.9 1451.08 1719.87 1449.36 cv
1719.87 1449.36 li
cp
f
1889.4 1334.51 mo
1892.67 1338.14 1894.4 1342.46 1894.64 1347.3 cv
1894.77 1349.88 1898.78 1349.13 1898.65 1346.57 cv
1898.37 1341.09 1896.2 1336 1892.52 1331.91 cv
1890.78 1329.98 1887.66 1332.57 1889.4 1334.51 cv
1889.4 1334.51 li
cp
f
1784.37 1334.31 mo
1782.48 1331.16 1779.87 1328.79 1776.55 1327.18 cv
1774.19 1326.04 1772.8 1329.84 1775.13 1330.97 cv
1777.43 1332.08 1779.39 1333.87 1780.69 1336.04 cv
1782.02 1338.25 1785.72 1336.55 1784.37 1334.31 cv
1784.37 1334.31 li
cp
f
1622.43 1478.43 mo
1622 1473.88 1621.34 1469.19 1618.96 1465.27 cv
1616.58 1461.35 1612.04 1458.38 1607.49 1459.14 cv
1601.97 1460.07 1598.71 1465.74 1596.95 1471 cv
1592.46 1484.42 1592.65 1499.07 1595.64 1512.89 cv
1598.62 1526.72 1604.31 1539.83 1610.68 1552.49 cv
1610.7 1552.69 li
1618.48 1528.96 1624.77 1503.27 1622.43 1478.43 cv
cp
1 .552941 .403922 rgb
f
1682.85 1546.52 mo
1687.19 1544.96 1691.61 1543.15 1694.84 1539.89 cv
1698.07 1536.62 1699.83 1531.52 1697.93 1527.35 cv
1695.64 1522.29 1689.28 1520.59 1683.7 1520.23 cv
1669.45 1519.31 1655.18 1523.17 1642.43 1529.52 cv
1629.67 1535.86 1618.29 1544.61 1607.52 1553.9 cv
1607.33 1553.98 li
1632.48 1555.46 1659.17 1555.02 1682.85 1546.52 cv
cp
f
1660.05 1503.97 mo
1662.24 1500.28 1664.34 1496.37 1664.71 1492.1 cv
1665.07 1487.83 1663.27 1483.11 1659.39 1481.22 cv
1654.69 1478.92 1649.08 1481.45 1644.83 1484.49 cv
1633.99 1492.24 1626.02 1503.46 1620.63 1515.57 cv
1615.24 1527.69 1612.29 1540.72 1610.11 1553.79 cv
1610.02 1553.96 li
1629.07 1540.17 1648.07 1524.09 1660.05 1503.97 cv
cp
f
1584.24 1488.88 mo
1581.58 1485.51 1578.67 1482.14 1574.8 1480.24 cv
1570.92 1478.35 1565.83 1478.28 1562.63 1481.16 cv
1558.75 1484.64 1559.07 1490.75 1560.37 1495.77 cv
1563.67 1508.6 1571.29 1520.06 1580.7 1529.46 cv
1590.11 1538.86 1601.28 1546.36 1612.76 1553.15 cv
1612.88 1553.29 li
1606.91 1530.7 1598.76 1507.29 1584.24 1488.88 cv
cp
f
1543.11 1565.74 mo
1539.28 1567.71 1535.4 1569.93 1532.81 1573.35 cv
1530.22 1576.78 1529.22 1581.73 1531.49 1585.37 cv
1534.25 1589.78 1540.36 1590.59 1545.59 1590.24 cv
1558.93 1589.37 1571.69 1584.05 1582.75 1576.6 cv
1593.81 1569.16 1603.29 1559.66 1612.13 1549.72 cv
1612.3 1549.63 li
1588.77 1551.32 1564.05 1554.97 1543.11 1565.74 cv
cp
f
1609.26 1616.27 mo
1610.6 1620.35 1612.17 1624.5 1615.15 1627.59 cv
1618.14 1630.69 1622.9 1632.48 1626.9 1630.86 cv
1631.75 1628.89 1633.56 1623.05 1634.08 1617.89 cv
1635.4 1604.71 1632.19 1591.37 1626.6 1579.34 cv
1621 1567.32 1613.09 1556.49 1604.65 1546.23 cv
1604.59 1546.04 li
1602.4 1569.31 1601.97 1594.05 1609.26 1616.27 cv
cp
f
1673.47 1580.87 mo
1677.74 1581.56 1682.18 1582.08 1686.33 1580.87 cv
1690.47 1579.66 1694.26 1576.28 1694.64 1572.02 cv
1695.1 1566.85 1690.68 1562.58 1686.28 1559.76 cv
1675.06 1552.57 1661.62 1549.27 1648.26 1548.69 cv
1634.91 1548.11 1621.57 1550.11 1608.49 1552.84 cv
1608.29 1552.81 li
1628.17 1565.39 1650.19 1577.11 1673.47 1580.87 cv
cp
f
1647.08 1615.51 mo
1650.33 1618.75 1653.84 1621.96 1658.19 1623.49 cv
1662.54 1625.02 1667.96 1624.46 1670.98 1621 cv
1674.65 1616.82 1673.53 1610.39 1671.52 1605.22 cv
1666.38 1592.03 1656.84 1580.83 1645.66 1572.03 cv
1634.49 1563.24 1621.69 1556.69 1608.65 1550.92 cv
1608.5 1550.78 li
1617.72 1574 1629.33 1597.8 1647.08 1615.51 cv
cp
f
1560.39 1607.96 mo
1558.27 1612.02 1556.26 1616.31 1556.12 1620.88 cv
1555.98 1625.45 1558.18 1630.38 1562.43 1632.18 cv
1567.57 1634.35 1573.41 1631.33 1577.76 1627.85 cv
1588.87 1618.97 1596.71 1606.55 1601.75 1593.32 cv
1606.78 1580.09 1609.16 1566.01 1610.72 1551.96 cv
1610.81 1551.77 li
1591.31 1567.57 1571.98 1585.81 1560.39 1607.96 cv
cp
f
1547.69 1514.1 mo
1543.27 1512.77 1538.65 1511.58 1534.08 1512.28 cv
1529.52 1512.97 1525.02 1516 1524.01 1520.46 cv
1522.78 1525.87 1526.83 1531.01 1531.07 1534.62 cv
1541.91 1543.83 1555.66 1549.22 1569.71 1551.74 cv
1583.76 1554.25 1598.17 1554.02 1612.41 1552.99 cv
1612.6 1553.05 li
1593.39 1536.91 1571.78 1521.39 1547.69 1514.1 cv
cp
f
1593.98 1550.49 mo
1594.49 1539.21 1601.63 1536.82 1610.73 1536.19 cv
1619.39 1535.59 1625.29 1543.38 1624.28 1553.23 cv
1623.49 1560.9 1616.98 1567.03 1606.17 1565.18 cv
1598.5 1563.86 1593.63 1558.2 1593.98 1550.49 cv
cp
f
1553.29 1608.05 mo
1551.22 1611.08 1549.91 1614.42 1549.32 1618.03 cv
1548.99 1620 1552.1 1620.25 1552.43 1618.3 cv
1552.93 1615.23 1554.08 1612.41 1555.84 1609.83 cv
1556.97 1608.18 1554.42 1606.4 1553.29 1608.05 cv
1553.29 1608.05 li
cp
f
1533.82 1567.78 mo
1536.41 1565.52 1539.39 1563.87 1542.73 1562.97 cv
1544.65 1562.45 1544.1 1559.4 1542.16 1559.93 cv
1538.3 1560.97 1534.81 1562.79 1531.81 1565.41 cv
1530.31 1566.73 1532.31 1569.1 1533.82 1567.78 cv
1533.82 1567.78 li
cp
f
1663.75 1479.76 mo
1666.26 1482.54 1667.58 1485.85 1667.77 1489.56 cv
1667.87 1491.54 1670.94 1490.96 1670.84 1489 cv
1670.63 1484.8 1668.96 1480.9 1666.14 1477.77 cv
1664.81 1476.29 1662.41 1478.27 1663.75 1479.76 cv
1663.75 1479.76 li
cp
f
1583.26 1479.61 mo
1581.81 1477.19 1579.81 1475.38 1577.26 1474.14 cv
1575.45 1473.27 1574.39 1476.18 1576.17 1477.04 cv
1577.93 1477.89 1579.44 1479.27 1580.44 1480.93 cv
1581.46 1482.63 1584.29 1481.32 1583.26 1479.61 cv
1583.26 1479.61 li
cp
f
1622.75 1474.73 mo
1622.32 1470.18 1621.66 1465.49 1619.28 1461.58 cv
1616.9 1457.66 1612.36 1454.69 1607.81 1455.45 cv
1602.29 1456.38 1599.03 1462.04 1597.27 1467.3 cv
1592.78 1480.72 1592.97 1495.38 1595.96 1509.2 cv
1598.95 1523.03 1604.63 1536.14 1611 1548.79 cv
1611.02 1549 li
1618.8 1525.26 1625.09 1499.57 1622.75 1474.73 cv
cp
.631373 .901961 .933333 rgb
f
1683.17 1542.82 mo
1687.51 1541.27 1691.93 1539.46 1695.16 1536.19 cv
1698.39 1532.92 1700.15 1527.82 1698.26 1523.65 cv
1695.96 1518.6 1689.6 1516.9 1684.02 1516.54 cv
1669.77 1515.61 1655.5 1519.48 1642.75 1525.82 cv
1629.99 1532.17 1618.61 1540.92 1607.84 1550.21 cv
1607.65 1550.28 li
1632.8 1551.76 1659.49 1551.33 1683.17 1542.82 cv
cp
f
1660.37 1500.27 mo
1662.56 1496.58 1664.66 1492.67 1665.03 1488.41 cv
1665.39 1484.14 1663.59 1479.42 1659.71 1477.52 cv
1655.01 1475.23 1649.4 1477.76 1645.15 1480.8 cv
1634.31 1488.54 1626.34 1499.76 1620.95 1511.88 cv
1615.56 1523.99 1612.61 1537.03 1610.44 1550.09 cv
1610.34 1550.26 li
1629.39 1536.48 1648.39 1520.4 1660.37 1500.27 cv
cp
f
1584.56 1485.19 mo
1581.9 1481.82 1578.99 1478.45 1575.12 1476.55 cv
1571.24 1474.65 1566.15 1474.58 1562.95 1477.46 cv
1559.07 1480.95 1559.39 1487.05 1560.69 1492.08 cv
1563.99 1504.9 1571.61 1516.36 1581.02 1525.77 cv
1590.43 1535.17 1601.6 1542.66 1613.08 1549.45 cv
1613.2 1549.6 li
1607.23 1527 1599.08 1503.6 1584.56 1485.19 cv
cp
f
1543.44 1562.05 mo
1539.6 1564.02 1535.72 1566.23 1533.13 1569.66 cv
1530.54 1573.09 1529.54 1578.03 1531.81 1581.68 cv
1534.57 1586.09 1540.68 1586.89 1545.91 1586.55 cv
1559.25 1585.67 1572.01 1580.35 1583.07 1572.91 cv
1594.13 1565.47 1603.61 1555.96 1612.45 1546.03 cv
1612.62 1545.94 li
1589.09 1547.62 1564.37 1551.27 1543.44 1562.05 cv
cp
f
1609.58 1612.58 mo
1610.92 1616.65 1612.49 1620.8 1615.47 1623.9 cv
1618.46 1626.99 1623.22 1628.78 1627.22 1627.16 cv
1632.07 1625.2 1633.88 1619.35 1634.4 1614.19 cv
1635.72 1601.02 1632.51 1587.67 1626.92 1575.65 cv
1621.32 1563.62 1613.41 1552.8 1604.97 1542.53 cv
1604.91 1542.35 li
1602.72 1565.61 1602.29 1590.36 1609.58 1612.58 cv
cp
f
1673.79 1577.17 mo
1678.06 1577.86 1682.5 1578.39 1686.65 1577.17 cv
1690.79 1575.96 1694.58 1572.59 1694.96 1568.32 cv
1695.42 1563.16 1691 1558.89 1686.6 1556.07 cv
1675.39 1548.87 1661.94 1545.58 1648.58 1545 cv
1635.23 1544.41 1621.89 1546.42 1608.81 1549.14 cv
1608.61 1549.12 li
1628.49 1561.7 1650.51 1573.41 1673.79 1577.17 cv
cp
f
1647.4 1611.81 mo
1650.65 1615.06 1654.16 1618.27 1658.51 1619.8 cv
1662.87 1621.33 1668.28 1620.76 1671.3 1617.31 cv
1674.97 1613.13 1673.85 1606.7 1671.84 1601.53 cv
1666.7 1588.34 1657.16 1577.14 1645.98 1568.34 cv
1634.81 1559.54 1622.01 1552.99 1608.97 1547.22 cv
1608.82 1547.08 li
1618.04 1570.3 1629.66 1594.1 1647.4 1611.81 cv
cp
f
1560.71 1604.27 mo
1558.59 1608.33 1556.58 1612.62 1556.44 1617.19 cv
1556.31 1621.76 1558.5 1626.69 1562.75 1628.49 cv
1567.89 1630.66 1573.73 1627.64 1578.08 1624.16 cv
1589.19 1615.27 1597.03 1602.85 1602.07 1589.62 cv
1607.1 1576.39 1609.48 1562.32 1611.04 1548.26 cv
1611.13 1548.08 li
1591.63 1563.88 1572.31 1582.12 1560.71 1604.27 cv
cp
f
1548.01 1510.41 mo
1543.6 1509.07 1538.97 1507.89 1534.41 1508.58 cv
1529.84 1509.28 1525.34 1512.31 1524.33 1516.77 cv
1523.1 1522.17 1527.15 1527.32 1531.4 1530.92 cv
1542.23 1540.13 1555.98 1545.53 1570.03 1548.04 cv
1584.08 1550.56 1598.49 1550.33 1612.73 1549.3 cv
1612.93 1549.35 li
1593.71 1533.22 1572.11 1517.7 1548.01 1510.41 cv
cp
f
1594.3 1546.8 mo
1594.81 1535.52 1601.95 1533.13 1611.05 1532.5 cv
1619.71 1531.9 1625.61 1539.69 1624.6 1549.53 cv
1623.81 1557.21 1617.3 1563.33 1606.5 1561.48 cv
1598.82 1560.17 1593.95 1554.5 1594.3 1546.8 cv
cp
1 1 1 rgb
f
1553.61 1604.36 mo
1551.54 1607.39 1550.23 1610.72 1549.64 1614.34 cv
1549.31 1616.3 1552.43 1616.56 1552.75 1614.6 cv
1553.25 1611.53 1554.4 1608.71 1556.16 1606.14 cv
1557.29 1604.49 1554.74 1602.71 1553.61 1604.36 cv
1553.61 1604.36 li
cp
.631373 .901961 .933333 rgb
f
1534.14 1564.08 mo
1536.73 1561.82 1539.72 1560.18 1543.05 1559.28 cv
1544.97 1558.76 1544.42 1555.71 1542.48 1556.24 cv
1538.62 1557.28 1535.13 1559.1 1532.13 1561.72 cv
1530.63 1563.04 1532.63 1565.4 1534.14 1564.08 cv
1534.14 1564.08 li
cp
f
1664.07 1476.06 mo
1666.58 1478.84 1667.9 1482.16 1668.09 1485.87 cv
1668.19 1487.85 1671.26 1487.27 1671.16 1485.31 cv
1670.95 1481.11 1669.28 1477.2 1666.46 1474.07 cv
1665.13 1472.59 1662.73 1474.58 1664.07 1476.06 cv
1664.07 1476.06 li
cp
f
1583.58 1475.91 mo
1582.13 1473.5 1580.13 1471.68 1577.58 1470.45 cv
1575.77 1469.58 1574.71 1472.48 1576.5 1473.35 cv
1578.26 1474.2 1579.76 1475.57 1580.76 1477.24 cv
1581.78 1478.93 1584.61 1477.63 1583.58 1475.91 cv
1583.58 1475.91 li
cp
f
586.875 1916.18 mo
679.637 1949.56 822.385 1951.46 943.818 1937.11 cv
948.329 1933.93 952.685 1931.2 956.872 1928.98 cv
1041.69 1884.03 1088.83 1846.39 1131.36 1790.64 cv
1166.54 1744.52 1215.54 1673.99 1241.53 1639.32 cv
1243.19 1637.12 1244.75 1635.06 1246.21 1633.16 cv
1249.54 1628.82 1252.33 1625.32 1254.47 1622.85 cv
1257.73 1619.08 1259.34 1608.56 1255.24 1599.29 cv
1251.48 1590.8 1242.92 1583.37 1226.42 1583.21 cv
1225.8 1583.21 1225.16 1583.21 1224.51 1583.23 cv
1182.36 1584.23 1092.81 1705.77 1082.95 1696.06 cv
1073.37 1686.65 1110.32 1584.67 1142.49 1497.66 cv
1143.49 1494.97 1144.48 1492.29 1145.47 1489.63 cv
1149.97 1477.47 1154.33 1465.68 1158.44 1454.56 cv
1172.7 1415.9 1183.66 1385.34 1185.23 1375.65 cv
1187.9 1359.17 1184.32 1344.72 1177.45 1336.45 cv
1169.22 1326.55 1156.26 1325.53 1143.72 1340.56 cv
1143.71 1340.57 1143.7 1340.58 1143.7 1340.59 cv
1138.94 1346.28 1134.24 1354.29 1129.89 1364.99 cv
1123.81 1379.88 1115.93 1399.19 1107.31 1419.8 cv
1107.31 1419.81 1107.31 1419.81 1107.31 1419.81 cv
1102.79 1430.59 1098.08 1441.72 1093.33 1452.76 cv
1069.04 1509.15 1043.58 1563.12 1037.68 1555.13 cv
1032.22 1547.71 1066.36 1455.28 1089.28 1377.54 cv
1091.07 1371.5 1092.78 1365.54 1094.41 1359.71 cv
1094.41 1359.7 li
1097.45 1348.79 1100.17 1338.36 1102.41 1328.71 cv
1109.61 1297.68 1111.85 1274.79 1103.9 1270.29 cv
1102.33 1269.4 1100.75 1268.77 1099.17 1268.38 cv
1098.85 1268.3 1098.54 1268.24 1098.22 1268.18 cv
1095.35 1267.65 1092.46 1267.9 1089.54 1268.85 cv
1087.57 1269.49 1085.58 1270.46 1083.59 1271.71 cv
1076.6 1276.11 1069.51 1284.15 1062.43 1294.72 cv
1016.46 1363.33 970.713 1539.01 952.423 1525.85 cv
936.411 1514.33 1023.18 1294.9 973.644 1279.75 cv
971.224 1279.01 968.839 1278.95 966.492 1279.51 cv
956.93 1281.75 948.021 1294.16 939.744 1312.14 cv
908.535 1379.96 886.349 1527.15 872.563 1508.34 cv
854.219 1483.31 894.462 1335.78 849.4 1337.27 cv
848.952 1337.28 848.503 1337.39 848.032 1337.56 cv
843.024 1339.52 836.786 1351.03 829.91 1368.47 cv
803.535 1435.38 767.717 1589.71 754.959 1628.45 cv
723.231 1724.76 705.3 1797.65 660.725 1843.7 cv
646.211 1858.7 618.14 1886.08 586.875 1916.18 cv
cp
.992157 .729412 .627451 rgb
f
1224.34 1652.18 mo
1224.34 1652.18 1208.29 1633.24 1226.62 1614.76 cv
1244.96 1596.29 1261.26 1595.35 1264.7 1606.51 cv
1268.15 1617.68 1224.34 1652.18 1224.34 1652.18 cv
cp
.831373 .301961 .172549 rgb
f
1255.57 1611.75 mo
1248.25 1614.14 1241.88 1618.1 1236.66 1623.73 cv
1233.64 1626.99 1228.27 1622.6 1231.31 1619.32 cv
1237.32 1612.84 1244.67 1608.05 1253.11 1605.3 cv
1257.36 1603.91 1259.83 1610.36 1255.57 1611.75 cv
1255.57 1611.75 li
cp
.972549 .388235 .294118 rgb
f
1057.05 1607.81 mo
1053.52 1611.26 1050 1614.71 1046.48 1618.17 cv
1045.14 1619.49 1043.14 1619.87 1041.58 1618.61 cv
1040.23 1617.52 1039.8 1615.06 1041.13 1613.76 cv
1044.65 1610.31 1048.17 1606.85 1051.69 1603.4 cv
1053.04 1602.08 1055.04 1601.7 1056.59 1602.96 cv
1057.95 1604.04 1058.38 1606.5 1057.05 1607.81 cv
1057.05 1607.81 li
cp
1 .862745 .819608 rgb
f
1056.35 1587.17 mo
1052.83 1590.62 1049.31 1594.07 1045.79 1597.52 cv
1044.44 1598.84 1042.44 1599.22 1040.89 1597.97 cv
1039.53 1596.88 1039.1 1594.42 1040.43 1593.11 cv
1043.95 1589.66 1047.48 1586.21 1051 1582.76 cv
1052.34 1581.44 1054.34 1581.06 1055.9 1582.31 cv
1057.25 1583.4 1057.68 1585.86 1056.35 1587.17 cv
1056.35 1587.17 li
cp
f
993.018 1565.81 mo
986.995 1570.64 979.898 1573.5 972.215 1574.4 cv
967.763 1574.92 967.128 1568.06 971.577 1567.54 cv
978.108 1566.77 983.862 1564.29 988.968 1560.2 cv
992.46 1557.4 996.487 1563.03 993.018 1565.81 cv
993.018 1565.81 li
cp
f
909.452 1551.19 mo
902.776 1550.29 896.631 1552.34 891.605 1556.72 cv
888.24 1559.66 884.224 1554.02 887.556 1551.11 cv
893.951 1545.53 902.28 1543.27 910.68 1544.41 cv
915.117 1545 913.893 1551.79 909.452 1551.19 cv
909.452 1551.19 li
cp
f
829.939 1538.49 mo
821.978 1538.92 814.893 1541.54 808.599 1546.4 cv
805.054 1549.13 801.022 1543.51 804.549 1540.79 cv
811.728 1535.25 820.214 1532.12 829.301 1531.62 cv
833.764 1531.38 834.423 1538.24 829.939 1538.49 cv
829.939 1538.49 li
cp
f
1170.07 1328.29 mo
1170.07 1328.29 1158.14 1323.18 1154.41 1326.38 cv
1150.69 1329.57 1125.87 1358.82 1146.69 1370.13 cv
1167.51 1381.44 1176.69 1355.6 1177.55 1345.37 cv
1178.4 1335.15 1177 1330.57 1170.07 1328.29 cv
cp
.831373 .301961 .172549 rgb
f
1094.76 1270.7 mo
1094.76 1270.7 1082.29 1265.3 1078.35 1268.78 cv
1074.42 1272.26 1048.08 1303.99 1069.82 1315.97 cv
1091.56 1327.96 1101.45 1300.04 1102.45 1289.03 cv
1103.45 1278.01 1102.02 1273.09 1094.76 1270.7 cv
cp
f
968.581 1280.13 mo
968.581 1280.13 956.294 1276.02 952.87 1279.5 cv
949.446 1282.98 927.27 1314.05 948.906 1323.58 cv
970.541 1333.1 977.469 1306.7 977.455 1296.47 cv
977.441 1286.25 975.661 1281.82 968.581 1280.13 cv
cp
f
847.804 1337.5 mo
847.804 1337.5 839.848 1334.65 837.504 1337.43 cv
835.161 1340.21 819.752 1364.78 833.699 1371.57 cv
847.645 1378.36 852.914 1357.78 853.185 1349.89 cv
853.454 1342 852.406 1338.63 847.804 1337.5 cv
cp
f
1096.98 1291.06 mo
1096.59 1298.74 1091.79 1305.16 1085.03 1308.64 cv
1081.06 1310.68 1078.64 1304.21 1082.57 1302.19 cv
1087.27 1299.77 1089.87 1294.95 1090.13 1289.84 cv
1090.22 1287.97 1092.48 1286.78 1094.17 1287.06 cv
1096.21 1287.4 1097.07 1289.21 1096.98 1291.06 cv
1096.98 1291.06 li
cp
.972549 .388235 .294118 rgb
f
967.268 1285.28 mo
971.097 1288.87 970.582 1295.85 970.517 1300.66 cv
970.458 1305.05 963.525 1305.73 963.584 1301.29 cv
963.612 1299.29 963.571 1297.29 963.416 1295.29 cv
963.343 1294.34 963.56 1291.28 962.817 1290.58 cv
959.574 1287.54 964.006 1282.22 967.268 1285.28 cv
967.268 1285.28 li
cp
f
848.498 1353.35 mo
849.062 1357.93 847.14 1362.15 843.684 1365.13 cv
842.265 1366.35 839.847 1365.74 838.827 1364.33 cv
837.644 1362.7 838.212 1360.75 839.634 1359.52 cv
841.247 1358.13 841.815 1356.01 841.566 1353.98 cv
841.023 1349.58 847.956 1348.95 848.498 1353.35 cv
848.498 1353.35 li
cp
f
2080.84 1372.24 mo
2080.84 1372.24 2164.78 1285.76 2176.63 1255.31 cv
2188.48 1224.86 2154.31 1118.37 2129.83 1097.73 cv
2105.35 1077.09 1996.91 1010.98 1977.65 1023.92 cv
1958.38 1036.87 1962.42 1072.35 1983.46 1089.43 cv
2004.49 1106.51 2054.84 1142.85 2053.15 1164.84 cv
2050.22 1203.08 2037.04 1255.89 2032 1265.75 cv
2008.27 1312.17 1976.95 1312.71 1971.22 1335.97 cv
1965.49 1359.24 2080.84 1372.24 2080.84 1372.24 cv
cp
.992157 .729412 .627451 rgb
f
2196.44 1393.63 mo
2196.44 1393.63 2241.53 1262.54 2240.43 1215.36 cv
2239.33 1168.19 2168.34 1090.96 2156.63 1082.18 cv
2132.22 1063.86 2039.7 1047.61 2035.98 1059.06 cv
2032.27 1070.51 2105.44 1146.39 2105.44 1146.39 cv
2085.88 1312.78 li
2196.44 1393.63 li
cp
f
2319.23 1383.06 mo
2319.23 1383.06 2305.91 1233.98 2277.01 1186.58 cv
2248.12 1139.18 2189.19 1108.5 2183.74 1105.5 cv
2166.66 1096.1 2171.23 1188.35 2171.23 1188.35 cv
2181.85 1333.39 li
2319.23 1383.06 li
cp
f
2316.28 1401.73 mo
2316.28 1401.73 2330.14 1326.79 2327.34 1246.86 cv
2326.34 1218.2 2261.67 1121.58 2244.15 1120.74 cv
2204.49 1118.83 2255.22 1240.88 2255.22 1240.88 cv
2203.6 1340.18 li
2316.28 1401.73 li
cp
f
2178.61 1320.03 mo
2166.73 1297.98 2154.52 1275.81 2147.86 1251.49 cv
2141.32 1227.62 2141.59 1203.64 2140.89 1179.1 cv
2140.25 1156.6 2138.19 1131.89 2126.45 1112.08 cv
2112.49 1088.54 2089.56 1068.6 2067.98 1052.31 cv
2064 1049.3 2059.38 1055.52 2063.35 1058.52 cv
2075.18 1067.46 2086.39 1077.16 2096.71 1087.81 cv
2106.16 1097.58 2116.32 1108.19 2122.28 1120.57 cv
2132.9 1142.62 2133.07 1168.35 2133.48 1192.26 cv
2133.88 1214.82 2135.24 1236.52 2141.81 1258.25 cv
2148.74 1281.16 2160.23 1302.17 2171.53 1323.15 cv
2173.88 1327.51 2180.98 1324.43 2178.61 1320.03 cv
2178.61 1320.03 li
cp
.898039 .588235 .494118 rgb
f
2218.17 1288.02 mo
2204.94 1247.23 2209.53 1204.3 2199.87 1162.95 cv
2192.09 1129.67 2177.84 1089.31 2147.57 1070.04 cv
2143.38 1067.37 2138.74 1073.57 2142.94 1076.25 cv
2173.64 1095.8 2187.4 1138.68 2194.02 1172.54 cv
2197.67 1191.23 2198.27 1210.24 2199.68 1229.18 cv
2201.24 1250.31 2204.54 1270.94 2211.09 1291.14 cv
2212.63 1295.88 2219.7 1292.73 2218.17 1288.02 cv
2218.17 1288.02 li
cp
f
2274.86 1271.69 mo
2269.88 1253.43 2269.3 1235.18 2270.68 1216.39 cv
2271.4 1206.73 2272.4 1197.09 2273.08 1187.42 cv
2273.72 1178.4 2273.82 1169.65 2268.99 1161.65 cv
2260 1146.75 2243.47 1136.32 2228.81 1127.81 cv
2211.86 1117.97 2193.94 1109.74 2177.8 1098.55 cv
2173.7 1095.71 2169.07 1101.92 2173.17 1104.76 cv
2187.93 1114.99 2204.18 1122.74 2219.8 1131.53 cv
2234.98 1140.06 2254.87 1150.88 2263.2 1167 cv
2267.84 1175.97 2265.35 1187.62 2264.53 1197.26 cv
2263.77 1206.06 2262.91 1214.85 2262.47 1223.67 cv
2261.63 1240.36 2262.81 1256.74 2267.21 1272.9 cv
2268.51 1277.66 2276.17 1276.51 2274.86 1271.69 cv
2274.86 1271.69 li
cp
f
2013.48 2007.5 mo
2013.48 2007.5 2008.97 1676.98 1953.41 1585.86 cv
1897.84 1494.75 1874.16 1431.78 1865.18 1353.72 cv
1856.2 1275.67 1865.08 1146.35 1859.72 1116.32 cv
1857.81 1105.62 1877.05 1082.46 1898.36 1098.73 cv
1935.47 1127.06 1944.47 1306.39 1981.44 1309.72 cv
1990.56 1310.54 2035.28 1271.66 2041.02 1266.48 cv
2127.05 1188.77 2178.34 1303.21 2238.89 1304.91 cv
2278.32 1306.03 2330.08 1347.95 2317.46 1405.59 cv
2293.04 1517.15 2268.74 1598.19 2285.19 1667.93 cv
2301.63 1737.68 2374.04 1992.57 2374.04 1992.57 cv
2013.48 2007.5 li
cp
.992157 .729412 .627451 rgb
f
1863.4 1159.91 mo
1863.4 1159.91 1890.3 1152.87 1885.9 1124.1 cv
1881.51 1095.34 1867.45 1083.98 1857.02 1092 cv
1846.59 1100.03 1863.4 1159.91 1863.4 1159.91 cv
cp
.831373 .301961 .172549 rgb
f
1861.79 1102.64 mo
1866.83 1109.53 1869.99 1117.32 1870.97 1125.81 cv
1871.55 1130.75 1879.27 1130.29 1878.7 1125.31 cv
1877.57 1115.53 1874.09 1106.36 1868.27 1098.41 cv
1865.34 1094.39 1858.84 1098.61 1861.79 1102.64 cv
1861.79 1102.64 li
cp
.972549 .388235 .294118 rgb
f
2214.35 1551.32 mo
2214.35 1551.32 li
2194.85 1562.91 2169.65 1556.48 2158.08 1536.95 cv
1825.89 976.454 li
1805.58 861.612 li
1896.52 934.478 li
1976.21 1068.93 li
2228.71 1494.97 li
2240.28 1514.5 2233.86 1539.73 2214.35 1551.32 cv
cp
.831373 .262745 .207843 rgb
f
1825.62 975.203 mo
1811.38 894.619 li
1832.45 882.095 li
1896.26 933.227 li
1862.04 953.561 li
1825.62 975.203 li
1825.62 975.203 li
cp
.219608 .286275 .333333 rgb
f
2419.47 2007.5 mo
2419.47 2007.5 2397.45 1931.27 2415.32 1872.97 cv
2433.18 1814.67 2317.58 1821.95 2295.36 1860.68 cv
2273.14 1899.42 2214.11 1903.83 2161.61 1865.87 cv
2109.11 1827.92 2089.78 1849.25 2050 1883.79 cv
2010.21 1918.33 1997.52 1844.27 1960.74 1872.32 cv
1923.95 1900.36 2000.53 1969.85 1988.2 1999.02 cv
1986.47 2003.13 1986.24 2007.5 1986.24 2007.5 cv
2419.47 2007.5 li
cp
.156863 .698039 .698039 rgb
f
495.097 2007.55 mo
495.097 2007.55 593.78 1870.14 592.207 1809.21 cv
590.634 1748.28 689.893 1788.06 699.982 1831.48 cv
710.071 1874.9 760.58 1895.88 815.591 1874.41 cv
870.602 1852.95 882.355 1878.87 908.802 1923.26 cv
935.25 1967.65 964.172 1900.28 989.558 1937.6 cv
1014.94 1974.92 957.946 1966.54 961.685 1997.99 cv
962.211 2002.41 958.499 2007.57 958.499 2007.57 cv
495.097 2007.55 li
cp
f
1963.5 1052.17 mo
1960.08 1038.46 1977.65 1023.92 1977.65 1023.92 cv
2029.04 1064.55 li
1992.73 1096.8 li
1992.73 1096.8 1970.08 1078.55 1963.5 1052.17 cv
cp
.992157 .729412 .627451 rgb
f
1589.81 1254.7 mo
1589.31 1249.39 1588.55 1243.92 1585.77 1239.35 cv
1582.99 1234.78 1577.7 1231.32 1572.39 1232.21 cv
1565.96 1233.29 1562.15 1239.9 1560.1 1246.03 cv
1554.87 1261.68 1555.08 1278.77 1558.57 1294.89 cv
1562.05 1311.02 1568.68 1326.31 1576.11 1341.07 cv
1576.14 1341.3 li
1585.21 1313.63 1592.55 1283.67 1589.81 1254.7 cv
cp
1 .552941 .403922 rgb
f
1660.28 1334.11 mo
1665.34 1332.29 1670.49 1330.18 1674.26 1326.37 cv
1678.03 1322.56 1680.08 1316.61 1677.87 1311.75 cv
1675.2 1305.85 1667.78 1303.87 1661.27 1303.45 cv
1644.66 1302.37 1628.01 1306.88 1613.14 1314.28 cv
1598.26 1321.68 1584.98 1331.88 1572.43 1342.72 cv
1572.2 1342.8 li
1601.53 1344.53 1632.66 1344.02 1660.28 1334.11 cv
cp
f
1633.69 1284.48 mo
1636.25 1280.18 1638.7 1275.62 1639.12 1270.64 cv
1639.54 1265.67 1637.44 1260.16 1632.92 1257.95 cv
1627.44 1255.28 1620.89 1258.23 1615.94 1261.77 cv
1603.3 1270.8 1594 1283.88 1587.71 1298.01 cv
1581.43 1312.14 1577.99 1327.35 1575.45 1342.58 cv
1575.34 1342.78 li
1597.55 1326.7 1619.72 1307.95 1633.69 1284.48 cv
cp
f
1545.28 1266.89 mo
1542.17 1262.96 1538.78 1259.03 1534.26 1256.81 cv
1529.74 1254.6 1523.8 1254.52 1520.07 1257.88 cv
1515.55 1261.95 1515.92 1269.06 1517.43 1274.92 cv
1521.29 1289.88 1530.18 1303.25 1541.15 1314.21 cv
1552.12 1325.18 1565.15 1333.92 1578.54 1341.84 cv
1578.68 1342.01 li
1571.71 1315.65 1562.21 1288.36 1545.28 1266.89 cv
cp
f
1497.31 1356.52 mo
1492.84 1358.83 1488.32 1361.41 1485.3 1365.4 cv
1482.27 1369.4 1481.11 1375.17 1483.76 1379.42 cv
1486.97 1384.56 1494.1 1385.5 1500.2 1385.1 cv
1515.75 1384.08 1530.64 1377.87 1543.54 1369.19 cv
1556.43 1360.52 1567.49 1349.43 1577.8 1337.85 cv
1578 1337.74 li
1550.56 1339.7 1521.73 1343.96 1497.31 1356.52 cv
cp
f
1574.46 1415.46 mo
1576.02 1420.21 1577.84 1425.05 1581.33 1428.66 cv
1584.81 1432.27 1590.37 1434.36 1595.03 1432.46 cv
1600.69 1430.17 1602.79 1423.36 1603.4 1417.34 cv
1604.94 1401.97 1601.2 1386.41 1594.68 1372.39 cv
1588.15 1358.36 1578.93 1345.74 1569.08 1333.77 cv
1569.01 1333.55 li
1566.46 1360.68 1565.96 1389.55 1574.46 1415.46 cv
cp
f
1649.34 1374.17 mo
1654.32 1374.97 1659.5 1375.58 1664.33 1374.17 cv
1669.17 1372.75 1673.59 1368.82 1674.03 1363.85 cv
1674.56 1357.82 1669.41 1352.84 1664.28 1349.55 cv
1651.2 1341.16 1635.52 1337.32 1619.94 1336.64 cv
1604.37 1335.96 1588.81 1338.3 1573.55 1341.48 cv
1573.33 1341.45 li
1596.51 1356.12 1622.19 1369.78 1649.34 1374.17 cv
cp
f
1618.56 1414.56 mo
1622.35 1418.35 1626.45 1422.09 1631.52 1423.88 cv
1636.6 1425.66 1642.91 1425 1646.44 1420.98 cv
1650.72 1416.09 1649.41 1408.6 1647.07 1402.57 cv
1641.07 1387.19 1629.94 1374.13 1616.91 1363.86 cv
1603.88 1353.6 1588.95 1345.96 1573.75 1339.24 cv
1573.57 1339.07 li
1584.32 1366.15 1597.87 1393.91 1618.56 1414.56 cv
cp
f
1517.46 1405.76 mo
1514.99 1410.5 1512.64 1415.5 1512.48 1420.83 cv
1512.32 1426.16 1514.88 1431.91 1519.84 1434.01 cv
1525.84 1436.54 1532.65 1433.02 1537.72 1428.96 cv
1550.67 1418.6 1559.82 1404.11 1565.69 1388.68 cv
1571.57 1373.26 1574.34 1356.84 1576.15 1340.45 cv
1576.26 1340.24 li
1553.52 1358.66 1530.98 1379.93 1517.46 1405.76 cv
cp
f
1502.65 1296.3 mo
1497.5 1294.75 1492.11 1293.37 1486.78 1294.17 cv
1481.46 1294.98 1476.21 1298.52 1475.03 1303.72 cv
1473.59 1310.02 1478.32 1316.02 1483.27 1320.23 cv
1495.91 1330.97 1511.95 1337.26 1528.33 1340.19 cv
1544.72 1343.12 1561.52 1342.86 1578.12 1341.66 cv
1578.36 1341.72 li
1555.95 1322.9 1530.75 1304.8 1502.65 1296.3 cv
cp
f
1556.64 1338.74 mo
1557.23 1325.58 1565.55 1322.8 1576.17 1322.06 cv
1586.27 1321.37 1593.15 1330.45 1591.97 1341.93 cv
1591.06 1350.88 1583.45 1358.02 1570.86 1355.87 cv
1561.91 1354.33 1556.23 1347.72 1556.64 1338.74 cv
cp
f
1509.18 1405.87 mo
1506.77 1409.41 1505.24 1413.29 1504.55 1417.51 cv
1504.17 1419.8 1507.8 1420.09 1508.17 1417.82 cv
1508.76 1414.24 1510.11 1410.95 1512.16 1407.95 cv
1513.47 1406.02 1510.49 1403.94 1509.18 1405.87 cv
1509.18 1405.87 li
cp
f
1486.48 1358.9 mo
1489.49 1356.26 1492.98 1354.34 1496.86 1353.29 cv
1499.1 1352.69 1498.47 1349.13 1496.2 1349.75 cv
1491.7 1350.96 1487.63 1353.08 1484.13 1356.14 cv
1482.38 1357.68 1484.72 1360.44 1486.48 1358.9 cv
1486.48 1358.9 li
cp
f
1638.01 1256.25 mo
1640.93 1259.49 1642.47 1263.35 1642.69 1267.68 cv
1642.81 1269.99 1646.38 1269.32 1646.27 1267.03 cv
1646.02 1262.13 1644.08 1257.58 1640.79 1253.93 cv
1639.23 1252.2 1636.44 1254.51 1638.01 1256.25 cv
1638.01 1256.25 li
cp
f
1544.13 1256.07 mo
1542.44 1253.26 1540.11 1251.14 1537.14 1249.7 cv
1535.03 1248.68 1533.78 1252.07 1535.87 1253.08 cv
1537.92 1254.07 1539.68 1255.68 1540.84 1257.62 cv
1542.03 1259.6 1545.33 1258.07 1544.13 1256.07 cv
1544.13 1256.07 li
cp
f
1590.18 1250.39 mo
1589.68 1245.08 1588.92 1239.61 1586.14 1235.04 cv
1583.37 1230.47 1578.07 1227.01 1572.76 1227.9 cv
1566.33 1228.98 1562.53 1235.59 1560.47 1241.72 cv
1555.24 1257.38 1555.46 1274.46 1558.94 1290.58 cv
1562.43 1306.71 1569.06 1322 1576.48 1336.76 cv
1576.51 1337 li
1585.58 1309.32 1592.92 1279.36 1590.18 1250.39 cv
cp
f
1660.65 1329.8 mo
1665.72 1327.98 1670.87 1325.88 1674.63 1322.06 cv
1678.4 1318.25 1680.45 1312.3 1678.25 1307.44 cv
1675.57 1301.55 1668.15 1299.56 1661.64 1299.14 cv
1645.03 1298.06 1628.39 1302.57 1613.51 1309.97 cv
1598.63 1317.37 1585.36 1327.58 1572.8 1338.41 cv
1572.58 1338.5 li
1601.91 1340.22 1633.03 1339.71 1660.65 1329.8 cv
cp
f
1634.06 1280.17 mo
1636.62 1275.87 1639.07 1271.31 1639.49 1266.33 cv
1639.92 1261.36 1637.82 1255.85 1633.3 1253.64 cv
1627.82 1250.97 1621.27 1253.92 1616.31 1257.46 cv
1603.67 1266.49 1594.37 1279.58 1588.09 1293.71 cv
1581.8 1307.83 1578.37 1323.04 1575.83 1338.28 cv
1575.72 1338.47 li
1597.93 1322.39 1620.09 1303.64 1634.06 1280.17 cv
cp
f
1545.65 1262.58 mo
1542.55 1258.65 1539.16 1254.72 1534.64 1252.51 cv
1530.12 1250.29 1524.18 1250.21 1520.44 1253.57 cv
1515.92 1257.64 1516.3 1264.75 1517.81 1270.62 cv
1521.67 1285.57 1530.55 1298.94 1541.52 1309.9 cv
1552.5 1320.87 1565.53 1329.61 1578.91 1337.53 cv
1579.05 1337.7 li
1572.09 1311.34 1562.59 1284.05 1545.65 1262.58 cv
cp
f
1497.69 1352.21 mo
1493.21 1354.52 1488.69 1357.1 1485.67 1361.09 cv
1482.65 1365.09 1481.48 1370.86 1484.13 1375.11 cv
1487.35 1380.25 1494.48 1381.19 1500.57 1380.79 cv
1516.13 1379.77 1531.02 1373.56 1543.91 1364.89 cv
1556.81 1356.21 1567.86 1345.12 1578.17 1333.54 cv
1578.37 1333.43 li
1550.93 1335.39 1522.1 1339.65 1497.69 1352.21 cv
cp
f
1574.83 1411.15 mo
1576.39 1415.9 1578.22 1420.74 1581.7 1424.35 cv
1585.19 1427.96 1590.74 1430.05 1595.41 1428.16 cv
1601.06 1425.86 1603.17 1419.05 1603.77 1413.03 cv
1605.31 1397.67 1601.57 1382.1 1595.05 1368.08 cv
1588.53 1354.06 1579.3 1341.43 1569.46 1329.46 cv
1569.38 1329.25 li
1566.83 1356.37 1566.33 1385.24 1574.83 1411.15 cv
cp
f
1649.71 1369.86 mo
1654.69 1370.66 1659.87 1371.27 1664.71 1369.86 cv
1669.54 1368.45 1673.97 1364.51 1674.4 1359.54 cv
1674.93 1353.51 1669.79 1348.54 1664.66 1345.25 cv
1651.57 1336.85 1635.89 1333.01 1620.32 1332.33 cv
1604.74 1331.65 1589.18 1333.99 1573.93 1337.17 cv
1573.7 1337.14 li
1596.88 1351.81 1622.56 1365.47 1649.71 1369.86 cv
cp
f
1618.93 1410.26 mo
1622.73 1414.04 1626.82 1417.79 1631.9 1419.57 cv
1636.97 1421.35 1643.28 1420.7 1646.81 1416.67 cv
1651.09 1411.79 1649.79 1404.29 1647.44 1398.26 cv
1641.44 1382.88 1630.32 1369.82 1617.29 1359.56 cv
1604.25 1349.3 1589.32 1341.66 1574.12 1334.93 cv
1573.95 1334.76 li
1584.69 1361.84 1598.24 1389.6 1618.93 1410.26 cv
cp
f
1517.84 1401.45 mo
1515.36 1406.19 1513.02 1411.19 1512.86 1416.52 cv
1512.7 1421.86 1515.26 1427.61 1520.21 1429.7 cv
1526.21 1432.24 1533.02 1428.71 1538.1 1424.65 cv
1551.05 1414.29 1560.2 1399.81 1566.07 1384.38 cv
1571.94 1368.95 1574.71 1352.53 1576.53 1336.14 cv
1576.63 1335.93 li
1553.89 1354.35 1531.36 1375.62 1517.84 1401.45 cv
cp
f
1503.02 1292 mo
1497.88 1290.44 1492.48 1289.06 1487.16 1289.87 cv
1481.83 1290.68 1476.59 1294.21 1475.4 1299.41 cv
1473.97 1305.72 1478.7 1311.71 1483.65 1315.92 cv
1496.28 1326.66 1512.32 1332.95 1528.71 1335.88 cv
1545.09 1338.82 1561.89 1338.55 1578.5 1337.35 cv
1578.73 1337.41 li
1556.32 1318.59 1531.12 1300.49 1503.02 1292 cv
cp
f
1557.01 1334.43 mo
1557.6 1321.28 1565.93 1318.49 1576.54 1317.76 cv
1586.65 1317.06 1593.53 1326.14 1592.35 1337.62 cv
1591.43 1346.57 1583.83 1353.72 1571.23 1351.56 cv
1562.28 1350.03 1556.6 1343.42 1557.01 1334.43 cv
cp
1 1 1 rgb
f
1509.56 1401.56 mo
1507.14 1405.1 1505.61 1408.99 1504.92 1413.2 cv
1504.55 1415.49 1508.17 1415.79 1508.55 1413.51 cv
1509.14 1409.93 1510.48 1406.64 1512.53 1403.64 cv
1513.84 1401.71 1510.87 1399.63 1509.56 1401.56 cv
1509.56 1401.56 li
cp
1 .552941 .403922 rgb
f
1486.85 1354.59 mo
1489.87 1351.96 1493.35 1350.04 1497.24 1348.98 cv
1499.48 1348.38 1498.84 1344.83 1496.57 1345.44 cv
1492.08 1346.66 1488.01 1348.77 1484.51 1351.83 cv
1482.75 1353.37 1485.09 1356.13 1486.85 1354.59 cv
1486.85 1354.59 li
cp
f
1638.38 1251.94 mo
1641.3 1255.18 1642.85 1259.04 1643.06 1263.37 cv
1643.18 1265.68 1646.76 1265.01 1646.64 1262.72 cv
1646.4 1257.83 1644.46 1253.27 1641.17 1249.62 cv
1639.61 1247.89 1636.82 1250.21 1638.38 1251.94 cv
1638.38 1251.94 li
cp
f
1544.5 1251.77 mo
1542.81 1248.95 1540.48 1246.83 1537.51 1245.39 cv
1535.4 1244.38 1534.16 1247.76 1536.24 1248.77 cv
1538.3 1249.77 1540.05 1251.37 1541.22 1253.31 cv
1542.4 1255.29 1545.7 1253.76 1544.5 1251.77 cv
1544.5 1251.77 li
cp
f
2037.05 966.586 mo
2028.52 903.584 2018.32 854.064 2006.57 819.708 cv
2005.79 817.425 2005.23 815.778 2005.06 814.979 cv
2004.81 813.739 2003.58 812.944 2002.34 813.195 cv
2001.09 813.449 2000.28 814.657 2000.54 815.894 cv
2000.76 816.973 2001.3 818.556 2002.2 821.175 cv
2013.92 855.455 2024.1 904.959 2032.6 967.996 cv
2037.05 966.586 li
cp
.74902 .219608 .133333 rgb
f
1969.21 792.109 mo
1973.53 803.751 2004.22 831.629 2007.58 830.409 cv
2010.93 829.188 2016.1 788.265 2011.78 776.622 cv
2007.47 764.98 1994.44 759.009 1982.68 763.287 cv
1970.92 767.563 1964.89 780.467 1969.21 792.109 cv
cp
f
2029.88 841.098 mo
2022.94 851.761 2018.84 893.759 2021.91 895.722 cv
2024.98 897.686 2061.93 876.668 2068.87 866.004 cv
2075.82 855.342 2072.72 841.123 2061.95 834.245 cv
2051.19 827.366 2036.83 830.436 2029.88 841.098 cv
cp
f
1966.85 898.571 mo
1978.9 902.871 2021.14 897.368 2022.38 893.962 cv
2023.62 890.554 1994.62 859.641 1982.57 855.341 cv
1970.52 851.041 1957.22 857.232 1952.88 869.17 cv
1948.54 881.108 1954.79 894.272 1966.85 898.571 cv
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 24.3.0
%%For: (Natalie Pepper) ()
%%Title: (NAP2350.eps)
%%CreationDate: 4/8/2022 3:59 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6B3RDgei<T?hWpX!!+Gp?ll:sp78Zo9`s.tTToh#b^NoALm*@\i\d=8JmQIn._p48E7<MV$*4pQ3.;&6WV-9o4Zi8bLKQu/`
%&ibpC#eHmX\DR:l['X1%1V9i&8R\%=Q/P\&/8:WmjsR6>^M1-&foB&h]A:!IYWCSL:]-R,nf/M^pr2`-RuN0qLF:Y,MKQEUR[,$o
%[>(*T3_cC4;8O:^MN;lLGo*W8"n4=-X,lKl%->]>%upd.e%TIAZ-b.3PlC41SsbjI\(<?\261jA^o>_g_NrK8D1hceMf!]`pr<n0
%H4jiCkVmg(:X<tqI-_#!\4"\bd`.D%>m71$Mg9YJk8UT6#+U004T9gimHl;!/9jRD`:h;b'=`h5-7GBSP2U&i^4:^>!KQs>OGL`c
%fk`U+Sk4Uq-(pK_PR?qG\Zl!T`46;T_(O\G,qKE\6.!-G!ZPpd'F)^tONQmA987OIJ$58iCj>YJUL\OanjY^S>jX0eUIZp<J*\9&
%q@0cPhQ$5KP7!<6N&F1,a_\`nL'sdq##T^ME;F@ra;^\-f`Pio)LWmUL.<3LEnkSFN*dne,&_C?dPb<Tl[k-86BDma'Tf0!0IJ('
%_P/5HK&Y_i8roiA%Q/h-H.glBBPqa?/)km#:+?l1$_2OkWE!]8%G8T4dWNN@ik8*h1ur(Fn7_/!/KND3rmdQhm@sb-H9JUr^qpJ?
%nY6\1i5.uEgcF+<`N:K8Ul/Si+9sJ0ObQl@IiX!3hdD:igP1Cd*fhn_T[pu6J,@PHqb;F]2Yuq'?H;??e#fqKgOK.KP#X2!(M9pb
%Fb%U\cUm(5^'$QIP#P5k@h`>\pcb&Y2JVWp-OU!G*RhoTKkoqRo3XH.K,B51)(r]oPHE`eL=I>JR*B]Y@MT7("qYOa4-t;-dU;SU
%-B.l`C+H*"Vr^L9C4NR5G5H5RmLQ'oXCc4$Y,hL>7a(#.g)rb%(r-2?CuIdgGNEG]\C#!>.NP9iXVF"(:;:$+j=RDe=FS-UK5F)-
%US%%uO#I5a<6MZbBH9mO?gF,tIB7$"/XRne2;1#PS=06U/P]Joh'>6*6G.mNPSUmN,lli-gYf)'42HuaZqIPmR$k>%peQNjm,9DK
%Kd!L*[S#Alo'G[]>ng'mk3Ca:RK]`hlSaO=*>us;SR/GN0QY"?4`a"/b)]pZ7P-nSoVmi.3VHtN@LrCJ*dRkQK?p+upi^eE3<fR]
%T+eUVg2!JTl][r!4oR[8N>DF/!do0+Kmq>NjK-29BW#@QSl;`A)PrJIU)APq4UkS2n0@qsrBb)"L'UC97N:`pn]1qtlT&(Y<>hG*
%]@#isF).Urk-U'oRf[6<8Sd2d%(Gjh&:_9AiQprp!M!"'5ZH!3V:otkM)0.?.ItXc*5B2u"H,CROZ;iOLrq"2jP.:sD/AofoA(Lr
%;Qo?e,^\C:]+[u0:)#l^7'#3-.JA_X9fE1rSc!>V)!9o*_($:-1Y"3eqIZel7P%oks"<5UrD!BfkuQ40*(4u#ViV?'rt^,g<j#MV
%&E\%Q\hjr((2c*OD"`'NlZ9j&B"-Z:A)a#8/sX\.BBDE>oB.%Lb^[Wb,A6umoA;kKoVt+XdV>6l"2\mk6lAajDD%uthGa,X4tY(V
%/jOGX^Jcu`=?aM07'6OdG'Te*7$hp/0#Zin3X'e8T-%H(@?s'G1D@o&o2'<Gb0<;a[iim^\URg3k<]p/?mt1^=#Zn:>e+>EH5jn*
%XZMU*k-<](QCGp8o2olObP`Ai\X<3)fuR0QP4ckV.*dO"T+KIC5:WOO8!>B_lJ0ct*q'NMbYl=U]gck0Y2%7Kl/+qi6DORPDZ;rt
%RG[35:q#fTGQE.\^Y>k.Xk<NXRVomnL%(>^fVd.V)CRNu\C'K9mnD2qb?_IK!?9:XaLfo/ZQe]_7&$*6ncl[1fZdKn]-[HT^)shC
%=j::_2n:8^hKNrWp0"$[h]p>rb)M=^Q#=?82Mu+LBXf;7f^tf2&&,$qi.=/.Pl6?a8cIDO>%Yqef=elYgAl=+?efC=HcDE1)dY:p
%!Co]C3#=,"j^C=."6KZD.?B/H[R:p>r8e!=^V8OEaBGuP0B4[KZM)Tb,A2pL`qC?`dcpRI-%V]Ok^5*40_Mg`f+a[=R-/6bNbQrB
%0$HZ\4^Vid&3/pd=N]jWHI\nGF&P/i.;e4aafLD<La.?j$uQpK^$O5c%+97H_2[HVJ"tk;e9Z5onddL8?SEd)D\hLf!<78e:Rc5"
%9#>mT#^U$).OJVF-G:Go9(6KAiu^G']Z]L,lgfm:<[60Mc+dN5+Juom7p_Y[<8^R<n8SWWPijq(-229Go0+K+(Sr$6]BtABq/5bL
%e#q^+Y`#D(FGs,"mmc`8M,R*1R0f%+A5Cm@eS/+T=a_nRe.dW\5>mKO\J8VW`hn\=1S_tPb%k1F=5c[)Fn-1a@bjjiAd$o>SU@ae
%i%s-ll_:M%#&fHE@FSr^`qY,nd&(+ecgU:oXh4Jd0\u*J*B3E1N#8-(Im?<Y]j@"-;J%OhkdnGPiL=aSDun,JLq+Hl3W3e=J%)l_
%T),=Bb#>rfZs%&dB/\rW)/]dYD_Ci<ps*,D4229_gIo96g*CFhG/G_spd15jUHP(nk9iA+Z"_!o/rH8WiAnNDaNRbWiEN6CDa*`%
%+$U"!5.ZR_S;G_]2p@.Lc/-,+OaKm6IWLXuR<nhok$H6!I!UVWilm@]F(IrCAuVC\Bkpj'(C;Xf=R8!D+&mb\Yq\<8]1?]or\/f7
%B6hLB[:aSd1+Sji>p,D<p/[JpNJ>&7Z,ZM=j$NR$ZCeK!0`gc(#EI.1/g)+@Q>*jBUb<XG,/,PU"_>NMhZ[!"U^5*Hd7U5R^*qA<
%]`qEMc0KMG.gfn-Pr5f/9sO"]mT<1B.Y=OG(EB^gP*F`aT8Utj2DAA=\X&]rfD=XN_J%JgXrMu"J*I/$i5'6K+45q>rI@WW2jB]#
%8ET*204q^-`Q]'lB!<$3#JY/[3:B:]ceXu_U3n?;c&Cb(jj;5-l'_'JPi>L&7<.9ic:BUG)fj/_R/`+OPeUF,c$N=e!Vkfj.'mE(
%k.N0AjuL&IaNRbW:E!&YAhT#l2f;)Il<3RE.F*9;-@46Ad>R"=3&@>p>ZoJmOnui!8i)Ag26O=+N6lUR+.hYqQZ,]Vq83d+cS,4e
%$%CV"$PW/cS&`9(M)pRglUO/)a%\I8<h>KG6_D$h`M^r(p"EL>RPNK15>n\qT^,jdc1Tf:dqd&8N6L+cs7f;V`"1=3F)Pouec*Nk
%D=4M(8?FfEe`L'&?`DRF.mf;HF3hoY.Q8.lpqN,*B;tqk(Se0lOZF:'(FYZ/d9MW:Mc$qVVqK-LN*hW1iGM>Wo>iQ\h\[*S>d_A,
%bl'/mroYq,RRR06IsB/<4M7M#2Q_0FKe[?RDu!(lbl3f1\nuh<bNIg.TA22OEm*?cs7jobj@QIR1<[)Vql`g;e)>/mkTsI72)=p\
%8EA_g"jY$/n<`a^^RO^1rjrJ$GlF,#&ABe!q8s@XVTgtJ\9ir&Zoe$^K*Z[YaYPa/q`jY2Kerb5V0<M7X7`6^eSJGqYcB."([m!K
%1$SL#.;A)91O!P]Ajd6L*O_G//`7g3<dub53(aIHoPGJ.:9@T7RQWUh0iK"8709ps?8'YBEPudS5[D1p?GUOg#&1[5i(!%`^[pD*
%,M)B44l#LacK3Opa00bCs#MAbMhQs?MVbG]FFL.Fg<Zr%re/<VcKi5T&C0UVDpl/eqX;)r40S\0hqTris3BrFoD7qUh:]XPYeY+e
%FM-`nh^Qa[:V/tYYPJ19[+oJ.4D)=i>H3t3I5gU\R!LXJ3ea,Gq)n;Sfi&<E9u=EjJtT7-7MWSHik(l\AMtIX+.n2<W)]i\Qk1b,
%"&`Diq"fU2!mn?"c&<QbnV"\q^Jfm&afV(m:S2N?4+Fs2g,q_\c]J,(q'-^PI@_dTVoe(8ZN%dqr#p!5rP<2'jp,g*3i:Ta"Actk
%"CQ![C\.:heM)?>*OE+eFc=n`FmXJRloQ7aj!'t,2W1(J[+!+ODpoGi$^cmfC<_4r]pB1gl#C@u2lC@&2%"F]k[o3XDb>W#K,NG$
%R7XglAb:U"p28V96F>2:=gnh/o<@%ffKR"@YrOW9B,dRe=,FZ#Q[Ba&0'nI:g+Qtlhd/'6]Z_$Bo>Jg7nRB`V0D!-*4Rk1&]R0o%
%VHI$\`Ql=srah[GRGnLZnNe-Z9.^PC"O]D`oYlIDm!r`G1Isau5ncI=C%TklV#:pkAu,TL[N@Edk!&Y;_^<)J'QZR1q84PV",:N>
%fL2Lcb8Rd4F1S\k*o4;#:VUWATl2<HD<!U*'%7O6a8(pdVSbCmKI8K7`pkE>L$=N3f$mnppC>E^c8a*Y^&8<_2_4Nj5CI85[ibD;
%V-MP!=b$@*=7=?T;WImN/tT=*^Rb?#rL<WMm*ce,]6I1`krl.)eo1*ApMlK<(gO^jPpUpKVD":JAe3RnA!U@,aioS?c[&dj$'FN1
%(^'[p9KF\'rE:m/D3Xjil0*DGp6-`.TC?gT&2,\b%Ybo5l5L`l?K>>k;)R/eEt'Hk2bi(PK\u#*ri\]hn)6CN%Hm[e/%KDD[-,\I
%*^c@Y0kMSrRHH<%d/hgI5T[fP%.cU$4HD5CA'FN]o/t%=--A?20e7O.T&H\FDsFYGo/a4I=Ofk7?`W'H.JA_X?/='m3r-B9c\5Xe
%8>T^9buD`2l'nfL)[H#cr9o6>p_+:!jc0@(dQ"[MDE?t6Fe8^l=T4d2h3.*SHH#V63b.sqS<pE:>fkIIltL(CR0e+qhpCaLD/+S"
%TV;16L;"nai54X%T//;)ZMAQr^<ok1GH@Y\d@t@4"j-Zk6_ET4Dh#n@(O#>/Wh/=le$WFB*rep^j"$0"qPOrjq0o6gDh'"!c(s9Y
%Hhti[HVTBt5^Psu[9pPfCRusQS3*J0a.WQ\I.%j.=j"jrkujGJQ7qYr[=#LcB&<#7%1Q[Iq!R%enE$D%@g;6*gs7Q#oKMlAkF)+Q
%l,gjg[JlS!r-/"8o2olObC..TbbM^o1l'JK$X5iVk,-+uSk!knBPnm9rDU4FnJ$QmN94A125A"C]Wl2mcHX8;GrR_mcodhfLNEL$
%E:2/[8sPFq7[0f7Q4*4I+e"UE<&Ecu-M)J")WEbYSG2K.k?Qm147*s670#8rWl4YhC%4Q/I%C)r8m!1k,lbdS^skRkA,`.I.G&&#
%#@pMbg2d"4nu:5EjTYjcls8orKn`I+DgL&teM`;mhQIAi)<u,.=2Rc+et2VA^q(fFXJImT8?eMHU*#`Xm*^MFj$,plr+K%*h`[`J
%lLWD@%F^9G#daKD4SLL>S9@ojqF+f&U>a60(n3\-:t[+Q>:k0Y\sqX@obH?fh&fWu\#qXU(Uo/`;B;M4^:rO;i,^JU1LlVRFSg4X
%S[)*Lh29n\oRBrp3c3GujQ7gP1.cKUTJ!POhcqM@8*58i,nOA'T(,maflpGa)9i"jpF/ra)jG>Da^"]j%mmigA"/LHo]CV64oNe:
%;Wft2a4\tAIH[HDR)qSI<m,UHKYP32MIR(XY[7YkhHht\:=7iEReoMQ5+a69bOA1e76`GZs!,4MT@S2a,q@0'h,E=seDH`O8dLsZ
%?#4(oC;"B2FS4#VRF5h&]T`2=:Q?><N]>iK][s5=#(nbg0Xsuool&?nNERuNeD:X5B$i`P0@W_2C&FZqY-Vsbh8oQM3)6aA1,k6B
%6&3!jr1AW6`E6p@%A\=`rTe:[/7t",0,pE^Vs!4Lg8qu#E8!;28&"!M-U3`9rXb^THAKnFO1UfK#P:O#&Uq_A9[kn,3>W3?QjK%^
%#?Q+6kl-u=U#A/)rQh98K9=J'VN5U/TJLR'FPj05$+cDgkTa6"DDgr_T8rG/Di4FSQ?MD_OV.Erc^"jI#a2(ai=[M&q2X+"R6mD%
%LJ7WUhE&kZ,F@NlYt*'aN)l<s3lr24U01=tZe\$b]6Qd59Y/]JMS[7POu&jN^8CC37>b^6Tgl=mQ-E((f(hldT5R]]dmdc^j.auO
%1C=T__JOU7D"`(8Qk&Z\B3i8NS##n_in7#*Og+-04EEEM*B)ZA9fD%pb&!BR/G?3j+V`qo/^O6QdH[%R]LcN=H2^=25$3",LH1o4
%^>32^o,_7s%V@##S*e]1[CepINIOE:Ahh0uW^<*g5+T(sbCA^Y?[N1.;DcX>O3(F:n1l7-PB#gVfP4u+'mdkra<$D1Q!.tqQf%d`
%gnrscp04uQLVG5/=r'(oZt'nF:TW%6<]rrBbG^dKcUk#;BDh*d&,S5%1`Eb/1DBK3]O`tO4a3X9hhdMD-d(q^!hX$-rl_S8')Yg2
%@?N1G0=#9k$_J`-9uM$?@Uk96[V+&J=AFFnWjE7u>%hm+G>FF3qSh`QT@X1:Y`0\hkr<__!CX\D5/cW2-O`i#%kl<03KF(Zq<-f0
%s-IB/;h9*AcqXaJWISe"BVto'kW=kp7G=_+%Jg-JA,jDYTH-bFEM+>3&aa6iI=pX3G,d%jT0W9l8>ENKU7GU#+'IG(`HTt?rb0\<
%e:.C$&3L']a$%N-0utRga'>b"DO?&JSEC%T35&Dgc]s&+BCI:Mnqs;9*\ONbU82Mm6.U.<(Z>IH/a+s;i$Fp-keB6`.`2cu;-_+T
%kIUMDh[\Sn1Q;85kj]X<DXTS]kr8D-%!<0K>_3&U4$MqfiS2gf_f_mJ.ZtALTcg<[7T1S%U=s.B)1bcK^P?,#3-ZKQeJ(_D(_pAD
%7JrgZP,,&eCk!D"6rm]L&Yaa"*Ef.Gp3J%f,[:&dao/\]YX5hNU"Ti]$Gj7K$ZS<._f,Rs(+3P5J$prMZ=f6t`pg/p2&dJUI;m!*
%EHDEYs"C<6`qXILb#\HoAIe&CrL!K4/6E?dlMhg2CTg4bgVJV#@28Z6#_E^Z%ktQd\F'bJBB%Mt0+A+T>dt))^[D`MjFKtr^KTc<
%g>tKDAa/_PcZA?u^YJ*<rbchhS"I9_0H#B81aP"=9m?O$bbM17CZ,Zg54>h3\U`+uffLON\3S[0oX1Xu[Ulj1O$mA^_^a6^:S6i?
%-ZQ$_SP8R'8&U2.rR.H&>1YJ,kt3_d;"r_$O%Q+un+NjF5H#?p!m7^G^5_%+6]#m!`9I:MMf*VGo]XYVJtd82WW*@:aaN$ppV/o<
%cP#>Wq2ac!n'`C+h+"OAF4>G*'Z1P2BqFuRdqF+sGBYm9'"ol9Z5D.M=o8sdGHZFlUPuk\q>2<D#sbo&-E6p@+F`$U:WN5f-%Lgl
%%rc6gn0qVFhO@1d)88-,qr%X'`@U="\-c7I]W-onm[\H7Q-U->FI9NR9oWXK)O&](k_7pCiE:]IRu28Dc(7c6Qg8QLN;e;jN3?dT
%9jI5DaD;dS*7g.IF\gb*RiP;6f'G>Mh8W*KZ60IBI86;EFF",6k`e4%2?]*!kmYGD:T"t_-g-7ho=QI*0tV&\GLMa7s6P#oV-;1n
%e/G`dUZ6SfeAT2G:9H!_[!jsF\_:EQ.nRb*He;ZP2ELV\##D'o.fj=5RBO-Ym4%E/MCa\Vqk3F':k(O6dP4JJfGpI+NT%sPSYt&H
%J3kSje"kd<a0Y(`LsW8Q%p$.8D7=.!TbQ\RoiT*g9;o'IN;%eG>OD074@<mHqQoPd][s@p7cV^/pD_p3kIjac!skAc\,MhW\o#W!
%CWV;>J8sd%Eh#9pC=g>+0kN7WNfFhhk>6#j1m6IHVEN=UcgmSDh4E:;Emc4[1e;N$:[@e1K+<$%7Cuh264V7I'1@BBP_#\pZNVQ*
%G(d^.h<_L'IG15WimB96NER8lLV_o@^mPoscc@CjQ,g&k&/_+uc!h4I%ELKl[d5s9;E_R>)\:Hk>iP'L4=AFB*#`Po,%o.15)QFC
%qq^$0H$_q[8cIB^WZ/\qKuNOpY?X5Z:A#P8#@SFQ!h:9[S]F&N17=mWo[Z/I2j$,,Z#B8Bq2A<1)OQEJdY,^HFYFagAp2UZZ+6XE
%kE2:Eo`U4&,?Qj-]p]1nbP7$H+J4WsbOfn'*NO(hS_XBZq3K7A@h(nXh3`)FbZ?QNd[jnu+U(X<#-(g%`r+Y/HqmQPiA$c2Bh<&P
%ON*'#]AIdTJhrUFms.C.U$BF%`%rF%h<I88aSpG09Mfj0&Q:N8`C[hr#.=0H2>e$T\&ZZ/X\.KLR%CD0*pCU<gn\V+8nMc=PBk`?
%XkrjAr9+X4Ci1XG'82Il@#&('@,_tA'>Ml%Eu%t%qM4D(DRaAfHBd9/cGVF0C)/R%$`)I\!u%S4Re:XKkg[4F\K($r`)&(`pT/Pr
%rH%tk`cD3-H6^'aeBP1oFujQ?.DI[Hnn'@1l)_j!.?%H<@C3r&O!YK9"]RMg<!+u1#>c$+S"q@Np7F/RK]!RSp^%VWX^8NeBF`"*
%d\J$ARG.FL@g%R'HbnonZn\)T:d`eQV9MD'_H/1U*V2.H^H/%</m9>AUh*R8e1[GbSqupiUu;^*7lAb"9McY?>\e_uCM0FUr$d(V
%+7_UjBtI<PhC=7=CUHGYeQQPMF',$96EerZ64t'pG8[u&QI0Z17b?X1W\d33JI;Jr9"k8ua=Pm<bn3Zt+..G'@#pH>jBVs>oj<"=
%Y@_ln#DHLap)sV'bRbE'YtH/_[SuI5_a^\<I3eJBWSDD,5F>AcL)k3Xl;c*S#EZ`#YScNLZgu-gnFB5DeB-QM<7F'TrcISH_[D?t
%L4g"ej.s<&4.)j]XV(Q(,jHUe.lMm:psX/<bs8[RH1rQGV4$?lr_sL0reZX;kLOVQjN1??rRZ6Q$(WgA`Pt6AM.53+(V2d(gcoNt
%hpHHR*\E&mqj8EL$NC4JAD55?8cHYSOcX\j)23`H"r1#+'Rk<?*RN!#GBaOLDH)"/@H'R\;QU8:Cd^X(&g,]^SNW:Fjjc%4ID"u-
%E"a)Uc(_MDL&&i()lu(md7HHUlq?0gTD9G9j<']dLl9UANMtsDrj@S,DD`=Zq2$=Kp#N+.?6e6CQ]S`rUD00t(JZQeNT#aj=(Rm]
%SGCj$kS"JkTI/l27JiG^/4o[uFDTo3X9fLKlsIA>FoM5N>,)`P7,EWP;05d4TY@n8eYti2nX5Sk$Teh;6thT!Q$#)<^+0_h9JOq'
%K/ki95LMeNCJ8S=`[1BmT:'5[6C9L=Kj(ZoHt7.#F0/5C/]>khm[I`.#AY(@N:_n;QHX6KdMaD;5M;/flHq3:UZ'!V)Y\!+Nsu?9
%0P)7h211t;_!&J@?+8I('S!YrWTk89O6eEe<G[)"p6[U`Xj/7kJ2)hkW,17XNlepAo/8LVU54a[hs[!?X%<&^O^bejKuT_6W,neJ
%,fAY##;B:[)N>8fLXWj-=rUF8X8])C3gj10ZcZp$MDi?8I;BneOEa-CMtK+B'Qgp`7<]6OKA/ESA5jXQKeromUPP5,RRkH^p7h92
%l,876R,Egu0aU7IYl%TQCa9Ndq3\XTpt#nm0ngOT;lF?4;lCqo4\Pug=t_r)8q%EI388hF&:8IFkM3VQXPg.<)Zo5H<J>$\3rVY[
%Mf&DRKr)qqApfi[H:ri#coX3pY%=snX'd@h*TN4Tl5HGi*6/FO>0L_a_sFq3etV68I<XN5aZ8C*o*EQQ%F4)i>W:AMj@j["#%>_g
%)SgilDD_3S.fatp2r<:7YsXnbM:?%$GrS<eo^\1QKWhNjn/AosrR[qWU2rW;m.P2<C*%lk-Vh/qCGfi/KD"au/9;c>>,<qYqOPia
%K7\KKejT9da!-0IE(2;GK_7in[E0H?=q3+f=o%DFHqsH-AapepI$0beP[#*oK(35c]Zg2fI!g1_6t#eHku6cN*/(V004hP;B1O@N
%#f*Rt_,',Sn!_1dq9M/KB73uij[Uf-D@h>##'6*6p7$c%;/;+9Ys/@;50V93T^A9PITX>[8/-kqioJs??]2fi0?-!rHTGH4@l6RL
%r*aa5R:/W::!@fC<utKrCWI-&N0p=CCQM/bAGN$Lh,R[nONDi<=SSH?Tb/mIWPD6*dc?)]A=7[HqtXK15H(*$8Va-8&-1;([=Mi[
%23OS[7AYuOatDR3;CtSb<D5m5)fCd%@C0JYNbc?rV%5-ob:uJE*NNT?1<(uRo3qIZ>pSM:.AW"*IAQ\q5jF*.=93=4Z7LjtdMU]E
%e#ahh!O#LR$XT?."TB="@\3fkmjQ1q7XCuto7a41LLU.<5]5]W'e<$9L*)j)3:itL\>YgFHk_Q$dt^(:0%L56$[i\DB`<Ao\D@=r
%c-r_^*]l[J!F"HaE*^d3<O:fO)S[L5)D)JGNWH`:nK3mU4@U-:A2j>$-A.n]YQmiS/e!6Am(0HUIp%1q)uO[dON']e"M<SHfV0)_
%r8Ch;?0<)F>1Ym@nR-n`5k!r?\5:TFeB!P+4:QpKpBs'?N-6."S?Y<qDgI-?VcsJM]aP]e459W5Z695B=QSLmC0aWM<QD^V_sa'2
%a4i.gC2K<-ic$hIL21hA&Ka&+Y%P+6&1G%p3V.5'rj@se;1ctO"8G[Z[eYaiQ3_JR_Sa=n82as"(PrCNk>a1^7roO\C4cr8k8;Bl
%=N_YN(JsPa@A221,oU4f,a47ud:W?32=jPTqglW`W/580;o;+/bcMf]a@_G[S5#%dVD:pu4pX,RL9m(=&(GB:Hf:^L+->:"kG2=)
%&)R4GR`aSQM6SGHp[YOU-X6JsCh1dcfpoFB^jS36D,)6U1aYU<YPXf`oJ$`,SCB"aWdCZRZ^et*J#K1]_Qb_3OfI]\:'2M="j[MP
%BriCKeOR6]`hn_`@dC:f6aUMZSka'A!XMl%>Psh`h36sTi7@#`b,00dFs&E0KOU(h?F.4?BmC4ehDP=*]Oli/MotjE;XnTlcM)LB
%Utq$Sh9&Tjdk@`#Ui<+]nWMtn\8L:d;-Dop,F]5&e]?<F],TuU$L=ojA2E9533s*@Z-*&[-F+qc\Tht<VjIaF="8.^b*9&;6T(!0
%g/)_]HAUh^Quj!FM`.\2(DrrL%IPXYIOZKm?H/QU/!mJ7U<FVl-EaeUl=KYJo_'o+O,#CFhfX%t`dMBuT"9u!FMl@2@Vr*:o'_jd
%YRTPAo`R%8.,SC3YstO/[8DraHh"+^_iJ6eBfT&O1G=lmh3CXA&0/8#J#GJ3n7h\EOY3KDZ&n[l(sRb^/Tuq#UXY'9oOiZXQn6CX
%rchFhgt[c>M9E`fn_-nq&mmXp`QeDIcGb@<\lgR&Fo52H-Hhf,gR@<V%CK,=I+kM^*0aolV;7D5-[=7(Aoc'J#XBN<Gu,5a)eJX#
%4q_]I=.6tmUWmqhH+.'Xeb*f_N-:(m5$6_##>5gG#Mfd'S@W10QQfMbW5[?t+>SGRm16=eZ%e]a1)R/M99FIFbBK@Zdq*n^6R$rZ
%pib/soaooi.,AbH"lDJF]@0pbOEQjg+-P_d\Pu=.LoR"J4eRIE#/)Er3<%cYPZTlQQ;cYu9aA.)n:q6PKr2XD>[\d-d?icdC<QU`
%FdY@&oAaW.-aoI_/YmrMYINN9:3''"lrLR^KeBjD2G;B:%n+[YM.+)]R-\VkZXO/l,MWfj_#(UeE0_s#R-]eY*XUZ\MsO'YNUg>5
%jqH(W7!\b#-#"2HM_V&II_)qZGhe/<X2SC%]3%1Qjol?"+KF:*qr"3s:%IR`[m.Y@A)8qXIAdZXdi.2j^-f8C.oFS<98$2Ff*DM'
%I%-I]9"6WmPC2GD(GY1>+;O-_WoqgMdH)uX8X!p1"Xpml(5uDm_eX(KK0G0=#??_m\.ibc);OZW;i(]#ist,Zpp8#kfKqYl_2<'k
%HOJ7!6*L;(S$/bNJpN4K<uirSj\_qhKPSueW9U#>B$.mD%`GEjfhJcfD65//:1oPBZeLt%P;%q(d#m">4s'43F'G?9'T26c30AYj
%%9j2oWbT)2k$doC+a0*-QObp55:i$snP\tI2!G-(m)9mcp>p75V3flLM='JSgTM(fgV>hnPJgdUab7?&[ntb6>^>AXH@+N#o8<$O
%Xgcng.-Ptr;`]A]PKe4$.`Z>\RR4#1FIO!H^@_C9Y"`tI\Ht$>(-j3.$>ps@*&tQ2mQd\,nEWtaFg(OAC.<8?#Dr--[Qh_H.'Mtf
%dJT,,M-T,j7OkC.?GSO(5q[FA^dpPtAfV8YAS'm/#iF6t`VRc`ZNCM+_dI5*q0"%d\oN-DHIcc5Nm9^Dp-BFr8Es?#2&nclcF%&L
%&WQ3PG`:_6jcarO--qX?OO`G\3P+c8AeNBeWQ0Ou8q;EnDODVNEoGQP%L_3JqO$@^\U5.9lCO8Gb87VgOf+Ngi`D&SSS^fk?_b0>
%81S#ISX'gH02BV:%M/;$WNDs9TO/"ob%cjZcQ>TA@Z:IBN:a\%$EC,nelJWgKup=b:$\<2oJ`!'V\J/$q,3H*3k4%tiR?<eN#@c*
%0tr5MTGb;]SncnZ*r7C,kK7H4'[X1.O`S(>"-'QMrcSY2m@M.lk6.9+PA(uMSK'd8c5KuE[V7'pY;((q_%d4J;SkU-3tn1q<ajb0
%@0fb7'#+W[3AtKQ7W?a5Gkl,+fnY$gCM&L/6eftNrnH7kb7AnH>;5Aj(]N2Z8$U/_5=?JZDOle1JYD^Jjk*_t+Zb9gN*7=MpC"oa
%70s1CJ/El^cbUD;eXh9&j.L,q,Ac6+.q9K,+5D2/&.G!.6-#[=6Pb9)I<+8OIi\KFgUtQJTCKp\2_tfmOC-jb/oC24^)5-%)%K,*
%TZ5(enOa3F!d-R^@-@oYZA\&Y#A]8?BCo@/pi^:d='Q8ZA[E=_KP`M?>)#4GP+<5I0hGnleDk*g#G\A86UPC[$"#s,4/O1&?gTP%
%#5IPC#1O`$`8n09s0%fP=IY01a:>S(5WNgJ&P*05K,(3Zct]2)3e%o^6`<LZdBdlT&00!5p+-"Pc!MI!;A#M(__uj7H]R*daF7^=
%A*KU<D5A;#q:3P5Qh:QH(K^KoD$qqUp_Y6I_WrmjF<56cE<C8s^a]RZJi@"kJEAP_XFO(`\:$<k;E&MLWMip+4J4*2*2F^2&$V%*
%*H5aKZrWJ*LV#4fkVf\91O@WpSO[b7F>FfYXS^%fD58BP;VR$gc2toQN9u_@c+cYBiit%[2R_5f*5`5=WT]n4_`He.W11ctZ`&1o
%E0`KIX?K?^+=cj;Vk]$6Vs$M&B00J#mr_FMNpRKlPSfeY]C6rM#_*gtHlQ4LbMe*i\=0Fhhj]CXnnC%l?H_1,B-q!FbS_4NL"hZ`
%V0>9QfOcsD)DWcD`rbe3kXd8oI/+V_4Y,ifjlTGE>i/O&d'E8=Wb3Uc:DXq\9t#hHCYTGe6ADpMqcSK*Z8tMrlm+'S^b4C#<8;a#
%#OZ+K?4C5]f5!J&)`GCL;)K,he:IM7WF</mb%?kJfmP%FlmhicbE-/FDtE268`#@cQ?O1X&*4qGhn[$;(`nXV"sZXglfMUq5Ulq9
%:QIS`@ddJP6e%\A3+5TDHG/aG2fSL@L9W`jl"p9>ROFd5pGfL@8dKuGP)1B:Zi$7VXtqBtYdI_c:VP?._u6SgQ#-,cKI+=23@qDB
%[^^deWQ!(IlnfX^BWdiFFs<T/]bEUmc<[4YJWfWBOQW`W:9F6u=Y=btBFc?Pf?"?XVN/$?=7<d@_4A9[7u+kI_a)62@B=nl"NN`2
%*X_??An<#mF^a#dr*b[@i&43P"p_6P+!\X@L3X@>$7G3>GAg2fc/.7gicb)R\9hYs3'63OaQDIS!ecq@n+blidG/'m)/-A4&L-CE
%S`i=,f_5%C',duI5G1d+X`jS0C&J`F/8Xoc^`*#do!-FU,+IaGiK9q)+?(&obPgdK1k0CJ_[[Up/p.sBiAg_.JZaHmlG.dN,A!.t
%iu<G$2=H@kk\;`h=<'t#IOrU2TL>+["j+u:.`N\\5r#Mb6`1"=`b$\Dh[%&hlhf5A9=i1KN3&Kd&`[!UYt?E5g?^3mrC$F^'T-]H
%5M$,u/$CM">&cWn#V6g-^K@n^qUK2r60X9;?8Wgr&>`\0FF/j]>Ff)<b@p^*=S$&.c.\OHE\,1)qVhsWqlH7qXt&NF'/no8A12$:
%pS()7/mi@_jo%LlZ>l-J?&Ilb(?4W`bX8-?hcdWmp1a%/HYuX@r".0JMEo(Kc%Ob6acMRWpbJ!Ca+VB>rb,`M^O";KjMCES/g_[N
%epX9_:LJc6\RllTUN.W+Rk/.jJQH0BS^"5eeNph4$Yjnap`c0Q6r4rtd+dT!q'2GlhN)9pf'bP4%pBjLI^t?C)=`$?IG/!4^<*I.
%gN%M0HJGU)^YVuCH"d>V/)J@jDUBI'JFr+s[6hJ<k4^O[lnKV=qJ#cEQVbhCl%)pNnV'Y?(p5SI\Tm>u:or(*b.ok,)eE[Bj>sU"
%f(lejg%1"X0NHXuXjqW.d?KVgWUTJ%b"X;#kr1,l\>duQq1QT))OaI^KXI.MAE2aX5suYl2K*hsWZ0^3X'6.,`)6.X+*i.T+MMa+
%[XHYbCo!@*AQQFrM]]tmFpDo[in,2mX&cl-Ul/m=QujeLhGF6gk65A4SYl;i],?%s0%I9KA=JZh@(/L7o5HEf:/lW8P.K$Na2(?I
%XU^\,mNAZ52D+"'gTA9NdN^OC<jJrYdiN_Vg"Eb1nmX6EkZc=5KYb:]_fN"PC!3t6h<Q?pYuO#)ZZ-ZnDkm.+Z?M7=G12(d1Nl[>
%k)BdJaj/MMGIV2@Q\n<%_0:j60ftapXQAP0RZX.BY=FfPW2cIiFQk7*">F?@]2R'/(`5mL6ERZn^hqgA+cP-W8%*Tp==/n_>28\%
%29]0NV0<K7Xr#CX\*p+-=0UEXhq0FXn/Z@E:EMrKP-d[^:l/:f*tL%k$388D%jHfKICR9$YBc1-Ja7,*H?d]$7X!TO4>%pP9mpl[
%iW3]`K@2u`=,,FrWFY=o.Z]DPT_?4ODt)D*:6bF(7\[+j>LG<'SZPkud9<1_l78_t(;PO[`c6D)/oc-G[Ea.ZiA;?C-2Fi2[1PQ+
%E2\*I#=FS[=12&TSX?_4Q4mu-Z1LL#26m7ucM\V1eo9V&]b!]a3A*m-C]3UB.`1j"Jafd.b.G7)6_&L`([1ulOSAtL\>tUj/$A^N
%/-&]Al@W%7MCcFjiRrJ.9_m/^W*[/!p8&DTUKhQ5/V0M(1b0.mFs@HMde8^Ze'RQX6=<d;q;P9HG<`AJ$3qnrK<pm<0Ze\IZ]a<P
%@Ir$EP!=,]oQL];W)NKCpu8l#2ade1i6_/ogZ1+E+]-H[>_?BD-t-M3(q$@kX.uB=7j:U]56qT\'S&L+rg##>81u,pjS&$8QM0`(
%@%)CkA9'>e\d'",/<YKLV,$TTQ,lfHHrAc=@GW#9bt>)BeeIV6Ua:gR+q:PTDOPnA_QMoJ#NqkdNohg7L",8=_D'8bbA!`K]Nm"b
%r.fXq.&Dc3:[`]+6R/$M[*("n'U4;DXLXueO#TsurV"E"4GWWb[^d*]%!D16,TG#$c\8h47d_PMbutqM=KDg!Cac9\UF#keYM`r$
%$^6\BUJf)jRHBO)U$:-S0j1aS6_DTG043Q`NMlD8X;P7aZ.T4S)t?LCO0=)h[?3Y'=0%;di#>eG^m#plOSc(3i/X^r#=b/Hl#UM!
%.^e&MRk^laK2;gTnr_:iVDS5iW7,^k&USuP7M=t6BeOJapSY6eRV%h_BZ"MHa->pBVnLC,#?Y<'i7DQf3OcGPg[UPjqpqL>X,gXE
%MbSY"3?Rm?>l&V^l]kR3d"'kKb\nIc'`+f,#GI!E-4Xe^2kpehD8o&H!D5Jl`"H.d"^?!.:R%4#5,EJUgJ0mi_X$7:e/m0j5`tK7
%]($?U@7;X?RPnWJ-%_='),Y*Z`R=S*_tBt:fBlug!]YL?j!rId>V.32&+3d;k17GeOD$0hG`ojYQeS0)madY__TB+<bOJaVU9FOo
%e77r2P_uQ0q=0?66LnS9)^fOEK!gVlWZ#]`[^UIUjmS@dI.T0kOdBje1tb-N3VmN!\=(LFac[oi@.sbh1?6p>Xd<!D)ej41Fo0a7
%2Gm=XGl90jN#VH.C2LY_DM^q@GuIHc#:WB9OosC`V9i6\;(WJg^oYX!BeY:Km#@H`g0[W%qGA_\Sq7oe&k\s'd3Gloq*;$q\J;F+
%Q<-^[5hY8qq9lJbKP<o&dF3f:*(XM19sV-gW/RZMHU?S%A(jE0H1]>'4=N?FJbj%fNG+?SCh8cFpG"=+.l<#1?,@C[j1?3RD<GL'
%+AoX(cTpi?p@k^3gJ=V!#@d<8p'1`+1Q1"\c9j%QdQ-.@"c$b-'_^KYN6X7NW=#R&*cfesEh4kbK?0XfV3Z?j7+\>LCP`.3R2^j2
%9lBRF`Ci3`(*^/N;)_f55+%;!Q<M#%Zk?s95"LO-M2?.To>`]3.d-R&iV#Y2n0Xe;=TDY5<g(H$_Lm$;0BRCsm9haC\9>.I)OeK/
%q5!]+P`IKi'X(J7.p,0j`XY.6TWRQLXdAH:[Z$_%mVCFgZ-rAC'l4j,(Iph,N!7t6i#<c7<q_hWqoqF^";0/F@Q8?=oZ<k42gUD(
%@UZB,D$cQGY!(QF=@VR?U*I-)Q6X.G,F]4;IP`-J+!EBk5p3l_187h!9FXe<<Y>;Xc,f&GGt`(Oo6fQ3E\Cg,+P2FN40*qtaHf(&
%CKgf1R$X78/am9)_cE\>G?M[WP_3..abR$;KVUO@>HbJ-`hHeMm(d'(nH!Va5$mj;Y+XPQ=,S^<DDBWbP:q:CX#u%Dbln@Wc3nud
%DI)8@s0jfN?lX*o9@2]^hruCKZES3CZ"mCE(\#]*LTanhn[d&tC)akOhuSL]^<njS@@JKWo5rdrkk07cI6DogHh:Y5m"gMkPC7j8
%ALqu4A%D/m0-b?UHbGtCcFYXpT0Z-kl05V*dG80`a`Y?j"Sh;d^V&F=;o7j+?!6ZCr<E^t5*.SBPJ;kPK5J7fUiW!eiPT+0^I%F5
%?YR<2V,R/qT^B]BjrQV3EYTtCOc0+'!.7mOTs)S9@ep)>DUR.(W,:t^f+U&&IoG.<Y=8:+eP=(AI./fIi`f83qcnkOJSk=B2ILGL
%**n1MX#OnR%*3iJ_PaeO]K?L,9R\"sdSXRP5bTfX#k@O;ph?98r-FB16cl6s(I*@&i/]M2KPI2J?Pt[]S5#-8_[56*gi*2rk+Gu`
%PK#2M[_P"Y`Q[bM(g@M^U\U8E;CWPg'`d.jqda,Tj-Bbe`*m##+KQ/=78dV\JRI!jXU9olGU+OMD`>2($i]Lr^R!W4S]DaiB^Q!D
%R_\%[+!NP)n@WS$E4(/4#"O,Jli;3V$]+-,,7WYo0Ra"pXrKX@GeN65?J%LUSNObBl*K?"<FVELBl6ucmuG<`?L7ON/:(@N?&g5_
%I1i*l+0N7=";<limGtQq[CR0d;k@IkNRD"kjgl3HiMb_@-cg59nd#RpbB6Jp<Vi\s<;K![%ZB!>\\A_M*bBRiK;l[t-?ZDGMuDXB
%J$%<5%`.l33i\r3%Q<Z+SOs4GKqpWqG/>*OW8IcR@cT\T+-qPBg:ZOn?_-@n1YpkO!KFhE#DM7i"$N9/Z&jE\MiF>ZPU(c=3nBCZ
%$=c5cqE52._W_*fS[$!*K9_9>L%8Q7mt@qFZf(TqG@Db>FL:Y.YVnrM,%ghtlO32*YA_,,oIcC%T=s+"V$,#sM0lqJ#<b36Jk`Jb
%lMZ;nE.%?<?/<k/M:ibh@>ZYMrd4PI7`a#f^Qco<,7+9T7Dk`aaQ22hn&"YoL=`o#3;+s3_1Hl&"Y!d75/BprG@cE]oD3YM\)'A*
%B6dPh2oFJp\1ldIMh_[YkUu\t%2V>3ms:h=mH'ei;_R$.9s<dH/UGD8\`/m@[gp'nRd\(nnrFfp(-*#@H:locDOc%q]UM?99q6ES
%q,6nRll;O?G;$BThFNP8H=Inp$#fampZP=(G8@lklq>:/^XU!hVGGo0mi`MtDoPn*oH*H*"5`CMP4kI_U,?jAI3a*a\Z9f?7K7YL
%HY'<*]f2#,(_:o\Y0L&9_eJ/VqimH!]S29MS@<Uj?M'OV3uMte14%gR1:Q^hDHsr$Xcr7GpSE-1ipEiSq[;8fd9lCN@n-pM1#MPR
%^Nt%:&<-'u$_d":dfO`(CbCPA;%pB@OInHA(:<*:s2*nflY^-D`Rn@MFKSsdimkBj6L*N+>"IPK)[i(GrKDr!dZLnUei7LuSG+Z,
%$eH@LF;JdF/3N(-NsgXgCgGmk$Oa@`=J4noh_2@C)@#sE]p3ZX[ufo,qNdu6W\71!>l$cIA`(Odf:#KA(5"fQBlnc-:Rbp&jQu]^
%QT./gna5MLPV7)\htCXM:*j9HGrt*!p'"KEpNh2&B4R!^c`H2r^1ZEo)7K(CcJhi2G<&i0>WCCg0<VCq.uV6!^$6fNH2,$#HdA1>
%qVC2Tim(ue],4?5.uX:61phKA]Ta5Yf"0UoQf3q;`Okf$m%UcD]3Qs0*EF!B:Cq0JH[F]tmq.%g*NnM)j31E*^B2^EZ-c`QHI:[!
%f(&=V;N*-hQM.>VeYT%YmD)Up%7c_e(OB.U%upG/;X(`h/3Q3]AXD-4@WU4,18O#sHKfN3]\I<V9BsCVnj\q[?&mF/R''QJ;_AQH
%O07cMjo"]'p@?Jm?=DOFC=7.AP])mmM9GC/58:V4=mfUN<^PsFeV\Hg+(!V_h7QsK*Epl`qBT-GaklFOY$BQUm?NHUok:2'>R+?!
%RIoN3Y9)@cD7HmXmIc7XqNYF8Pn!ceZe"^q;k$kf,LDSPHn2\m^Ul:ZrmF(oj);jq`SZRo/d,3aAhgM2%qYoY-F4B<IHZCfHS:4n
%+<.JM!`oWsbJ9>'4Ufh`o!hEPV4l#398T"nC3]R*\#S42?<2:EV>BJk\7i%:/mH?\[:MP'()k3KC;"e?]@sS4DhEU+jZY)+emiZ?
%J"[EI4E9K@nQMY!]KEdj"HA-';XjKQ$O;"dB.@`(k(!$Beq@$!G\nsAh6&'9WS6&tZ0PW+^<_[P`@!CNeh#<(6OU#D4VV)R$&6rh
%:c&kLI^ok-2Tf(a6G=+#:Nr-qTmHL8)X:CA\8X-FHPBMH$]T,$g;\!HLDTs5n3pr)0l.i$mtVheXiC4SJ[i*/3]ejnCF,Uc*q/P^
%XIj>$`:]VkK84SW7sY%ZqbZ5Krob+FT)7g.Y&'oDK3m-L>uVH'>iAYH\JB#*0;\Ua'(c$@@%H3#"fct(i/[SR9,74'+1M$rIeH*1
%HDs=:@=':Klr_AaE#=)7(9U]UHU>iuWPV<J[iu"h\X'0bJL<0)5Fm^820L,!l\cAF3E+>$L!(,\a%G[2GYm,N;O=54lemA:[CY"S
%bj36Ne.ie3Ej3:3PP%Rk6/IO?QfRc2PCQmH<B0ecD,jS:=(Ak"`]ri@WRuMlae.Z9PsWCG:gWe[ATdZ@;H,eU_U^8\n)<b.^"<q^
%C8k^FWne:+S"l0?D/4X9XW>DkP'41<H*#O+,L<si,U2H(H'm,lb85$o1g/Y_T?K`cHu3Y9A$pK.]!7B$n:LMjh:oFtX5Ki;[hID$
%Y^"g)2Pp1TC,:uSl#,VspR0:Sjh])OcepFb3588GMSu-&>M3aG]k(l$JZY:0c-piLpH$%%ZW[]P*uibip>a-OiHG)`(3e@'%Qcc,
%M8K5:n_n5/kOI[?=^\.5CG5.26Ljp?c>i#rpS=A%mM`(4`,;Jik`PP%^%Foq'iuS>s,o<=C=_-:n&'Q:.N5e(BX2_cM-a48bL,Jf
%UC+8GrAgaIp7&>)2V3dK`:eS`G,H1qYUb+6.`S5MAga29oa^!C_VR^jnZ#qgW$fXA`5,#)S@H>87MG0eUKhhfH)HseBrcgGq40I5
%XK=Ca;_+3\h:1S5<DOX)p%)/AUt=GoD?REBjH0)>QOY"q2LG0k`M:,5@%ajPl%eg-7(-%O^T&W)p7&+B8pW(=\<DpW!mg-&gL<;D
%XRC9A!e'&&@)qmC%s%L2rB^+ngc>#!gia4;D]UM@cV-\2j]Un\r*&8EZi):[+)!"1&m`a]05dDC!ke9eBVuW(+6Cga_U3F@dsE'6
%/(N[YP.WrlP^UTmc)nUr8ba^AH'3F1KTk/Ern>IeZG)J:WeN0rhS&5f++"O3;t#.FJ#]?HL!p^k^BE;]Q@hffbeKb2c?@0>p$>"L
%h`Y`rT-*.Fc/nQPhYL@upM^aYkIh7I_7Z)kh9'@hr$V;4Y?X%o/RJ4tA%.44k;Trml$4Yk=hg%?[eYiVlH[dGGrb\J)2RB"f]Fqm
%.A'u(BM/`"SaoPH9%gt/^,cSs2m4_(UZ-FcBi2Q=gn,Ccmr&Bs`bX)H2]L;kmS/.I_n'P/".<B-gg.TV'Is^'V2)q5?!t;.]o+Po
%DXQp"m@AUmI2L`$mPg1c$MW_]\]haPDl=20U%f[(]Jnr-R_!hE(d:/[5,S:kqH1D1#+krp])NI_nb&f8gKr909Gd,Uh8mR3E>-IV
%N.*g7>1bs\Ad]EOMeo)n=u\$Ia$&e4.H\5>D:(C<)^T'tnm"4-Eh-,"i\k1:#FoUB[r5_f,JJG((AD0njcdlgI^rdFL_Wbue!6-P
%nmeNQ[CfN0['a&]XuA#6NI%L$PO8LA[F=`,gKNo&K9#3&OtEQ'F*GI_F1[UlY3X8j;Z.dO<U8K([aE`"Sna8N5&W=qY*qGsaB#Is
%Hk90\XVJUbdRp\3GHKjc[r&7HiLY1r04%i4_Tl1di(e[eD!phmD$@TXYg&+"Zm3=jVN$:i<t(Rh8GN1Yo=1ggFTY9JI6?M<'A8D#
%h8<l,3"I"_lPLpqbaujgQ0\`X]Y7lrjM#d"WXR`]+76;5kj9!)5$$Hf_N9\h-=#YAYQ*m-jDSq]*-kcVWu%`fiN$(#Z/8#Wk=X'*
%@.2t6m8ru?J+9qSWfI,B4>ICY$GZP[^I>JQ!hN)D;@EQOUj$4;V\>X2O8n`G1&a^F^o-7'^r(uO4i1dnK?&/oGouPk](E;dX$;(1
%cc^8,l$qs:_1Ji3@7fK)R*luQ)A5$&3gf:G083tD=!imQ\'YrK/%GJC^]!>$)!rQ?J+C5>nHV0XQSp\q6KPEo.0@4&>*]=h`:jhd
%WZq$/rb,W(2>Tnl-([RO=jmM$a0_cPZD>rbL&Z<ebPt'LM*@cnrhGFf3WtdN'h+q-@nVtWY?R<<M:_5Sfpo/.p`=$Qi+3XQi,h"Z
%=;#%5+_YGI$Yu16d.&$0Y5f58KNch"Yb\9+%L`&,B0l+h7"?YFVM[uJ(Glt-e?CF=r\,\j@7:oQ:D#4GjY3TP1or+0T?MX-\;'/l
%>#NngWlF?G8^PA\#SI,I\e\=k\-+H$KJ3pLKOLG'_j[YuE&i;rol1C(.NGN<iQ2cOLD6D]-q\Th`.p2^f@3ePXQqQ+&uDh2.6NXT
%C7#5[@;d2@KLZ7sl=!s$jPeY%()CIU`aN0RABJjb+>5D^S#QKKTK=D?:`u_]NQH-/So$)N@:%=6:9_>;Hq$qQ]Ll[!#";VP6iq<L
%+]I"N+M,?@(Zd=jKH6WpWrh9$&B?4<9iV26U8#F?cq<F4_7D1N3DnehjmY@P&X!,%U'g+M"MhW?S&;EZLPQV^0`6j)!(I7c'!R9'
%\nn.4!t*+!;Fh6)Z:7gB'G)`kA#.I^@K][2rfYssZ3ZiJBikQbE]bIN5t98dE_-V=paU+eVukUMM78$!)R()cXoXh6gg&lJ+hCk/
%_ji2$JQ6!lp[0K'.1u$eYUYgfju=5d'4`?n&#($Jd`EOJpk'B-S>lSK3"^V*"ap/#0rtF1E[if6$oh-A%Z`()E(j4N1/LkIGoG.2
%+;R3h"(MC$FW(?^UPm&H+Sqa0<*WC';'^]WADdt.%Zb,8S:VsD(m#!0"-1L=YR80:Q\,^`JiJ_XW)IdY^snL[,T9VOS.^g$`5Js7
%c`@:I/M[VJA0)=1$Rh!*2%B'$L4G%>*p!VT"gk,$_\J]=0N"#78mTJG$0Vc\<(U8(Oe`e-`M)dQ"=QC+9i?)c:SOmU*<8/oFL;6,
%Xb\#1YV/O.;AYac6V.tk4Lg!]OT8C5-kiop$?E#ZdkL>UBINtl=d=g(TVLI.J1Ufs9iP,]#N@*\`,<B*^kEbF`2O1F!m*GW#EFAZ
%M(f/!5U.9o!UkOf+EdkRKh3<E0H:stg`lg@3M#XD]ETGm3'4''JS,5iL=$#JGWCi%%@.3Q7:]+](-F]%$f"':OpD2P5gVYVdN6pl
%N2\SR$:jFi@)K4!@#D6&(18X'%r;5*_]]$u(Pp'UA#TeV;?30f,"7++_`;j!/.OHUH?]a<Q)`eg&;?:MWA"O.+HSJm8DWdRXT/Aq
%jU`Ve7l:f&LJr^e+mfUd(N]pJM48:lLq=d?WiEAL!=K8!9ceC0@kNiHM$Y)N$D]rd#Ej/HDER+d&b&3t,D1kM:o8d!^d`p%"/nMm
%7!jaM'tabC'@3qA;%(Ml-TDN(7<=2`SN$u;NOWA49]dYC)<3uu`#U)IL*aVR)/_F&VR)gY5Da>O266gVfdo+;"Ju/1_)\EJ+\cG2
%&l8o`[RWXXkT7NpVUATI`up1g)-i3^kpT(f9kH?fIDZ_bo*Pc%!8<NjWj5nq<^C9t98G'jNbfT3?Y3DrJtT%WR4-.M7KOG/SH-\X
%TbTgc8RU"t!HaPA)?X7NL/DBGUS0%S,lj>5=POpM?_Q9ZfH&0;Nkmi7GS`1W0Ib=m(Cd95Hj\"b!Q,4"JX?d!4trEVi=O[XM&7=p
%M_5*;N6KDmhB;:V;+%kp?)[<f7_meuJ:4XeTK<:>0Aq4Sc@g8C[:i0h7::imK$Hh4()/Mo+rjPE5TC==J7"#M<7L\('7*Kt5Z/Li
%@F]<H)LmT8Z49b6M?]#f=He!,>L9e+<Cc/,9F5aDVZ\aZiXX6<YqM,gJqXreo\0-TK`r`VY"#7iZ'cdi2,"!=adaTQE57Wg_?"Y=
%']%>53[+YZ#/l$V8#cm"%[PoQd2#DTA6Z*dEsp,l"PG*=NeUb9fu5/>4*\Z=ld3HJD;Z!lNUoh`"0?/F6kF`K+VRJF>[jiU)Iq\.
%demc43G'DLr?LrbQboN<JM*QC'>Zr8dG#j?#7h-K$#QK5%[,1"!Gh1H*19bZ#_e5Ye!LG1g=[johdu;nCu^7r'rI]\@Um2j,"N9O
%X:i,bAB+.,AKHsV30oh75[9log#Y!cTcDd/:sI2a"$@bYiHPM]nJ)<g#dt5`'M'?H)?XS:]7MX=q%bpo<WUGj>n+ZkM6r<JC'Jdm
%#HTD:N#-?'6:FBI4Vp?mbl\B*=slVPo)^JeGnJF/_l4!3II_eOScqkU`4^<OM\L9':C%uda$Za'X'c"Ei$^9W!9_!_;2*;I#DdJD
%'gLo7.)H:^,`3j<f7GdcUddEQ*5uD5@B3d(/deG*`2#,L&=c@_$R3WdZI0K[#!hn_k*XFAUEJm$DSV4*_li$!&.FQrESsUMD@`^S
%;*f[<LK&XA0"W#QWK)-2bS*fJ7@Pd$j9m0d86.$AOVBBNI^Ji)6;!T&kR=b*oVd#'$G_M*'9GQr"^2O!7E0U\722#t(poJ,f>B;@
%4[l$75WQmu8tH$c!O(uTK*Sb6#*]Zp8I/._%POUGTWqo:!u4NG+\L-m=qq='OY!iDkT,?'=b7$(cQmfN5DVf-+k4$;e\]B0P@Ce1
%Z.Nud=^uAO(^@.,@ai)GQS`g*7D]Zs@[q!#&nhdE7;*NJ":ZdjC.mZF*_\dAkW0Sl_+(^_0[Bo3-1FiT_An_;UrsK0N&VP0(ta9J
%bnE\BODa\oCj%fY"asGhk#d#SUR`Su"JYAc15p`ko;%r\FQR`!jon]nRV34iMM,F=L(E9OHU4'm;97pn+UgC8Rh<J.jN1h\+9to/
%_up9pe/7+o9$%hN<6TpqXG7.F0bPlG9Fe:8oQQ+R?mugB-k%?L!#"3\,2uF-;o(=(4d1[V4,fsZ-`B]k+Hg2MUnS,.RR$;W;PFT"
%kSg*O(!oNP249F1KQOFSWk_:@NCjO4(T;C@Q0;uD/<,l6LalLhL.]l6$JHV,RfUJOWl6:#jR=#T!m/:A;,OCS<!>We(rI#MJjdR&
%4-p'(6@:Gl'58;On`]a6TYiPs"Vc1u_orBtW5/$5]Q8*"]huVs*"Z&45#O)c:mn84#"9;n0_Ap#Kru@sFiHm)9Pt!<&]u8,,;>^H
%Y-A^0d,oS%J4(b*$X*fpn[p0elnFQXZXf1q*5*'G,'8,cTg:N`71rt#TZ.Se!$?_uKEMAD$ZKm?k+JnpOToSLaqu%YHH,H2a,iq,
%a:Q-(\0f:MBV[J^`[R1MZ-+k2QH9Kl3RG130cA:L_OstsLm*'k!-GqB!Z<W0\Jtp6m^W=;%/;.tkAVU_,9PE3TOO"C(aYCA6u?HR
%2,H"WOW/oX`e3LA1\7B'8`CUt6"k(=0+A":`^D4<Wbr>W^*mKl-r(In]r1J1R7<Y^6@Tn))?T\g&@98AR!TrlW9D6OBFk]*f?[r9
%"Oo6S"#5grYXkpMMHM;9AJ@:UM%#H&%&,IrjtI$+6&qW.(qYAT_(ee5"eu+;,\0/87u'C(Go4?$F<0`oW2**0[a\83B,H>9&krQ(
%(&itu?m[_Y&86M]73""S`-`W9>_-H(#H9a=)[("5H!:?=(,BQB83qG>/,5Na8.'/e67-&6V[*><139@L>@8@P/r6Va+m(Hjn:Jf;
%@7Q;3&L^'OU\tb$7=aeO;Lf=LCd&aoL"q;>[$Vjl_CPk&9LC"8W)T7I,d\mH(gtZU8W`!XmUVccU#%+1"">r_$Agn3cO#Vu$s]X&
%87P%@6>VB'"Ci%/`\8@Lgih%T!ic?m#O99J:+.Nb@GjM0&m$h[YDg)G$IO-GN08nQg]PeIRu]gm8/t+-^`3>-&PY_>C3,of*%fBQ
%d"2h9LBfp4aH/NZ,Xfs:b5ft$k1,!3`&";1506J_JJ*(W#X]8sB>`fQBC)8lU1.=00m^=h#^/`=;6Z&@.n\"q(Qg+T@L,Xp=I!]T
%7\:uhkmi6)B>,I!XDnMp6g6mVf>qI!$WPls"iPA;,dCc3$U"$uJ^-"aI^CG<N3kTQ=2Q#fXc7GHM3&#E;CX_KY'E\\OeBQXK?[sS
%]+FOc&&YR$d"lD1*C2E?!A@5HRH0"/_8I>h,nMEXA&?Tr![U9oN?56_Bk--S8`9fL9K8mj0lt?d"kZ9FGMdDD29P[?-otIj?UT`k
%3%A$:(:h9bSS(!M[ls^L[$Vjl_W3M=W'CJR=9/t(I"Xao)%#D0`o"o,`T<IJ&CLJUQ;aY30.JA3m6R=#`sZuH&qtV_R/7Rd>ErVG
%%E:*:LgDlP4:R<[1BNq>7@0EAg1h"t,:8gFQnhS`k/K-WdnlR0A'm\fI!ZSqDY-\GN6]O0a$Q:e4G*c'2PJ>RS56V^=QP;:\YbMK
%_RpZm0S,9q_9kcA7)"Y6OX0bhJ3k-uXM[T?9O9qa9sMFq"T/>3C03FF8YH0'l%2>"87\">8^s+J:?"jiTNm#R,%?D2C&8_eef=`9
%OEP4T^`;S?0/*`CXNng>.o3gN8r?=PbQKAX_H9B/a[<lZ"\!&N9]1^=0h\HQW=DXn+R6Cn/7;H[nLjCJ8ilbrK#m9j?*;>5aF&F;
%X4_#_<EXGAA:^T.8IXMo&kb%N.RheDVobI'1"-1G7)j7.k=#7+QKqKV7]qC.\nuIiPc8-389])Epd,Hg5!6(6+EaKC102c:P&:4i
%_E+3']:0M1$FgODk%H\Fo=ZHilnB'--%?7T0\qaGDqa&,(`c5u8/S^q(Pq/uE["BK"B#WCAj#`L#_ZuZ""19UQ6hq.X&qE<0b?W+
%6kn$Ve;H\g`hr!NFkuT:0dintncg$PA1W&k(`mE+M??A3\O/S%RlFN5#?6ZBVZZgpj=;a4'+s^N9+Pj.XAc3T+sPa'Q'8'g#Fo$_
%oRA0D9Fc_V*7J4$k.qbZc3*:UeLEOH"&E.^1cmRo!gRUtP-O.9+Aj0*AgI^''F)7P:cdhm3W=;)HBmRR4jiu\Pm<DUQsm%4!M.!&
%4fgA=O>.621_p\h\n7iY,uGM8.Z#g;EK1EbM1".)m&:%T4YddIGam[o9.Rjr`(@CmUWL)WE<NmeK4R,1@4<5hpMHg1eVQ0setFM4
%Ue5(-3l:I:e<kjM8nSJDJ<?eb8L7RiH7"4A5LB_3')jfCTt7.6+]<&gqO*&rd2kj&_B>.A\1k$49$EBK[n&e=<XAqlBlaQ:D<eqk
%GecGJ4G$,fJgFuj`Aq$EU;2]-,df80bCNB(!ap3Vo74W6;hbBIW[]ga4G5`59-ESY-8>0_e=CD4:W>Y2!(deL1#ZkATe$Oa/.(Zp
%B+j.AanTQIY9idYe+lC!Kpag"O"lo\m\QR3Q=j(q%YK:8g#dMLUjtqe]Y_\0iFdgDZ&M1[_r*:"CoU7\>)YTiQK?!?0A[1/<8OnY
%*!rjdUf,/%.@jAfAU>Y!<YVG$=cX/K#`cpF@?+i@)FRBZm2QZq-SZ`dlC<),G]=ogAsT["^W8YJ11lp?+qOt?&gbf,3=XG&1o>>i
%Jhc..;QPSc90E$kfGpc%ih-k#Z2+ke`@u.g_$!EBM-*+hO[Wneea-Nc[@FMFFXI/(Y[("gfM2c2;$l:kC'$I/8)5S\b*=g>fc=:Y
%.-5ueHL0ag5ZJULC;?o(j_ip??CZh4RAI!8.Z;LZJ24(H?ot#U7<%Y!j@pM*M&IHI@;*`$9Z@(]/h'G`icmM78"#O,i!S]gQ.TJ<
%A.cG(/s@ikb=+k/Zg=4I<!NTVenh@>rX7%q#FA4pk7hK?9]O6]'Z`:T_?GpA-o/6\.+a%GC6>tC"!Ri`1BI.-7"kJV8c-4.*`1X0
%'k^8-G/YQZ=`Q\/C>0\.r&(%OMs5a.4.?;!6A9Y6EO-i(02]C`JhgYRa<4?`)0.a).%Q2R3i<=1;qUF]:lPjPY%5tOf_g;k"&?fW
%W2QrDH(?-9Ob,0Qm6kqOKjp3?a`ANh30HD&p]D>e`Ah2!Pe;f,,IpAi"qQr0UtWS$f2#p[*`i1bRCW/6C\hUF7Y.SC13JK,*=S[^
%9)C@n"DJFU8K;B@]-YZ>3!fRZ+l/4('H6f:fI!E!iZq!<`,9MXnNRH;-L_7nPStd9Jk_W&5,dInVaSEBQIdFKlI2.O.T>N2SLINT
%A-1a)h8pARQs-3;,/u/J`p*o`8J[@pZOGC$Ff^>&E/MP<O`S'd%@n31W7^`5"b5fI'j35gZauX'@Y%6dA*U:M$hd"dmC5rRGe9!>
%@g#>f1J&b`<)C8,gkA_D##D.Y0/-=UAQ)a*jKd(BNt<>3`eI;m;.fl?FeiHC&R6$^^d6"[$Mc_9fa130fGbL$/GVi5&Co(f^*:Vl
%ZA4>5),dtDL)9561hH^k@Lm9Uj-VE"R&(=%CE=i:b?u?^g==S9/"GXH_6CeNB^GDXmHV@/0q_bt;7.>`=KAYk-=UAT3UCn8R(_G!
%&\s@2m$MEWUKTQu^<1VE?Z73;bl=ZDWes<paDo,?.EC1pb%!2teLa>F@j4`n:6,:VS73;Z3E`VF3$LeCZGtB7.1%\R.O-O#71Vn4
%E.d-dO(EP`$a$b,'b1%3A31+#.X!>"?(6+4Msoa:^`VbHRu43s%;YBhm!)\PcceD,XDW@oRS*AfFJKVe2Z'Ld\(sr9>GMC]J?>m5
%W:<j+[[d^nAf3:=c;SR]!;q$gAjVKOgVuP?WR(fYWkcdKTVVhO%\@Fj)KR9+??@g?`ZJ),e:93VS;A_0[c1.`U+`c'ZPVha3Yd!L
%Hs*-k>fID3?mcgKZ=+*o"kE&(OI6o[?laq;#'h2B'j%YLMX?[(fc;W5_Y-kb@QCf]XC2*%^l%KH7#gZs%Si_p]3'HW@nW.e9c*&k
%#n3^km&m-<OHRNr98Oj8Va)fPm_cgAT?,[t225Dh`Ts3c4%s;KFI@"__5\_`/gk>-/3T<OH+PRF__-f-#W7=$`TTRu6N(X;()A<P
%bc0s3'cQ+Wa1(6ZV:Y)Y^!(P@6O#NuFq.W;W<@olV4q@!"*dgf\3jkPd]c7Tmp%!U"1tWt<-aRmpIY<KXL/:k):D'EO14GM$75kF
%HFg-JG2no5P2h0R$#-,NR8d4$IS5^iAIf)/DKn7"U8u_H81oe$#_c1$qF8kgF&(tMj6S6U],:[n9p/Fa`3r<Tp7aB.BN(K_>S;5;
%;rnr"5DeWOQ)Db`:[LtRU(7,reLj;sG+K3j:"EEI85h?l9G:R2$bQ9%HT&)p.8uS;J4X@(qK4K#.'q^BMOI1L]<`deNPeYM4t)YR
%!bZ.01sq%_V+_P&/]j'9Y_/JU;)Vod->3("iNRpI6;EqR&]d,Q!1)kTo"HR!#Ypu,OT`Cp`]&7@Ggd$X%;9uNek#HQ@S2?23r&T\
%a!B&<#WP:*gf/jU'W:7$/sce(DcfVELt;g\DF9\fLI.[%:F]A\Qm/f(2MQn=T_bchZNeh_S.3*8<HK_Ha8kqjG5W:(>'GQgNUH1s
%m:\gemHV0TLiuFW`;33uDEQ/UI_;Xi^fr#/U`Tc39!3CtV^0q6_=knq]XO#k)_crtkO,\\1B.Pg(2UBur!r5AGbu-RO`Zok%Z]sV
%1;Qc+Z+&6X?LCWDVJ!bAH!ItWXl2DL,0SJn3n7I(<^3UO:ek)$M'R0nA31mW4!C^u[lm<aqT[Ei3HVSEh&hG/'pShpi#Ib,.&`dQ
%?'GTTjlqdU<!g"!_=dnqh*_pQ;ojMKkfT.4`"5KWm&jeo8Jh[09>oJu;ED#8N>[u9-_FGfah^6fPggk#E2o,oAC2/^TtI-]+>U6<
%P61(-:pBH7nH7q3=_:C%I'k_cBI253YN"pfXH=65Ot<;d2do7?B*'s)QT9<=#Bn]!GSSr*9J%[*SP,<;ElK'IW"YE&T!$^U*:'4`
%q?irRW)N#`?@XuhP3'_!H,M$J&Pf*-9HKH]X#$M;E&o$C%"<<TDVe:4o&H9FMJ[qZO_(ZA-WPD'e.amlTLqpA$,kIOhAO7LL6*iZ
%e>[tl0Z=M[94:Ks5)Ht`KJs7#UPoXGWbe^BRA]fhS&mP@c?Df!q7[2i.JbaU+]Cf<qeeBkiB`\>%sHikY&Q?j4P^iHSOa*-ls"LX
%ZWjG>*Xa,]^D\Qc'V?+s":OZ9e-*DYXA`%')HY4e&$VPr=@]OM-B&uo3-dP(<]H=.:<*?1YiA7Ds6&h;H?;6SjLi6*QbiaAamY;\
%Q.6XX!JDV#&8YVb22%hMZ:C9r\"S<?Hm7-jMp9u=oWUo1S`8GKl"%J7RCP-*=qN9ZQ#>saA;jBPfZDt9_Od+OQ(A.7).CkEf*1ON
%A'X"geoK`sm1Ijrg-1-0*mq<-'fBlkjohC)F"`h,bk:W94`BN>4NF9gpJ'KrBN9?0#YODfJS'u8+>F9cULM]B:M^R.\Z*K6qG6LU
%/sEAPa3]*Gdbig0GZX67RM:USP[9DG#U'3Yg')0Y#29ggs+*&RFj4TS=D+`2V#2`5(-#>)#)UL#Srg=^#L3i'"b>2aOAAaGd@'5!
%S#6XN6X;;"A&YilZGh._&!/$)K/lrDSM"6Fe0D7=@gC^M%>]'IVMh_iUO*jZ457^Z*CSi\R;2B::No&%4n.UGj'ReRe*#!/C&NT+
%TA2'eik:'=B0Zu_qqrSI`cQ#YZsQnV=jXJ"H4cTpJ/?7nn7%Ao20X(?k>rupAaUHBG'3VTnC/628(1H_-rT?Hk=_Ch\^JdD@=<T&
%295:cBlXAoX'-C^nrJ7rbPdC4+!buQ+DYPs;j<fT!]42n3^>#t1`,\qWNjp!ZTG3fU8=Pe0>sLS7?l@p+1-X)1R<a_':+t".<.s+
%,5$DUVL$`m4?mW%Ys2:sepB-2*eB%ekjc=2@[/>7FXt&@T>.J0#0=L5,k:Ru^YI/S(U[3U&rkm@J3)=S(YDqfI/W,\.0=*+\D%iM
%'blj[\Q3gGWo;mq:7^@l2<4=D/NjD.frbU#5;bT.;pD4;i*%F6TehX%J#P_1>Pq(UE/N@Wf'N]XFOV]heoBZ2'WAL1JV_kd(&+n2
%0Q=9o*MID$q9/_iHr93Pk&-QOC,MFX.+$7V&=#HFY(GfHWLDfU["S,fNb3!O87:Jpk#p^_D8F\L#[jo43_R3@"+Wooh#l$Y/mnsD
%eX8G%Y_)r6j.c&-I*LZXS;-DFQ2c6om"+&cRqTi;1Sp++j8L#js,KJ(r9fpKl1g_M\@;M;V7XAfQaik(cn.;8Z.=>pS7)b6V=7<g
%`Y4<<OeVuOM!?ZEM]`%TOV'/7lqKHs!rg_D#TNc%SNB`OP%*DYeXA0jV_k4-]iE6ESO=HH\ATmmi3IG[:@e$&!?F.A1J;@)SWAn\
%%t+!b<2`)iDhq[jA.%"U9tNt(FLcJ)T<Y`3-+flE\f1<%T9ND6H(VaKni\/jQafb%@4+hDr_e9\+VkkQGu)pH]YDdsW23j:5/gj>
%!]A@uVc&3d*V,kUGH:7BW4Ims+g"6DU-$4tOHcLP6ja96gT8CVO!m^26D$%<E'E9uVLaQB=R+,uJU;;*e2(.(N@Wn;AYD%NgW#f9
%B1K*QUb0BGV!GD(l_7dr5jcdGV7E&<#2-"&J;-=57KrfC%=JN:3Ls?Bc<W_q>ZX087UU"+pmYlHE^'[;F:q*5!(*S&[u!#ZfdDY7
%3*(s0J6GoJg"ITEU_uoW@l$5,I^G"YalUCX#nPPI3V`b+YV;A/^$h9H_ec)>l*Miib)?7q305]g&fM@9g;$i7KX`;f2SYuo<$P$j
%F]!D5@M]VJ=0&jI#GF+@&Z?p96M1c$<qBRN%,:'eNjP*beJ4D6WLVISc<WA'Vq%CtH<7ZWkhN:(GkR)>]Lh@pkW&lH;M[%HA`N+0
%hb/;^R#d7;(s$JtLZpY"UV3dIc8.r=DN<@([Hg'j9WUBU>;YP!C_\;a0_0.!-0^QQaQ\RQ4]D8Fb?b15J8!dja+r>?KB=>"h+JK7
%*e1WHJ6]TONf^]i1SFo`4B]U_1P>RBN9Odd!f<Sn^7>K&O*WU=4;U=^B1ZN?>PJb`7aCS@dA<(Y*KjSO%>2O_[!!TlEIAI*#Ycs:
%8O64r3'__DU+GS(2+";DnO`sK&^,\1oo6>B`Ef3uIsqplQg4O>8h!qW`_I?CH_s=;B@;@@I9>!mm0Snm-m[\b7:*6ckWu@KdN(@C
%.MES`Nc&hLFHLQKY8Vri(qOYC0#u#c8k"^b<rk8!:4ba(`X?Oh-d:f\`"D8A7`aiqkEdQY2F&`"\qY4-TNIS>n3ZXUTG8!ACe7g\
%'3e=>3^Zg0i3OrQ)(SXW@>M+5dft3;>+R#`WT$^)"1d3Ae-NRV(m6Gp[1,2hn/8*&b5m8M;)R&.#EA$8fgrK>E*`#T;ic+!Yn=6?
%M_OK4@+NH<N9RoBdO(X,.l+gWeQ]^^,S%$Bd6_=?[2r?O6[,o@Nt%aC+A?SPqo!U3Z8X<(@5cLnY^Kh?f@@U0h<+SoT\#uKJ-;=V
%HI&*<JP[S5LEuUZ=78j^@4:uS#qD,'!7DZ^&T=sNfL+jQp'm0B=llf[@0n5e9u2F+7`2=k(?-``+7p?0aOfZ%BYqaI37MURT!WW5
%'!!3i"QrMJ35qbnW0;<l:$a_`',:T9-)![i+[lJX*Uo\D_Y!70-FV-d[dsmYN!"s,.q5=@[T!:7U]t0rmP*n)d`sE-gI=B#0rV0R
%ES$8<ikt+,jA`&BjbWNY96pYFhpcH8_,4oT4_*[g%NQlJ'S.#FOJ^;>]f^mPFRLL8_%Ln4.\Q:b,ZK[-.-e&EdSnPmJahh2/d9-;
%!%Mr"A0r)/<O5,L9bjprcTWE`B*9rp?d:s*e;+-FZY?mIWiSAoka/(65^_"dC27J0<fW3MoA:rK6j*<H37rs*?rM!#$nBWf=n<LE
%Vp<N[Lpa/XrM!`,`MI`QbN6_aTQq%,8HR@p\XeSJFRIqd`eW5=PMS#K&'n5b=D6DP5LXY;<P#M/^X%R/WOJPBR*`K-911j+ECY`#
%Os=N_;BP1S6`RC!$XWHf>.e=FUR,)Rj'-96-l%W0i6;7</\V[F2%bosGr=EWkX%8L6"O-af/b2U(jh*\9\kuT<3E+2$_<KX[j2&s
%e2,XB<P=U^FY0ncZJ'ENm$1cE?93:RS4Q(7Y&'Q?c-&,&9,`kn1oD')VU$&+ru%q*?2m0@!%#S@^%k>'Su"PlZQ:3#0+Gl>'Nch:
%;HKX]JG?3*!If\(&s@ap]fCC=a;L]imGY1o!hL=I_0#YVEDYu_m92*bQQ:(q);:cSaCU^AG4!,I,.@<+mdQ'J$,]Lb^7ig9'&:V!
%%2Ia,I&ijLN%c2M>jt@N)NKF/,lX-Z+uN,$GDPKCAErZjE`B9QHe^E%efNdj?TD'UWrt%,.Eju<;DWN9;cB6J)H+#XS#H#7-dj->
%]3=#<:Qm!2<V346U>Ago\m(#PZ\s]=EM^J!<;#':bh$lpeupOrdK&O#Wc:Qu8jAl0N>[mZA[pA#"JiX5J!Z!^'th)d)6(XXb(a)t
%J5m>=/m5C'+]hA,LZH^'mF3>U!_gIP/j=\?Z#^7]9I_i]71L-7JO#0nb0A40R8Ko`9n`;*+arJ@_hqe&De)P<.'qs`jbu8_mc8W4
%EiJtM#XH3gB"fkNF'"lK/R*s&YHa#DBNT%a1996cW*>jR4+HL!^0QV?L"h+>`Zgj&8n\fdV`dQiMmiRe!s)c';t*>=ggYl\BqOEO
%m5nLKCTgeB$OE4SXrMlEk?sWsGLSPF<+2V783biZd;p"jTmM^9$%BNhP;>[3IZ]4W0VZ1VS`mRh&h5[OG1[(Ic]DZe7JYhDgiXdl
%9AK92?iD,1qp/N]3inC91Tb`$C\c9RUH-QfRHr+m4fSj=\m?Mu&UoZGfgRh+]^>#e.,/T,9"Y]\jtGJCo+R"]]7[AjdPS-KO`q87
%FZQ>/XL$tK#>?XF<4MA)LcdfeB9aZa6'F>^\*TiLIaLjgE3qm<per@\HMO%;rc14H+16<W6X)SeP&$b1i6mL/I'Yd1R$u1QUL^DG
%YB4B4/m![H*Q[1>ZYLj4MfL=/cO-2;Ba2USB$':""nYhqAjah'X!N`1Z%IB=h2@dFi\*>8POtf^^L8e!24`1g>/^2kmfqEo4-XA#
%No']tQeSM7W/E\K+kZK&.;j)(5,.Z?Ut@MYK$JOWOP3]ph:QmaX9qD>LrbS&-tHHZ#+2cjf%)(*8H)QCB:Nkt1*b6T,51k`!@1W*
%>^CPM(ar1ca?P@YXk.%4!VDu.i%6Hc:=dLPKHRM1F!0nt?D?r$<,-^UgL'BHjJ/mG^`[+/\`*INPHr+_98m53M9sGO'j=:FkV,D1
%h6hFVNean$YsM`C%$"$WbtN,_X%Vs4K("@gU9Y<T7baub0IEAQo!uPG'#Xcu2@?FHj$um?XeA)kqpJnSp2N7d;d`t*5t)u1W`L,e
%3,r-lc[#E2?g]<&"8$qm2QnYW@nLn-_Z%rG"aktM^T%>XEa[5>+>-Lu?%n0g&dK1Gi)OME'<h[&Z0IJ05ZUo<X`sCtKQ4S)0$=hS
%#[%l-XGJK$&IIDk&Zol"6^saSE[jUQ3r:;_m]0Y"#6dNol"YA^dF]r6%>DejoQJ5.Y&OghK$L\c_#N@W>L@=W1SFa"h01_/l2_cZ
%d@%t9IT"9<F)+X;KL7s""9%+m6lUC`UQ[[B/8OD6b1KL6$hCG'BRoV`-7T(,Gc+f.IbU4/b&T@p&3''N8:[kS=ub>MW2M_k@f"p/
%-]gfT.QkCJ4Pq@X\ej!^,G=a1jt!7B<W8o^Z:YcG8ADc0M$U,^GcAEg*h)"ENsjI(@!Z4^]5'!Difcuo"D&8LcKQTaU?T$<eLTQJ
%$-O54,]%/tW]r)pc+-grH[CYb^c_p4m=P#9F7V)W=Vn)fG"RbTNtS0pf<f\L;2IiTWnsnu]C([cVe3F-BIHjD0;O',:LE@rms#R;
%FE*q.8N/bH`T$K*)X$96;SR7WK,jiVc1br?nmknEeF&]rjo>D_QN0ORqRbhI"-a8N@u<f*`uaYhnNEb\A\*p.WE<CZrD&(p,sL(C
%>i]ogUg:95^_WX!KDe<n(JHL%U9X;nAtV-HgP"3_hZ;.99,>pg:BY`ioZc-RND]R'809Sm1hZ[GJMFL+8s+f'h(6LVDN(hm8>f!H
%(-S!74D<2Z45^7\'qK3r"lW#k[0-P*BW:3e(LIrBHPWs$e;M>iqrP2IeIC:8GAhYSTocsjS3Rq'N5)mtop6;1e#OchT`X8],dt3$
%'V;(g8.2++C(aFp;)B`NlKg=\q["LQ7>?ojDkSC0Qj,MKdSA0m-D^IqPd0b%_!YJg$J3>\QX?uobW>>2jlnTDYks9MF[cDC[D:U"
%<tQr-#,eNim;fl.p5lLe2Aa)7.Pi>oHe"4BD4J:PN%UqENDK,R359oE8OWX:N1NPfY.dn%##9lDTs>alT8Y?XH_%J\k,MO"^-_(t
%krkm".F_WarS0pk!2BHg+G"3&P"9HM5RYYB=K8(*$JTk5/:EL8>ldu!KVHD+r`+HiIc6r!BY(>rV7JtuE)CC'jRb.UR50Ce!I137
%q$0n`fCRK8]OntDR%.G3\#$6Xe,-5ooHb=(S&KX04!j>L-*9c_+sJW&O=SF#XFf'ml0+RD-n<JMVR4.9&ZM<SPT+$bWSlh9e^b4d
%]LrC+WV^.^ONG%rQiCqek[.W.WF8&-q1A'M&QJFY`b:KC4/\Ne1R:/:U?%>:::.lmjHEt#8r'Fp6KTs8KRP5@Mfe-;-G!<gft0U4
%+5.(;Y[TlcfF!L6]-A)%`U^[gblYI:4PXVu0hf=K7\`,U<!@I+XYD\P#r;JLEkH<QMK,[:9)r?9*0CX*mM5i#BJ#Wa.$/0/S'.&'
%$2R+3j2,_9*6nQ7<V3,fQ@p1'pN?R/P#oW=Ctk;Vn1)7S-6CEDDa:Cc$4-)[PX?QFJLHLAq?6NB&+n'H%tK%O)^)s/;dUropWOpE
%c\k=_;]:3rdL1\Vco5PRg2OH;Oc#!LRj1]8Sp)DTBA*E+B^67i;W5A5p'1Q@5mPJ6%U"KbHStB-Up'lNWTl=N=cE)<3m^]hSJ/tD
%eaIU'.-sn&%ASIto&c*&BTJ%R;-lM$7@@/WnZ0gH$+`R+fQqiM?."_"+?I$T&gpfe[`4V8?gRl+Dh[n--25r(hQ"^?Z<N$bFiJIk
%^,[Fh,8dSLHoMXI[0<2,lsXN4AmO:67EZH8_q!HkOtAg`eN9,i7)eG8+tTBX,VA**XIaXu#<rI^%3dI!(dnnYhh>UE+aFN.moA;c
%[U,BS2*2+3H+Oj\)fcM@9gL2SaGC)7O-ia,/ZPO`1FJZ>&%[h7,)j%.OC;^?;_Yj%*<@8/7k+?>j_6H?\3\OXNq,k"<"'OKppBq:
%C^[e-:Q)5e.,%FmPdM98Xb[W<mYk4#<A/NG&#.#F:G8O[FboTIIA@Ycf"_lFnD]9EB3K<9bpMKX6;L/+2V0s3n+LSX%^jm#p,FHT
%LMh`X_1bXfB#4tqH%#QUmtdnbn;k#'X`'NbSYK'KX5,tXACXc&=Z2^L"PX8Hj]GV;77llq6H<gGLn]ps$O4Coe,=&,oGdk%[j@Y4
%VaX>Gb%"A7.7+*/bHgkW><&*/0^!=:mk.K7^ms!^/[.FBI>Q:R[CiE-2hQ0;hh:G4^eGutgPUcE#]d[HcGTV9$hd=*aE]kJTi<68
%*!G4?=3!_<lUk-V<R;W?,<m=6>qA0kLZ+&kO\uSa0M2&s/]G=gc9JGKRkT<&.YckT%Q/5Kk&.'2`*>]@K=W!Bd@&_>orM:%C5>o>
%J]&B"X*/Bg/CHYBU`:OjV;g\NO/3Smg=1bCLTbC!#RLCE1A@V143&(58tfQ.Z[ECpF7O*$Zq[A^E+>d9)L-Q(90$".bB3@!hZI?%
%H+#4uLLP<JUkgGW"WNLHkpPUhR_QYX6T.:safR4k`li*n[!h:K.iM+4oRRkHrX'5R-R`[Ibs`jEG9DJj(Wo&:W%!l2dHH=@WEL2a
%%M_f'Z*!9S*#,ma6lM%-,f_Pfd#$tD3Pg>c0k@uIh/`,1?g]<&956css4kSnlo:fd#8HOaTpk/NV?b8BUGXo6\)L@FWMCpmjW:Gs
%JAGIG$1^g>N"rm_LAKJ(RVEtU=DUu4&EOW75+-ZJ=`l/a6Lh5ld,K\`<;*7Als;@BW%b/N?/dtbOWGe,-G[GB3rJ_RU4']Qi@h[h
%nKfb&A_Aqa^nI=;pO[Y%jR&r1\]D!c*)r]DL.k!&F3EBf9/QY`iS>+K=/V?65/c#-?e8DCbWB=?ZVsRkS]?c"'8=CjIl?h^&Df#s
%+6nDGSIS;//]\krOF?e[4IYeU</D1n0'<DFpI3W;QG@]ooYY&(kMo3=/rEG/MEgCB:[Jn'?!6i?>+e9*"LDB>mb;D!oGiEq;MSgQ
%';5UnDP12\EEB\=2;f<:>8r>OMm-<;fet!>EXg:Fdih"#eRYAfMR+qN=L(fRn5i3_g.npt0B(sES-!bHo]6OQ`.A7oA<mN!Lq;?%
%Ieq7dN;P#L]Si``6QYm5&Z,A4/Wfs%Z.!u`g!G$pJ8$MOeZI98)[s1%8C+fE=-IIH0^TQWU[VpAa^"$iaOM@!-sZ#u^`,:[^G-1>
%RBaQnDVJNKW"k[-9_@,0nZIM#=b@??o!a2imIEnQMR0WNc%Qtb-On@<=8,!B8C9Ml_ld&5:5YVO)!g2hV3>Q2dgbd_@>Rea;)l8R
%(I,[/@3DD_.OQ"^;*6I.$Jhnb=lrqP<\e*GMUhssWfos;!p<d\C!,[h]07<jZ<K4YOTKgImhLmg2V0RmK0;s[cT,.R+A2Z>;aLZh
%rdEcs;J"Z$RdBO;4QFjInKN'J*1oOl)sYE()HN'e)6>fCLp94$&2``0cLL#p[H1.Fq$pM9$TdY(im'i4IK]%Sq\lNgm/U_bAOZ0&
%AT'hfAPn^#IY3SB$@@D!=1p@mlQ%!7B=SU*)?+KKInT*e>=nP<a?k-l1G[0eTS<\pi8'ZM"0?L@:tf/PN\B72JC9q379rQ'Ur7p*
%q;L*$q(S:Rd5ST5cq4OeH#kPu3j^A8/`8aspr5sXj?3(j3au``$`KFPOus7]=%N\]O$!;Ik5mbu.?LCt(bQWI1o5U+,OACK>AVRg
%lob3jBM-'bpC'AT&jqUBQ:Tfa)R,%XZhTBkr!JYna%:ZdXF7Tl$Wh=9^UMR+K\J:1OFAgTpb4+A`[0?H@b2.C-9?UFqL]e!"'M6^
%OuiW>jM4Jkd<OPa?[Jib@>-`Sbn\s?7G/1.%Fq8GrK+j^*UNZm"o9pbCJ*WpBO\U/h\6_=#U.rngV(c]o))BHTM"qfV!0n'XbO(I
%di?EbnA'b0!$JQ+5X5)@R6N)G\a$/,E*sH2#+Jd*]OAs=h)2gGheVSHJHr@_8,'uY*A<L,S`Dp(^?`l>S1(!!*f?J#e):.hGmB"N
%,o<Ih/g9Q`KRIap;WHsJ=JSJ06%,TmjAM<HbDi&m/_=EoBVd21>,q('jd3scnf#geEn@fX4g_gtBK%5il<.nKc8a$Zg3?X/Ki/-D
%(?jfF/l85#.fir?@VHjQa8k!P?$N-nV-g*rX#(SQJ7f:fLG)<cAuil4&A)*2-3(E;"VoO0ZCaK.ogX71";=g#hUiX(#^LqleZu,e
%Gu2j?@^X:9kR?HnReR)h(j5SG=FJfpFC@`/OO3>FeGPe>TbPDR`2s5K;5_ltTpG4!D?BkRm<6jjM8Dgb/]l7g'Prc"[L]anr#P"*
%6uUVfM_^8Z1qNO^N.%gV9?cVsNnP@eIm"6Vqc)Wg7!J!@JNh<G>0tr&<\t>_mC4#__5]lS$:Sn>4bjMWfMn9U['#HhK5[gIi@Ci;
%LP9@q4?(Ws6I[H0$uH]'9*LDV-3__q;Q:>H(E3hN::O;(.m2]#r2S4,^7lf#l'^`B"H-OVq?@5&801;QcWYIVUDbH&mX0G'p::,:
%>)Hs$)kZeAQm"\fB<7f4V":O-%ta$'nt8O'NB#>8nPm38o$p^@nX6J2>sRjVFV<&ViNC73[McF79nmi_bmJldmBq4'X,d@Nj4VlH
%N%^MjI*Us<3?]`d6RBdGPdG+5Z?4sr%]3'on=./*<+<rb=k">Ee5l4^BYsm+C2h="7pq$mUE.l4c4ho4;#E>0oX:e]9U9D=XRR=T
%-KIGF-+:jk+[\X.ATD%$-^)=)5-d7LIeIs/ds&J0;d#6mG!8V:dnn*9:fu&'kSk0Qk,`MQe%@Hr%TH6&:Tr"8gog1OoIW_[MrDh[
%qKZ*%"k_hJ34KWX8+'FA_ecN1?=n5/WC]6GB:$\i.MI=sDqHUR&.&_M/!c:W@Tqpt&ED'6M=anW+tr/SI-I;.72:Y2O1ob-I^":H
%o^NC_aF_(KjU*30j9_-8^Vb"TM<;BA&Q[7QUXGr^R*4S9)'SAA%^7['d-"8Ti[ZQOan8c;MPKu=$tttUO8W?rI;H&9>rX]#Q_h#$
%DqF-E8I0HTY-h^Xo,tF9fNc>e%m_5s#[bWo?FgeeaHT>%]SWGb*Cj/+rV#:%q(NbGE4?7]3K)>AR\QOVX6cY$JuSi\>Gg-jg3#`#
%70PGKnciJCCQ3i_-,\s[At^a:8T/?b%c*?i$GcHAJ?nGG6I9M%Btt%9=Q8?+(:mpO5Rn!_7U2XNOT36mZlbXEQg;4,qCTY*4#9L5
%ALV(i;it6"i%aIW.bQ+"la9.+RV@k(0nP!n]rn?+*@*rr*=h>m8Z&Q<PsI+,;HK3UQ@c.Ngc+[QSu/$\qc:"X$4+VGEVQN)g=lf-
%34hh\f/hkP`1^Yl@7?@1=?>L-D]sA.;;Ylffnrh(GB!^)Ii2"S$K(`"NBj4/X=`Ur>(KJT(?D1+4r$(H$(ONfHG/)?+u_/OL%k^p
%?c=PdX9E70LglmP$W7^,P1X%srFFG=W6EBQ7!lYjG2E!Bk65[sA>M,"JKEPbm@qZZA4NfI8JT2`!9Ok#+c8_cIb];[<nS5698;'9
%psj_(M=mu87kKtRZ$+^>;1c[qYOTSL(?\uf"$cC7U_k]40cf7oU"(HGW49$Zf!d\r7?aQQPE[(ngYL.*N<7F+ql6ZV=gPN@(=QjZ
%#Wmjf'eZ8-\`^@sZ_XO(U#1u[MmR0`.8-Y."1WCP8CZYs:TPkTrmXeOMtVO<Ifi+0oP(brpAK^QUMtjT3Hu'H_9Y5$d#m--;[X-T
%78/MY.lf*^;-'E&>t,"M1BV`tDM&6^Nf.Z*02W6#NH9Oa8bP1Nc2"k;\T#UI,%rrg*4p@344Gs4fD(A*Mp5(RrjZ:*Wa(k:l?*e_
%,BZPK>kMqNW(FuUqJBa.8L,e3:&kHskcT:p#qqp<S.F<h>DN[\kgr0E.mIAO);P&!@TBbboq5S3&&D-q%O@u5d`9Nc9J24U4c2*7
%06CKc.9`Gf>4UUn11=:#8<9p,>d&8o5*9H[*nmL61e"=*r6W%5?!K4$X^#3k"dC3jOkt+(?"9mJKI#K@M,E^oH@r]5nFDFhq5>eQ
%fT9i,@`O2fKdQH<o78$[Urk$Q*#>16XM3ZoEfr8[hLLpC\?%NYrA\n8]P'3#VNKZFeA_(/4h=K$l.8#Tne:Jrh8AI)0rcI29N8_R
%Q`9YjlanLAY`tp/>gs!8;PVI<._g#aD:+Oq>oOH+3sRG5;tEjfGq/0$=GJV,EJNQ\ctSSJSrQM<ch"dp:8.K:d7B&h)5QjL=il&[
%B<>f4b^M30JEG@F#8P/((/pi)T:/:l#4dfS@u=B[,bZ"B.NmiP18h]nRKl\b=27:(jLj&mkNa'0L,WV?i]lRGHhE'q)UYGQR@?cm
%q8D?Aq*"0rAG3:QH([NB?X*k=W1IYUKqS*!l-:(Y@:Z5*Q/2OsouaUNgJ`a-dM:u1%d+<UXrE_q11Ai:oIbbhe.Ss`.TbZZ%!ScM
%-r=*u[cf-[&^?.>@3*]N..<&`TL/!Rm#]6QU8fXTZR._U5tu[t7C"["XsOa)/*Q#(U.\St/SNBWO;b6_TOnQY`/:9i2A17GLF_Wt
%Q',*\%jJs5N[,:8J1DhhSu^BDi7!\VFLsU&aUT,5hNH>6#oSd/\RG/[Tr]^\S\[T?;^4,;W#Va<fpq"_$8:F*DWo3o/5eDt`J`M*
%ZRaO^7aWK%6Z['W^;4Bq,]Z9<_-*_`V2*/%D&Ru>Pfq!_OK"]^aY>Gd_W<Uf>e+?9.<`U2AkY#g\ARB^0nXO5S0&:cj9E*O\PmR=
%bgLm1H"naj`1A(<.ZJ=nX"SM20_C/33%T$4)aLaRk9.f5gd+L/=SWl:>Z,e3o<.ro4?T!GVC%N4?_PXu7HB+&5>!l:4%$pd3"]1F
%(+`B0aKpnL?)s^BNO[Qe"qk>fkZ:LLaORW(7pH)#Fc=p*WABlcZ<#LQ67uWnFg!0%61G\EX0>m4$1m.,n/8AlO:7di-ibS3(ud"<
%1H_k84*?TaqC>jf/Q1R=Umg:r>hou;<X<0>@,mFKLK.p.r]"4^'KOet.D<#%CntWrW3)g2UQ5>(\i[[tDKXfY[nI1%3`Z@HZBhZq
%N1/aLVN4TJ]nD:+74Q(o5QlbN,;=aZ\R#RJ]Bj=@Zggd1fkS,'PKGTk&A$SEZsU0r08S4H.#J1+<b2mR:%s&]d0c]n6Ps0eOEIlK
%/dB1mrbdp5(MY"VS%;+MZ`&#%/I6=&l[1/[&Rl;A<L5Qc<Mq6_-97/kk"Ec'aBlRJUV0-G&.n[jf1)L+lOAJGnoco[$Vf'%_d0;\
%5BGFQB"M??pY@Jsc].HGKLaLM"LCU.X)c>AFeO'8?"iO,+%jH$()rY8KU"J;l.p)D='8=n"'6e8P=[aIB4e=EcqbfYK*tVQZFT>j
%,D1]tJlU0q0/SMCM6_`GB!!e22;r>kXm*kCMd$bt<C>Wg>A(=FLf?(+X3^rJ3-O)?G`OSB?7bCg;F.e9OLh+/mj+E=VCghn!YOQl
%K^?NN,\Lj.WF20?n1<,*YuF>\RB9,Z:d(^L2/eiFI;bpU^seR@CibGk-uea$=+5la".kir]e/t'"]:r#@)Z'M&#a<DVpE06G0@+I
%KBOmM)>iml`<r`rq4\s%5UYQH:41u.YRNb<*F4EdYD#_$O*p,C%)2g[eG76#==p0r6uQj!:LFph$upja3HtTU\Pt?FT_ceER'Ku%
%Nj,;HU3<%7ZW2Lqfg^5'4cZ)%/joi_KntdY/1pb8'8RmtCrKk$*lc";Gb*8A;&F3%kC#^(St]CA[!>EI4ph)Cb=BU7%VA!+h1,X6
%/M9_6aXVUBoFCI-qVM=.T?Eo.i#:\fNmRi9Dq.^+8M4]:QZ[kcFKRWbBLmFSUUUG_9$.P'c!S7I>!2D(b6RH"Wp(_Wj:n&WY9_($
%4n@d->E0aG4CuBmf*u@qB+]?C90&6l[a-aO7V70cC%a%jl?g2gZ`=:Z#'54*_Z"U_LIO_3:2%-h/;;Y%FAQikkC&DX.5^^t'c.q#
%$d8"ne/km!!m9DI5)R]mKQs`+*^G+ian1/FmrG-$fb=lE,:J))cl*FtMIYHV8k;@\kJpIj?2?Z`6FsX0)`;i&aW]D'K39/X=cJlX
%>t(u=3!R]+\rPM^^3t>boAob"n>H-<]h`j$L%&a/=(t_1Pe&GM&A3d(%(/r?rPlg>f41T&DDSF'8+':lKKk3`Q7f^hSSjT^1*(:A
%d'0-[(Zp-uQU*ZAEA"1'-n'HbpV)8E!.a0/=BD-I^(*TWCCRkB,%Pe&Pq]51-BT&,MTrs7QFO(C@CBZI)#A<nc'7C9`T:`HB!J=^
%^Ub+l1C_MFk#%)\lgF=,-l7LDQuCgTUB!0VV.kO*Q"HsfTZ73ir*:nsFOa'!HS@I?K5kc40!JX*:7sY?CCOZ8+u4%I3d\'[BWlE8
%(ODB#>eXk>@t>'2"40LV-8eM?FpF*'a/egWYqCD3(Y#7Ig&at,5ei-"e1:4ZX'0R<6O/NfJ[LOZTR&@OFb/q,35J%^#:uopG1;[<
%8D_%L&bsjL9#_f\bZD<fVarF9"OU/`m86VU'2#8*\*n.9/SKCB34r'Q]XB+#^Ootc\;=Z>dUXB:<GKP*Q:!2T5kJgDgTYE!Z5V8F
%&o`1o^-uhtT3#o0g4Sh%W5<p&0m&HN'eboL)DLtkG#>3j9':AGhA'r.8_s7>SSP+gefOI>?1</9qoUqRG48"rfrdo/_P\Kpjd7gH
%M"HQR]6trreY0?sO2_[WDI"3O<B!7fY0f<q9rkB$_S1)1)0mc[2Ssp^8W=3?jYl>=48>UHYV(`=6H;iKV.nH^96WG"L@J/NnAhm)
%*WZ)^j59C61ZXP"alB['@-H?s4'!."?7ObT_[p+>.Lkn$Ea=ea[(J%?F^@k."n^%"&j0L[DF'Lo@l$W,KKNYV+E-$Mc&ZIbNH\0j
%ob5po;+IGeG5VDgd&t^`o*XfV%ApjmfrJ+LQN_igBg:Fu^ru\pHpMVh3cqG"34NrXKXD0i+5'Enm5*Ei#Fr.eqOjq:!sA"o?EmE<
%'2N&p4)42j8IZ9q^u%VOO7`<al7$ZjbE7_b<J_(dhek@oo%mXQJrf5+;\_1%aDnN:Fp6qW?WTb*IYf.5&]'0Q2e0BJ4/<ITc]@8J
%jV.7W-*89YD0+nDN-R.!;,t%>-GX(2.kp><U,@skpB]1$*:DHV9?Jcf4kro3L:]/Af9QNKbD?j:dpOd,!`8k<aWi\';6SifP"Pf0
%HQ#:e4MiP/m8b59fT>&,fq.$/Gu[GG)VUe="\BFte]mo%&mfIRk"Al;nCZl^LMo+*S[iLW4aPWAc;G6SNjd+gHJp`Upn3Z`GQRg9
%&3Ue24gHe163u14BuG5"_IUgG8mlcPCm5WH5/:d+"WUdpgM/&ZG`F)hq8*;V?T4b)nlX7fnQ17r>C[?"Um/ZqV_L%-G_pNc2\.R6
%R%N8H]Dm/NLrSN.9*N-MRZ+[%6TjATeG%Gf?XJe%XkNn&4e<RJ?Cg&eYY@`(&topc"cFWkW.q:.;,*:r(hhF\UsVJqlH?1nPdWXT
%e,mFt<cF"aq^lBCF1+$]<)jG]3'h?c5n1%tI?!En/Q9a;&4KUIhk2o&9dW<[Zh(42Sp,Z8"R6noQO.,=X%Iq1q5t;X2)4ABk*fgn
%YJ=88o9,df`I/WJ9<pP+'OC^N*1j\$L_8n:\9crSr(!G=Mb-a@B9/"nZt+5Z=kipS8C<q2f?'qp$CRE(52f(4'6X/mh5D8Yi_%l!
%&e/V1l2`MYYsoIjcT-LNX/V[AQ>5M&Y9hBBAu2Pdjkr7(lGPt]qkP5QpE$r^&!XHG1@&'sB!p@DA7rc#&h8s];b%>"Oknd]*<;h&
%_U0d;bu!Qj1rM;dS<-QrI\Z:%qg>6em`FG?`b;ZmOE=L!Lt;WQiBbWn-@sT&.KNb&SC3<Xht^mD5Ko]jMT$l?-\?pD$t=3^>1Ys%
%f2IIWWG//lS\eNr%tbkO."d96"/G.oOQ7HCI$^:S,jpmDT.+@^ldWOXaWpVkfX_dl0'F>&*o#U9kn$,'P,_0-99l;O7X6SQ9FVpt
%ARR?\j&Bg4kc-i;Cp/0!BZ&]1G[lTgepK;T,@-Jn=.<s"4u"\)omth?e"(.;+Y'.3Ggh`[N,TUcfk>P-J&IA&8\0um0DZhj#s`>Q
%lu/d#U[/o[0%7%4i\W*9lNt\!E!rjggou0"EXXsp$$*(B(loI0P\3fB6f#$rQ'-0uFB.H",t+S#UA"L.>&1bHA=hYB]GC?r=qTEu
%Kr7`KC_H'oG[Xt=g*H`*]/Ki(l_S79Cr6aqK4GqYAGLPG8Im*c6pQNe!YOW*EQEk[Z]@E?8slt[c-5Db.6Fetp<c2J:7F]m/iF0P
%?d+R#lZ/Q"_=!R8+"WJs;o1CB##2Z#")]IbU[4E&l$/O6V`5ej+\bt@,$S,[?md6j-[-%N5tel`C`D(CFC@c3]t7s9_0Hp(WNLeg
%=1!<@rYi(nL2bPh,O3'8;heh,Q**mdR)G'^UiBdPW5&#n7f5jbgR@\`!SrSDq^\28_5[aPp$,DVZ8U[)TjFsHop6V?6psF;Y_Sa^
%C<MUrp5nJX&2"\I[S9Yt+\IcaWh$Rm1-TQ'7fWe&%:uU&/Z/Ml*Y`%cgG`*,L\59M5K^]S,U"CCSg@>/]d(1+^$grYa4VA):KGtq
%_Rl[uP?eBM'&t"[Rn6"%lmg2L7T4"'Ya2b.;e*b6Ysu'.lI15?98iQHZ`Dp!CE6l,6NPeNEKWjU\&XlM1Sd@n>'qlaCSO%'MU0BG
%IbJ=R/B?b_or1BR2228`E\E%B@SqFK'i"tY&Q5^qM=!>?9SN(^SNc=ueGYWen\H>G?eR9P`_4CQ2d1qUjE#Rt:4FGao$+gsPT>Be
%=gA,O>tDbN`&%Y%7S/0>`S!#;DMI8ZU/UnWQ7ONhe-fQiTVPE9nrbh-%"`&KF`RVXm**O9&7/*DCY:"j&3.r89IFM(mK*sea.?Q8
%f8!Dk[aM5sGS41pae%S!dNDjEp4_&g?YTE`Wc1.\al*M.W:S&+BL5dATi'U@lE).JU+ojL)TnptX5X!nGI$oM>B5L&jd_(6)qmbc
%EnYVsJ=na3Z$"ueCGBiclQ9]U1c2GSoRT`?13HgdJCJk-m-Sf0afiXOW`tF=F)[dC-42rbhJKgqhR,OnG"r0>.:&MMP4EVf:IoF?
%2Ye+1M5[A-=?YAa^"DH]dbb?KRG!dEN=_b\kml;?82a3(6M/a[#r3dC`dpH9gh9,R.8Pj'LsQ^=Q.H:G<L6AFRB0U\XQ]8T,f5]e
%ee*NQ#+K,h*<qrip^iC-22X+l.!pI26T,6b7l@sES4%=DKX?$@Om_VLJ!:ru)d#*mbHs0h%8QV/.oIh]S/WC*?i)YC(o>Q9TfHqG
%:,Hc+#tDP/.5i6)B6n+eh.p7])9.L)L0+%2<S*&rq&D2MkFH!'@m"T9p=8Mm?7?FcC$P'PbAd2++G&#o]j6H8>^3BHTNL\6:FbMm
%62kS2A"b=4EZ>[,<BF=unMi.\o68Z'`]7^j9/LgB:[ku"\On\1$n@M>1^>gQL_]%nAP\(^6bBQ+[Gkfd5KpS#q@*T'r+fMu7:B_j
%6@T5?=i@&`SHEM<!)]9ZPN\g"%+;4s(s@;"!uWV@H+l_$?6tAP)=ru$'1TGSj/[`KIr%*tX>hFN!Bq;r'dJ'Z_L*RtiHVQ3hipXj
%Q#q#:'GjbkASpi"]WH76Vq*kjGc6t92RUOobo?(FI=u<obaB@`eJ]LAC-Wo-CWY0>Vm,]/7Rspj08X7s!14UOK\65Im8hk>/BuJl
%5Mtnr`4mhJrU[0BBT+,tEg[=.s5'N_fWbW+gBm+J.;!0IT0.9pO&U[HB4')H7r-DsSVNGO:B,l9`""*\el=6&io=&70:I^EcoI5j
%P!5Ib))Ig![M5[TS3m;FXR561n\V"5P>6ud3<U+<WC1%B`CqQUp6WJuZMjBdH1]ot,/RG7UfH^lM^V81A4p4ULRXVr<haf-Ti-(/
%fo5.JWH\f8(<K@(%DnAkMiG*";7JanGD=O7BR%F'-)6J*=D=EdC!`o&c_\Se6Fk\3,LVCuTI2o^9AKmO%/H%T9)Ba2^;:Q`p:%ck
%cG0\P-7&bULBc@/mqt5*PpM9gbl3nn!gNrncedGZrD[`i0!fa^?(!l^--i2D%dddl1F`i$/NT[0.^8Kt!j6F]SeN\!&qh=I*1\3_
%2Q;@\?D.b2$C+9SjnauPWNp(.1Kk?TVuf>1jFd[Mk-mSKj_b8dkYb<D?4*j67&K@WpI$F'\R*r4*-KsajZq#C<gC!'4NknP-T/%>
%iqm8Q*?6GO`/*lKKJ+1:q,9XZ*dEq<`pujJBX8!k3U/Wc3`].mY&H'_4e(oKPgnY&g:*,0WpNq]kp<C3Hnl-<:F[$gEdFnE2o#%I
%k4aAPF_kLfNrTW4Epf5]i=N_R'c2qlhA2nI6ZC6B;FE(Aqt!B_:@;kq]W.md2RfXDo+1p(.(3QMq]6HWRoL3r$.A\"CF=>`p**3L
%jnRUVClBu:(a]r]jmVKR*BiC+=H(*S,cuB9MkYZqD`ObtDh%/th%Y844ks#lWk.tmqhZ:m!8OX.G*qjf?;<j>bCkm7>WorhA/R6;
%W!Hfk/&_pY"sAaT!42L9FPWKN"2m-um:/6:c%U(345&(c#eWpkI@,\uX1P'p[ILXTZj5atE6kA"$L2?"W5m@tHYB8!^eSX@ki%H%
%RSNq=?.:\bc&,<(C3YVhALrd6F]5tEF_\OMbU\#YEh>u[-#XU6h:,Co5VI^0;-[*0!8>/$Fh!k7pS8(I!!dPuXc4-Yp$es#!lI6s
%1U;hO!i2./3hs8eCsSq[et>9pF0huJd;Pg?LKD#sM#d;h>dSC&T(2I<FKX6D*,deTD9*#_%L$*^&.[Z3D)s3N&^V@ED*K`?-G;Q.
%Md)9c:ECX/##tdj'#:0!lXY,SADO,bf\l7Z.L(Ya1\n<G'JLc47/a:;"Vm-lg#^t`,ItCD7'E[.P]bB.dWG13G"Z7Br-$rSFVfS5
%,s<F0br(jrPgMr-9DF[);<Y,38O9BXgPN(?=TWU"O_-?uKj[bRi+I)hR/t2S3QNM6Q`5(.QJ6;P"GL/ThZ`WT6ie!J3R-^SjadYk
%mUdC,jR<"sTsn3s\DM@.g4X*iYYCoX[VN.NpQEVL]`XOm9IA806J66?^rEV)3#"A]cl67D=)k2r"U;*9f6`/DbeTmL\FB'9S#ZC/
%'P+*,!/\eYB&_]h+)p6t$2G2?WJr-?oBa_ZLcM+626o,_*5g3u4L.PW*;8;c?QR:ob-N(26V*SD4EY24mET2-/ZZ`sm=TMS_aJ'J
%,N'b?6p+m]Mnc!r=]fb.0u$6j4fo)p*pSP7J5$a-AML9i#=X?:NZ13J'$%hgZ%WHce/Eo:Sl>iWa6Or0@81P<iBQ/M!YtP'!1$WF
%Zfc#9?tC8f5gH?^::f;J!n42#r+=sGF!"3j>;F!r,)<SAMT+.h;RI(p!4^-\#HTrLdAZ'\)sLV)4%7"Bm/C/,>r,I8P*.:'^T3+)
%RrqIaaV6k1i[Nt&^-Do1Wj$rka5gTuMcpkiY-St"<49q44(`:Da5sOo>gRS"UG-A]q#kZ"n9]<^0$ObSQ8:po-jDA:\`B,d,>Bk*
%<Q\"ig?rgk$>$PuH*In](!?)Kg!r(Wel7k'OUSkKi(DnNr4=!U0ZM&<k.-bmDkOjNI]?BFp,)Op3kB(kRF%Q.[7DK=Q1&R773k,1
%:^FrT7gK^S?:Ke1pihb^*JI<QUhdqD/\?`(')d?,b^hF</@c%YjVW;j5rCV)(^C3?Q*\MPV8%2FUIN2-f#)H.7UncT>qT](L?b66
%Sr[/a'qV/i0P`ptPO-",CqY3a5eCf_roRm$?keK^csPRE>3r;d^dK?MJ/t$qA/Ffd2"C#Q+CqnCA`Jab'to->(JK6?_WR;XU>kF!
%duXndnsWaNID%O':u/Z\bk;YmX4<-q6-5:#;49&AH`cS@Eau++d8U1?c2u`fC15p8DYLE1O&_N"&*s&hG/:aaf+4Q:lLr$)ICa<s
%?FQbhHE"SGPg(rR[>Rpa)1N$;2F^d07)ae=3(K/HHAtRJcH-Hh487-];,gm(f'U:aUt>02%%q5f*JYtAL2Nmf>u-.(U9suYfF#Yc
%^@qqeUNUsXo-LVaAc%,/L.jA1j6>%Q)JopOR8]ih*$(59Jmsc8XGeFcRC`6e"lBqiR!.";CHD#&YsQuG3RapIc[]LJlR#'gkLnad
%])Ya``>,/VLL1'QX^1!Fc%MB*[GB`88@[T/eFkYm5$/q>L_jr!Do3lII'_UHE4;@44J:E!_t(*#E!iCA]IVC3-A5!rBY,-WgH&n)
%e,HKN!b#.Fg16<;J\Rc]D7e0MRRi)'kNGbh*TU%.-r2K86B(_k^MYbs.ID'on8;15?X+=B1$!rs9i*b+1P@nOl+9Wq'h(urde;*Z
%Lj4Td+f1mtD_)oll],'4du&JL+NQ3l"mT\2fD-\-:!u#4pUR?%C!oCme&3JrEsWE)*ifWUW&Z!CX&?c/;*[\!(ScMbOpo!eir4JV
%Uj>8"C^gg\<&cJs)%Jg$rgUHJhcQ!m.N@^!2dF7f.K[U+[r]A8Y3N5mN(^(AWoMO2li&,;)M+lZ$a7*GP@9cpPfU.5&b^PADLng'
%Ln&a^QJUEH9?^Os;_6]XRR,K$d"DCHEr>E[:N^?$Zdoh47SX"&>#=5*4uOkJEAnI)'CqA3F@Hasq#XQ_"'><4G@@M`j`#enCh&T)
%o5t@=.ao1OF^2#Bp=K]LbSA.WGu]Ks9;gU&*@Z\)h9>f/JuV&7H+:uJ;H*b`Yp&\hOL,QH7h4;gNd:DW=m6<oEDRQcOr*tH3*aIW
%U@s+A$0c-.@COnF?*]t'lnjNf.41l9pSB_RmY`?a;T-kt;'R!q"%Y[;Z?ndNF/\e$+gD4QM\;jOe"3=s@I7JCog_7?4`Jo[cRpL/
%]]1DS(1m]m9WI$en"9p[49l$[PsA!=1]fM6pdC8<hY*?r?ojhr1kaE]#0e3X1"*,t#)EDH4t_p0>p3QoD)NW6K5R"<TUtIp>k*5V
%>cs4MAV-f<?SN+tiN>sVWIg#>rTW]FIC]7R?Vi\U#Uc@=EuSr\iIQ/1Rpj32>X=n*-Airl%d;;/B^6.`=%L&,Bd6Rf(-#`]a<m8c
%\Rc@1A@SEY>']B8l<IrFj*(LJ%]H]o+E9Cp.t'WRIK6+SpO/n;;i84M7t]m(>#/fm"ZjtGY\X79a1g>(_&'ID'LUt7.9MJorHh&#
%kAH4W[;@`43k;k>kZp745aTu5X+>'+dEQ?GhhhltRKDA%h/EA?D\NXl'5ioF](.;sc4rkU4VqLne$fE*XX31qe5Jjd4Z%RL0[)`F
%dfsbaHn/[sY&8%jkuLc4s89pOgs*VNZohU97?!(t.'KhTR&Q63;c"n2JIl]D"]VtIA?1sAZ=0u'jo^ue<QL?)N/EObamjojCP?gR
%:odfV>bK(#L3U4Q]hE*oh'YH%m]u-599a@p_:!R<a[GV*A9&3I\iYpH=li!'2lgC[luVc.?Z)e"MeUcPm.nl@$$_:=A9LM^NE7IC
%!eTl+cQ.E=Jr4V/+k@lQ"]19]/9E:3`t4;H(kTnn?+(eeXY<IPe.#/PPu3@94;*T"HoWsZ!:]`Tj`neg:O5c[a-k_(Qm#b;>#&,*
%T]TM-Q9B%\SH/^Zq1&K<AicM=@D'#Z/J>Llal#=jnPB`'4gRP+BUDk8%LHSgC`rZ1>aj-Z:jmO!&.HLc,'OS_cs\6M;Rg!1c8aOB
%q[jHdSWr\\7Ye.VB11l/fb$4$(''Ee5_0#V1S);XglA'Sk/9+Bk6EJ$fFh+7m7BNZYrThZfOcH1!A54:QZgLKV\=b/KrTT9T"iW8
%+q<^T_`.W2Kb-G9#fph:M'/#DH;M2AC2$(a3jIp+4OF,U1+!Q]8sG8F^dE7fD/4#n&/A'".F1][r#-.8fCrY6ld&9R*fqa@ftRqu
%p?,5JkiK4*8sA7$VNQHiVf4h]Ya.`Q4uY*gPBAKi%kC0poMTPQ6o%l]B'kfBK-'Z6kpYm:Zi@!nJ^'65q"%&Z?G2csA1`E=A7I/V
%+ocW$CkO5X5&Z,5%<;r#=ul4ZL\bPbE>2P,b(+%Snsl<m0-THiJqiG^pGbR*gb06UM+AH!W-/rq&*OuorJ;jn#L^q=-BY[emkfs(
%I#,uo]3]7g_/ht@$RC^ZVndapb5s`f7ZoX_c0BfP3;=eCmsk/_]>n\NI=Bu4ULuHRnki!S7lks%,A6S_+19E^JAYR8q"7lUf&0#l
%#AiT+/^2oQ.a?I]2VlPQAi-\bI^ekPYW0V_Y<VR>J)M*?-c4("B?oNbF2F<9EN[kBin+!`fCYRp@LV\\'C3HWnaoAIFC2U+RhGGh
%EU":H8o>qYY&"m\5/L'BhGWt0E=.5Cqe"=sp)(PkpNN1#c`(Zm?2E0$110cI>U&t?l9%I]8'^-97`p[:+8P[u^nY<p&E$\RYG!#c
%*iBk*$)/<%G1-'?[sRUmpD!9Xe01!@;n'n0q7A;MgpX4JEP4Wt)&1L4c#i.KipM9mA&&%d-h=sJm*?R_kW(^p3D\`s633_RB=hc3
%kuq\*`q,"jO2ZNGEs)@73b`P&%8S7*2qL49eQ.'!&V$rCa/DoPW@;=?0L[?YO%Ljsbm3<S:_[tO/$ED]#q/iKMo^&EFQnOg@hU@;
%qgK]d=FOULR+(VQ1ac,K0;9/7DB$(Xcn0J5o0-A5qqGrTU9CY0!M_$VC)gjmJW9K#4ae*HG!>tG6G732!S,I."Ja^Cl)-.i:L5I7
%:_0HC/@)_uSD3dfQQ:OUc1GX3*Vgu+3[p4W<LRpXhSQ_YBE&e1N]+F6OGZ:o)HTI%C"OI8PGH;u#)*K.ElX=mjW)_+2N':u$4;^e
%8[Fbc/r@Ef\i^^Q85cd>PX$YHfX/\9bY8MqC#.:nG$Fe$N0-F4U,4lX-4?k@-Vt@S32^8J`Qe6g)2gJfm0"(4Md1#@WH]da4Z`+Q
%-DkfAn@%BAFrF[N0g2/RqC-ESUpg;_p;#![r@X-@Y6PI\MkA@gEM@$&ZuSES9cS<SC.!]><<uW?@H9sS)5EXg;BVO/+Y':#QiD/_
%KXGQ-8E)+a.6cP41H@(-4Y`cb=.Nmj^h9?T&Ou/6;cGWDRLAKgRj=aJ]8raP4tK>[?%3c5[U%>8fF-N[^rn*;k-q_e;``m=V'I=\
%i-ND*]C@jU(=H#)dTf]g&XQAZ>D(@B@tqOOdKoY`lNM"baeVZ[[Cu;-qIunbEEj3?8Zb'H"+K]Iim]@j2%eF82R]9E%"Q<FRj'^8
%OrO,]8OE/de>ja;X"UH<oo*X?Uu!%?bgTpMkQf,`m4>nt@Wm2nMneM=<BYkuks6%SMiSojP<sUp"WZ\-(9tp;;WgEnPXR.Sc)8B]
%+8Z[*ab`NqUpNX(jjR$5XE"Ufi-[2L7JNONqkKGtDu:*PGn,=/[sW=4&eC'r3K2CDj+9Iq(>[]/l`sqaIC3Ze@_0MdiEMuYW!3Y7
%.@;7/GW-!`T9u0n?i87"IXeRHjqu6+qq8AER6%[tnr!NiK!&D7MUW^g81n#L0:l$LW\qrp")ku]/%@.:/OJ[a3fa`pPKif>O:Y/d
%PXXkBf(=^&V#Z^n'R)!;a<)*"@1[X@Hp_`b4J4T^79O[rXPA?@l<(K!\G-0u`sg]];7?VH^H<M^`j[%4qCStA%"fu8p/VuR-%i(-
%V+=0r'@/lr=cs[Ci!W(XAEYgDQ!0[O)RP6O+\?m7^R7'k"RTr\B?\!H#.'n3H7]4%3[a]Fe<_HNq2DaO1)4psKi\]uBoR2Faj*B*
%AXo?j/]qQgZpu*$P'\,Z7\*Wa4cA<EB#%//_F/'!mnX=M!gNjss(t>ePn@<D:R"U/g0&_ec8dUY_OaQu0]Km*#/?Yf-[eU)`u5Xs
%lP!"r2AN#/"t^4jkp!AV&E)ue6tcMC-b1M,kZP=pF%l^*qJD-NTgB09?n5m=>bX^EFTXob#>.A_rg^de4!5@@l(cF#$Bu;E=td'g
%,BD'HflmHEO.B6(Kgo=8E$Ir[H.%B_,W$7*\_a".;p4>hl+X>dVkgo4JP:.iOX&(`#*s8"mg4XjcBa\/E-T6jPrK;:>@0b,)l42i
%FaTIUA!,^C4AT,Z@j0TCbFje2A$`T*_S:,;DSNK)/ii0!ii5.VJ`;bH5VBOU_i*Y2,P9<IQ'[^8P,km2LAB;m)/r42p?a<uEdK_>
%9`.JqO[&GfP(^A^8tH8eV\*LH;;G[\%$b/ap6.[Z'A14L91)]/1LMqG6E!1!4@32DotglI0uB6PKV!j=PcVB]Vi2#S-$7J&HBU*5
%4qF82g7(H/T#2mB]06=(bTQEJEmPjE.G1er=gqAm$HmV;BQMktJ`eD9"4ha80(\A1Sm-@6SR7qi^(3i<MBEL69&\nh<6NULl7`$O
%HNHScamR^QV[ESN+lPH)nO%H/*DK2?cHAn9-Li/<1G3p2B-?82GFS8k_sg)1=*1I%!6EJ7!P>qi`;[&4U_m8r]nY'BV50*XZMFF]
%L'bmGpd9p9k`V%$.B`@/0+P;B'8YfH[c0Z<gS_7egh=lu;aEJk?X#nJXD8:RCbUA.C0QJ5-^,3D.@2L>P[HJVm%XfhWQJ(WbJ@!H
%g8%:5&fer(<3:.bq.r&q_FKgG-%[BdnB7_C/(.EF9oemQJ0OC.W$gnr5oidTJJQI1qu$()d\^kfC?Od213KW3'4/*'NLhrnJVIhA
%RVHKeH*b<TXg)#RY&&/Jd'_q\Lspkp;:U=FLBIHYRgj?;6[`*?gUeAe+U,g#Q(:+fMT^B#Gn/1jTT8\=mpaJlK>OeB:5>3CrClV*
%\':`D'JKW7j>d5Bg(2q/j>^-O6X)th>J-`2S*,?Woc.R+;NNk*Y]o*GE41^Q__7+?2n[0_*clCuUUR;@S["l,%pK5%&tbFsX,S`U
%9Wi0q5\jk_YL&o6BJ6jXgj:$L>BNFGUEYJT$`,OkHu#I-+>>dE'&o4b9u1MDkQ&[]L]a&WYIlOEqa,!pmjodE-M(@g""lT5lDR9p
%qBPjacQHL*f."M_@M-(#-7ic0B2ICkN9RY/<8t,ZJ<`QI]<!#-T3W`K#kXY?p^:<BlA[^0PRM0"A^!$).IJsP-1i`LrP_0CZ>RQZ
%@/6bAb`\6Tg$uVM[B1gXj`/s"'-95.eIt8\GiNfoq5[11EWQA='QH"$]0_id@7eJtQ+GErBt`dPFHYi*<aNN=%RK7Ni'7Y;GC#%r
%n]_^Y-n=8R..1KUaCpc]hY+QjYhK+O+aCa#ZK6A&QBIC(4"iP0T:]@21=iB5e=uCY4#CSoPe)4+E'P/(%A9e0.HflNTq*_U>bTYE
%L/PMZP=Y-HIH001QpbUd8kCAOBbPb.23)8sR02uB,%*c4#@%J_/]1G+TQ?dEL/,7aFYbKFE7t?+--:B@C4[]:d5HVK*]pKeNN55h
%]p#2(Y&8A^4CL'*i\"G]C*L1sC.Kbr"CWoo;.Yj9bLD`sf!iCt265`$NI%0G01C<-EW.T0YgWmjP[HSh5E:%GH"?nD_i;jG7%Sf"
%@iE@Ohdr5hZsCE&-/ZS%R:,Se)c[;T+<0$FMF&jpNHW+iE4bn.neU+RHTi*)'H-)<RoH;1?8>a+O*rX1BT42WWXYEId_ub5Ps<pE
%)CkPQ3ugo2:"#gH%c9QPlQqm29$<]a@n$@N"tIT0*4!m&'"QplHZ+WD*%V<$T6p+RWh.X,Ucl(D&b@WDr%upJ(H6A)ek;-7U>9_2
%l:j+ENhq\,LA"4c$BTC.VO7&Ghp*E3B`Z8]5MB7T_H?2,$k=WOp9t;&bMW4]Gt.HoWkDPMD*a7anOH)RjVZN*.A^]@MMjJU'8&&o
%:O=4=l\n[_]ab]ELbc>iC3WaD#+CNr_V-M,*JD=3/7#Q)V5HYIQTCAd>/>2WL^m5W:L\-()AN:k#g#n)?J)DV,3=<gnrPg'LnhU*
%<X8jj)q;YgVE9g5]cr^LZ_(JW1o\&gg$MOS&m&Wcp(j@^Bh)7N=4p?,0P$t//^8rlH&@Y<i+?I'p$+bkM7H%74qA)bqY\j>.&()Y
%mDBSj4tU/4>MW&)66hS&4Y>oN-_W',q`0RZpm#SZQ=E*6/mrjn,3oMKOGp'I?$S/p'F?>.#caoF/KGL@;i"ac=$>_iJj@R)':'06
%Ao--fe.*$4,#ZFs[F=/+3h;VgC9.@WcAkYuOfZ'5AnV4#T)Y]J4Adi+P7[\HX<Qj'+mAWT]2Fb+O0WF;(b#:NI?LbbP?CE)X[;FB
%\!06I7,9X^,&AM72O,"kqeOYu8d:dc7:OU>3DetojVV/HC?>gGi?HP[7Nu*Ueur^d,R@m=S27&j/@)cc[bTTdC(O13__S7mn6!(d
%MfhMU_[]SsfApW->$Ghkg'[&VS/"<S3D@[g\_)ch$22OVFc@f)8Pi81&G5\[?`*)faZdC@c6OBE&+?uIfs?L>C+tL-Dh\>[.uufD
%pR6'08^s7i_kZcK2=SpI-=>t'4M)Jn'?=11BZ$L9?Bb>Xc=@@@&#EJO'X\\:[!Qnq"TUgCaZ3cKW2A$,RPa5:;c+0=*#q!&HJcng
%l0Kfr*EN<6WE?T0_\E\Z;$A/rfQ5>h3>KRGlj64\B7`9D<>N=:Oa;cQDDmt&C0Zdqq9;DY+q'h*lK6HA\Nc"%8qukG^;\DFWhAr]
%,T)[jc[)0J>n2,IR/0'>Y#UhJ1G+R-@5cXaM"s]#S:2&*_0A-UkUrEZFMZI?3R+!3O9ZZa,4s#^b$:Jk@E@RRD,HX6/pbP+<lV#$
%f<VbRAUPG!U1DI"K[2Wa+h$q^9PX2RGg`6OpFSOG'(2GsEd$prpF8%BE[pNNQ_",!LQ'qQbJmB,Ep;GEH$D)T+>QtkgOu8>2jJlt
%5O/0$r,[.<rtb"D.W7iIEjFI$7%C<PB.#S&M_htPG=GYH3E[@,[?E5an(fq8Ub\ERVb'&*Iq^:=pGQ;=[/O!W*=B,&Ka'!a:^s#J
%:oC\i47A*q;bM0(W(=csVlo(Tc,'Ci]\/U!GdCD(QUPD80@EQDD$/YF-`-V,aIR.^.B4;LEksR-`1>ahkG[>Mjl(1P+&-0a(h9B/
%&AcEU'Va^B15P59%gP=logbbllFNe_W+_bG)RE7eH97Ic-(t7[46,e4PN74?m#Q32nZC<O6b8B+9VV>ZmP:"01u\_\7[U/g;qjcY
%?9G6b@$06@D/BHaS/7fALm[,S8,9CMjZF*SEhO#0ZW%Vi`\MrS,S@8R<V''&U!\uJc6/Kq?SPgE_GQlYl3kclbDF54g=DgEWMcn$
%8;#:-V8oYA4IJMLEF.OP]!6dj/o)Z%@ogWYY]X:o>0GjW_t:CJ0)^;urC9Sm-)[dX";[hCap_#OUoqBUWM%aa--QG]:<8!4R([[n
%N^N;q&oj(6SArLn5@99p\r`AE>L"p0:0J`Oi@oZ9!#]Ff4VdQbCKW2&.q7CYFd7`"O)6('HZTllXAs,=HcG5e[52:ld!R.6B,Id$
%$.WF5UOoF$rQdn<RA])@>=Cnr3$2KO,>!hdar,M!F`/pRpTH_BYBQ)$M4:N#?&G\Id8EM8s(F3;p*BX:r?$kDLJP`O4MKmLe*MDl
%-PIj%8_"e?aTrd=^9esr!)s1DW2>bc&jP"S;0A'7@ZhG\F,gRh=sbN:`EO1Y(.n1^@_,UUfXM@Na28O]pWQ="H+0H81H+5>0R$05
%N\;[DnH!SQNgZ]@SGisXQ?citL.9"`PMc'LqnM(b_:Z<F90=[c8*rr+&g-,gU)+V/q)7b(g;/p;3k578;2Vq.he;]EkFCThGY9G.
%].?+EiLIrCk@`:-ip:)`n=tcu#S"0[F`t(%jW?n7bqi#,i7aRj+B0&oH_l#(KT/cGetPp?*8d]7F(iPCp>9@^gK=_%;J"2cl6n,1
%ADB1oGO7ShoMEM%58,83,;iiQ*Re.iLpI&*%t=4aq("Ls*[0b)IBod0hf1Z@F#s?49`H2SfJCisnpX<g1N&;s'2n8N1!DeC`Codi
%j=`gMKTpRS-`+(eS'3?f.^*6I4rOk6%O1#MoA4f$eB]s0Wgur4*-]iH+"X56^\2>Z8s/aPnfc13@p%>"R[f=Zl0)hTp-.gH76%kH
%og?612.da;@iNZRM$D4L3O.dkcel[Q@E*4]`K!aj$U4q(Ohl,50I6EJ`c1aeS)_8f_;8TJ'PbFd<?QIao\-+PYDeDgG$AFla>u#0
%ZC$kk#u^Sc)HUdl7N)D\,DI/Sb8M<\1Ju2"(aS>,r@nLf5\C.5*a2j+5]cpRm9rSFH<@/&R`AXIMM.C-Qa&+i0Y`"4a$!7HdP/>G
%DI;Ztrolt*O6)^`I4o*nqAX=JJj>Lioh.Rl^\4lE-B3o/^ee>l-STi;e(k_QqaSB`Gt,OLRMmP?;I8D'>4aH2NI"..N7X!k];p<N
%]WA]I;;%LfrMq4j$GLUs!9j.8^;=-r:_YJ&*>eO;9I$Ym=_S%,a3L]U:N$V]PW5t)/R4bpoJbtA!6%EH6,<j?5jg_T=IEH92ONf`
%d-aR4eSh00Qs&\9f+<$U\V[ti^\:</raK$kk'TFkD[Z6`60D+__N5i1&iF7#b"29fMWf_d+fVuT6:82GmMn$e#[&.?pd\bo[]l:i
%dY";"ZJjkI-s>3;EY,pdG-PmCO;j-,EXs!^k<+Lk,p(j;]YaK]P+F<0Q\kbrg?Au:C:=klO>[n.(V)ji47X,?F>pu4F.r*\^KJQp
%IfBrYn/oCAme?bA?bcQU68JE1n,N%IJ,Z?arl;MJn.5Qr2h1VCn%Saes5TU;^Pt+!o1"Ai;4mjes8)GYn","'Y34?mrr0\2di[V(
%1u(B6l*l0=]5R`=a)D">^W,0.gV<P[^]4!ls7)S.q;_MOL]@)(olX#ua*,5po4p/]nB^@XR8!Y:$i]VPs5P4$.K49Z(`81h:Oh.!
%-iQ"grVaM2kC7sP2rFT*bCBQlIfHV/^AcZ4r50V+oLJrO&&8/)n%\\ds87A]q8\!\jput>90`G@r8A`IphTkq2s^./^A4+6^Ale\
%r9"prG>_F$);\/6IXbPElX+tS&"iF-qdE@f#F,\kJ7mCi>E`r`)aK1#(8t,%i`=)"]EjdeV5Vu)$Lk8<M)BZu/_u<n2`iOIB+NY"
%>dPT='cQ#sB8fWML^[f0C4X.Kb8HV^$H"C*pH1!]*5c"oT,pp+Y;*sqY'995Sj:K$6mrshU1o7RG?@BS/+SZbbt)/9f?5K#m,:k:
%oqrH%@glo<^C%YT-]*6/i8G!?L;#Vn4PA,gKu(*YRM;@SN%3RRI?6p0F2r5P0rIG#r`+3>j85\5F\8&=V4=rIl6i9M-B+4)bM*l!
%7Zs"kB1saRbB1:j8jWr!mZT#U`<KU6[&qir<gPN'aUYL-b3[j^[J6N2%da/te&?on6f]U[hC1UoWWMXl*_W3.HF!/T]n;7::A%N+
%P,3u;KT,?)k`J!qZFL3gmdL6!-'h-?_jX'ghGiM_"npH`"KhA#+T\1@N?o1HVADmqTV[H4b+CO.&X05Pl*,tWLcEl&kCVQFTsRo;
%YkQU',pRc?#nFmUBGc/o8V:tcp2%`t85*"TJn3J4b*)A8["_59_6KqGZF\+r9&pY>LPFp:+d*OTTik<m=?VHHdBNCp*f^^sPjbJ0
%HfqG?)DGUG+D4l[5El.`cIfMoP9e\&%PfA2K5Hqg1orV;!YY#:`EU(H<2n/i;\dZGU.Ws6]Nk<T;Lj?MhY!e'PljCHjY!fmV=6-@
%YGt$=)P8V#giI1t0]c6h1,*FA1/D@6@IUigPr/t-hF4UV9uB[Jq5BH_?oO5MdeEa""Nm0ZPhmI-T8hTSlERO%=>;%[hbD^<W`Hte
%dW(FD4_bG63208C0AF!0J<!'N;Op3cQ,[*+&?-!oFeoceh)c"_'Ih/d78$<_<6i\<hhcM1<pZ9UhP/uob)H&M/p[aHC9hr8?<sRU
%o(sJ4>FEBLGgjkSX<'9EOVT9J;='>f+o1)F$t*)2bM,E=c0E?+LPR<-))C>geO)0*8?lbFonm^3fYPS$cL28j._W(7oq:`CFaDEB
%&5!)bA;R!ZD8[o<a*+^gVPYPkHUH3@$U8`j?`b<ALe<P5Bp4])Jm7G+r@YU8WK"+h?>rPb,#uIT:XVh\]u6%6V_)0()_la4D6#&=
%6a&XJa`Fr2D:Hn4Shq4l!A,lC6t_HFTH5r#J@S8l_`A<`WYsD/K<4@Fi1A#E3mG^TA:2qWaO%dV<Pkj#d_7\F;R`L?"4e;/Kl_Ng
%V;3o2A"_6?4He'pGp9/FAZk_c\N09NZA5C#'P?)`BEQIOI+t-'jg4(5^EO6d[hS6/MRWPkC<9g7To"FESoB"q.4bVV'pdfV`sBeG
%7'dIF&(sSfPnfI$G-59:%S0,fd[ao;[_:SX*K!2-o?%g!G]6dU1'oCC_0Mo;AZ"CA%U.OsHneI2gsB:<XZ:Yb93H@e;#TA;L)]X+
%e(J@JO$I$_*6t@6/[D0/eKrR1Pd\(=msb.@fEm1c3;kEC6[m/rb)K#rdM0e^RaeD^l>RrqbKiY\.UQu1\SN"Q'GN1YccZX?X?'[@
%`AT:TKILBOW)_58)>*jn^(*,b9<#+28t2e5kS3TTd7J/W#$49RIXja$WlqA(Y;Bj])gZ"nVE`%N)-1cT0h5_(\`(JnrWqoa]E?d*
%$%hRlILuF1XimJ3PZJ&@eAAAMK>*_U5\?hU_q-!OMQt5l&UJ@-Xepa^dqI@2D__K#Dp!<],::U%oePZ,XJqk>gVf/4eU4"3E`Lsr
%KPm4'\KX>ahSY=+D]UB'l"rG%(mu[n22KCudfj\!Le8C1@V\6EEql#P.-FL<4>qA?Qda(,o\ma"@PRcH[C<g01nX40dV%ST3REcX
%.m4Pq7^kB*&O]'mcX6c?R#nUdP.D;+AZAZ&"4g3GJLV(mpJnkPA,pd$P!4W&ioJt6;58;/OXFdpUY'V6,Wm*KNoEZkDPsLf'^ZMo
%J^06F9mZ&obI1n5F?GT&kp+Ng)DV]=Q:#s!SON[SG"J3B(cgBTM]<9!Qn8Y=Qd&*PDWGaa*]P7ukRcN]oL\g90'0J868u[V$T[@b
%(ZBbgMb8N=5E^sWE+3'>S>p`%ABo:JTdTYQ[ocUA<hQgYf)Xh^.5e&j7rH\l-Q#0ZA==Z&iAhnWUc"f@@>%AH_Oq:n58I7h-o=hY
%S]_JKMGFq;pab&9PFK5O&S</PpO=#i43^!`URdS0+co_eQ'SJ5ms!1-l;#U4H%2\I=3a2m5P#n^n2!n&3h<A_b>V<>o+9a'_o,WB
%GWOASZ_sTqRl]E2MVH[iMR[lk341d3jgc^V7(=P#n4*oqW.n3$npj^kOK(M*aF,KZ<C&2$l>=[QQF6>6g==[k+N/S_FU-QjY1/ko
%<FZWR;/o'_<L\fWHt,ot?".$X!l`<kET$nLfq39c$M)AO;.nE[*+rC2\+B<64.C_n,QH@UMa&H,n9,&`fce+iB@&;08];l1W+6V^
%8D@g"/i5l),(hMQ9,b%PS[]ClQ?WL&$TcmYki/`t6J7NM]O2?E\;CHQ("lGk(E\(HMJ]R=;njX<L1iV?e/!0P7>'#EcH[;Sn6GX-
%VN"k]kF:2&C;%i?[J1:l5PsPc1;<YiS19:DS)8aodjmE.ZB.Gg]27cUcU*Xs%hK.+7S3,JE[G;"X&q/LhI'F;6qc?=Z\lo=?)1.J
%n,^Utg?/#BM2umA)7ba6VAo)K`fF#mGh5Mtod+\-!O@L:?M&8Ho5YHHA6%A]Ot4kk1)+3&RpZ/859V+V'oQ83S+E2VbB5O;'pP&B
%U`G\e'ciCZ6MIU]rOSl1^4amTinOD[@YXaiF[#KY:.=VLh1rk?U=lW/O.#h&\YNnQ%NFY?2,D&0b0VJ(U&Nj#h.'Gr!%JX0M28lF
%qEF2%><OiY$g`JF,%?fmDpd4,hu7X\-""_S7Pn)5#ZYnj*GRIcPAnqnc]lHBK/K1$XGM[96`@qk+9EP#Nfat&G9*ofY3Eu>_]e1I
%SXA*OC6890m8nd8OA+J%\13au8KLIiMX7LhAueKlL:/7#"'#LoFKJ(6&BaE^LT8!U!u9j\PF@r#DV^M=mtdjg*#^sQ,^LI^E$9;@
%Q)b(T"Sp,E;uMp^Di6EAC/7hGJ7ts";0]9ZNg5rsjLVnYg$2@WPOpKDe>N#VNEg.J3Bf%Fd9G]+KUGKYM3B0L$?W0^P3i.87hIGd
%+;\\f1Xbr5Vs6(e'P"-G+OgbJ<T/Wa]4tl3r@AC8D0cIZ[GmH.fMP:HFDXa+]9'":Jk7.4UdA0feNf"gkHm5ZRO_c&lB4P?8Xk@,
%?;mKU=/*^lr7I@j.JW89qb'o?I_trkq^eNu9"*n3,"tgrLbaf2cuM.Y&H'KVO<Q7ignV80@M,hM%=gcSni?n06;L<se*5KtA!_]Q
%hZc3^:/^9S9?H23b<&Bk;6gf6D^q9#R3N1Jn'Hl;7S*:Lloj1Dk)[La4bSHrC<3>D-RG6)9Z7E9=N5*%/P_g@];%*/=j*]N<<==X
%3qhh**o`=1Hag[%<0m,K!LK`5,H\+<<;s%;9@<f&E:Mi0p<3CYHpLs>YY-0%lDkf]G%PEHkjiP<beB=]^kSOXWjXV^#0!fLbjRhX
%[RUL.6t?>8"+Xg[;%KBN^+!fIkZs0ooTg8::XBXo=GhK=0c3hR`\N"P.'WLd'dLbqaOk+)-V,a.kg4>Pj>4);OTb?*8cRgB64N&E
%QbV<Oa;;3g5hWFpH9MS8,k-5E@bW=FRfOG_e/4#N!X%L38n.Ed#t:)">TB8Ap*p);)Uj7<Mb%-J^G/b#@P4<o7BJ?Z/>c]1D&Ct2
%4cgVFcieL.[AB5+6`IKtU7dt94Mas!Y;E+Lgkpg%%8L^HU2J*L4KH&tGg$KJ/!<bB$jj,JU=9=(+ZHmW86Vb/it-,INLa=F:ZiT0
%VT":S\r)'Jk+2;665Z&6Po[GNr7i\s"7Be"jaJr`VH`.?nGWFtnn6[;?mL2uht:pMU,lBm[lGs3V%*d`<hIn#eWS4#qHg#Jq^4G-
%Y`c>sdZR0eTpMt('3Kr)8B&)QrQe8eib,1]3Jl/=I]gc\?_bdD92.4bMF1D>:=3_,G*In"ba$m5)'tr,oG16NW-[h8"83^ui)I)l
%d#V5t)&5qqWm:sUlq4+q1TZ0Kn%_(W(WUaohr/K/n,J^MqTk^?o\U44;Pai/DDH+rXJQmu(`(X'0SWo]f.Lf3E]U3KSMP:g(Um!+
%(tC^$bF8(^ORL=%E"Ebaj<r8/nXp-M4%;eF#V7[9g8JZ2e%Z(\aopu,`$rkU/K%@:LsGNc;kcrNLDhYS;0MUqM2j_jR:)b<V]ueX
%BLn^*NE)]UcL[l'=J@'`$/e*?"pV%t=Z'(tCY"@*K1\[W5^S7==!EcE.U[A](V$\,=*Mt`$06Kbh.2!nNHqsu7JYIniP4;O)A9"&
%<d7`@(.sgTp0ou>_!A*:%u3,q`ZCV<5eEZ=.YaL5aslua"W/FjQPR@\U!edkV1'(PM+csI1YFrk\TPmK787/eAlSAEcQN]_e(]^>
%cQdpk?7Bj!+@mhfY4S9>eK1hK(eAdH6DX-4$[U)hSB\bGXd@]=`<$0?^)[.',ZH?@]h+BnUj:QkGMeTqP<eO.&BNSKMXO!,LG\hq
%-M9M4T3pkgLIWsr'f1b>>sQFk&iS2&@1H%9FKRuGcND:WB>jAeHYt/NnYrU=%nseqJM+;t(Ru)g*In\#o90gn.i##kG+\uLc9mFg
%d%"k,)af'&hGALe'WR:Je;N2FCdNaM7jZR6I7M'N=at.jIbi'Af3Bm%qFLb!SMCY]!P5sQEVM2$d%WWK=V\W!dMS^BOD`YoN!7p,
%jkAj:]R.SAP]d\W?.9Y"%-tj.H$33D/-g4(#5-2)kt^1.e2&ph`e2,*644"UMgW[NN7%Uj-!M<cbrr-?TsjU"A/heB@V-A9;`6DR
%0PMs\TTBRF,-qVj8g\"8TpNCBbr"3^%$-TB5%SFHk-gh@9'=PSVfc3R22Y6,UiT!u<'m%mlY4iHWFf;t;#p4S`3,9cKmK)&-AnBi
%OglsSDGh$PLql`)3Jdo87XXg&?Z)e$I1FWM5QSVf3hg(NYrkPE?>umET\ek^?!P8bg#"Aj,3ESPO32_=f'*n>>g4G*.]n4]PWDH!
%O7l&A.T7<13c5SL8S\Z(/'?io/p0_RE.^)o+/++YDq*;82l&1*`\#kD.SiOJ5IAp"#Ai'bBI@AK$ph5:"&km=j48JLdpMNUj>XU:
%U?1bV-&+g&n,.ua-chZo;`KprfK`2+o%[tqb>3.7fKp(d^Kd)5cX]Z-D*.nAj_VmeGbd_'_]:d!WN+Z:]BGa7NDt3aF_StA9QDm>
%K/+bg7D.4YlQ2'a(4AO70gkb;O-e>NVdma*!3\$E<je;E50g(<?iG(1+ht^%?TYelX3r3-4K!Nl#A[De>JkQ&P7pM`JB:&V2^^:Y
%EKq5XDHHPW^*mE%0StGFM8=727pX[_Jt(r3c=AVp4QkgI33SMKTYS)oglMumT:RaF\cQCdbSeRkm+(iEXu)hR^b%hV#!)hEpO&SI
%B&lnaWqtj0KYWB<dcPjlG-s#4MIZh./10APBe_[_N[#_DTG4.WDh_iK>-dgW''hsAGbHXC'SAFO&k&Y,PPoO2!l)ES-?2gq)a@,T
%ED3D::m[D]eJX[*0b:5,^rbfe'c2ZSahaj?UiWlh<4:h/=O8bte!!t7e`!#cbl;drDD)"hbhE@Cj-3WXR\%_H:BQEg]"FuEOZ?-(
%HsqQF2eS=!kd"5o.!+,Y6Gj`s!0*OrCA7quW!qP]m[*h8q!BXo1;r/gT;*LnG]VrEKUk)36A2AF4`)B$GrN%g;PZbZf:>H'=X2=r
%-^7(+$Jritk7_2bm>VXCN%*C14P_D,<[,\!7J5+RHg%:V4(khQq+4BUfG+ZqeYq#jes(Q@^9K_TFX/-S=?)nD7>h.2,OmZ7_e[eb
%EV!sQDWfre\'R0Fqc<1)+<,:u3q[*MrF]+0.ANF&J'f+35GY39'Hs1A%*)^b3DROLN9`2)+N*@TcVGSq]T"fdD$BHEI5Gg4`F>\?
%TIaVjl<@*H8Vh81X.\?9IZ]_#oR29c=s'+'-ZZs`G2M6WPIU!"4auG5h;W2FoABLe3u_PRP5g,pGLHZGJSXFMKQq.Wd7j9$]qIn^
%&Qsp3"8+,J5Kh+SYcRSgUs5cUM^kSEGES).@LcQa<CKInh+55(\sJCt&e9sGgrVQ1Q=LgL?DJb`)\W(2&h1Il^KgUl(bqX*@/0#b
%Tg*f>@ej/4IA+cFZ,*2ls7tf(O(EOu@VcOZjC,E#:4VLIUYmiAp>m1J3O0D)X0RZ:&mVooOJGP"ODrLEo4dAr=aY#m]BKNDipB.K
%gs,g7[)md%F/A5:;3TZ+i;(mEJpp\'.$@b]'G8VuQY?h@Ber?jeP\[>?_lZRQE3U$;BAC`;Xjk8E-SF('n,WuAB7%.=j<(TY\0Ep
%%N(9uk(S>P#&nZ^3EJ%<`>af8+BtM2A#2VT'L_#g\SHSD"seQ0Q"\M?/;-a]fuZ5=9NQM-KGqNXkP&F$eK;DM.aEJ[$aPhKEam;Q
%_g=M"fcV'r0E=V%Md*$oE9!(n3P5*1).#M34MS^<./H@&iR"VoiuPd!POY&n@ma/t\L$:7%>P]7U^ZFVe%6/'PPp.+1g3E`<Y<C\
%.@%"N%8$+]g6&,l==ghfK7tJb_E$X<E48`aJ/=;p`c[YLKu'Kk9A>^58lTBKhA,@EFIm<,qBg3%07H'3=lGl0POS."aa*nLn7uBZ
%\/5gg5&[#`,a5e9E:N7'5+u7?:)"(KSF_DCp3H/RrF7Gof7;On^AE^AF>o9jSE5(i^-JtgA'CTf>ERu9I5r9-cCQGOMXhXh/Dt)d
%b`"ZgO#l=?6.UWBl`O;Q-;/r',D7qaiqd3f\`kD,/OFA,omehUBNt;TUj58;(CHs8;rXZ-1j2'$;:\K'Cb#h_iiTQ-h:-]E9SM][
%BG]UNlH9N\IdQsGVjgh<\XiWlhf$:-bt%'I8NU)BZ6Q*0`$^W37cKX/N@R[#lW^Md-S`ng\*kr`*?+6j7*8+`RVo295m6EWHYZ/"
%&YCF/$=,K@#5mX9M3Bo2\0+1P3.W`!*KCGpX%a4sBH'gqKsIM;cA&#u6QlhU1!r22k9e=7e,LhQq-B+P-1.TfW2fS4^Q]aEDODjL
%?$:&>9bC-5j]m*lV[k+B0jtF6n4h!TZHjrObPa]DHRWN6/=W31<fccm1Z'jpX7.(`C2goLd+Vrl0E[M+&9DHOQd@X8inl,/!H"84
%'bXTZ9J_^\;`,6-/?S9;Y0[Dfh]*iDKp7Ed[sQUT9SZNC!j`"d*6deZ-E68qeYf=`H<GMbRZmKfR"Xb/5mXk1WC/a_7$UWU8V='d
%b8$(7::=g;H@W31m`N"'roJT(hLFX:m7RmS(f<M;Wkt?6jVeF;EAq<iUC`)k+mYP"A@a/Airm0\Je@Dt[u6cS%JM#Pg,L7SLF#R+
%nd3*CDlAniV#!l<Fs-o(P])9&')og#,KX[f6YcXUj49(t"22;2;]>"r-m,8QHK$`HDi#E2haaRSC"LAqPV6?B5[<U8F\nh@<[JH;
%UBkM#/[$6+b#NCM=O(^L`eCHi+"=K]g?.(^X"_47YJ<&o'(Y:pI:L^pG-51i=5a%$h(O8cd8I0VYsl'=L*KHZeAE-[)&5NPSE3A>
%XopPuPTpc?CKDs"b2I93SkP0F-0:;28LbggA14TTM`a'oQ<ODG/B]M!NXOO#&9+n)`E8j6<V/k'O'.KpRp^0FCkXTJVQj;-"+>D!
%]ZTl'$RIsnP67t,mj74CDZB>:B-P/2h2N3+[RieO3j(-AFct$I9Us.b3h-(Fl;FehUCDW>&'7V,Gt[Y2n#$'FIPlS,H]EQ][UB(c
%H+9tfCf?cr_nkRW_Bqk0,n`T[YG3SV+Yn+uco[b414;\l]h+T;an8<`m:5D3Uk5hsD5=pFh/O5fl(^jaKrX*VG7.0d_`=]4,h!hL
%7"pDgIAVuAQ4J`!YsKZW1sD1Y9:9O:?<c8DU8km%h(SNOnc"IGFp%YOX3ZKr"'ATW!HLd92TrjmhQd<q,g37@*YiE^5+=pP/_he&
%et_f0P9ePZ-okJthZtPW>d!JmZlZ+$Xue#=h8!_K&Gf/J/RI@QK#*JUR\(ic'3f)?-FCt+0Vog`2:?L]r^hZ`$U98b^#9Bo#UtJ4
%(+B%dV9:H]q;m'/hNJKFb:WLToqH3>,@a"SO1WP>g\sifJ-4*.J1)!Q%F,HJ7g?YKMu+N\;-l\sD%?S#)3/Y>,[d\t%n5u@V]*L8
%;I[TIjmP2R+VFBR%,V'm?'LlBGT=&Yl-;^aI6!"jI$--d^<55:=S<W0D<:uURn$Q`G'ta,gRmnGi8oDshZ(Fl`D?Bq;AT0mLgibm
%QDTEm@-JlZddWjNo$hNVXs+%^:c-?4A>d"$33=gOie`jL_%r"HA1p+0V8=BlTI&uL&AY?_ZY.,j%Q8!`N@a+DfBM$(qc]^8"'PEs
%6a"9EU8D.Bg$=,=S(/)f.,d[uYhEKLQO,7WRtR.*\bRiF!%tcqs'p2Y)1+P_73!^5&*aT+.E`,K5R-<Ynuu%pR?M/Z:DJB4B,p%N
%P;\n9nBRNc<=SY=[n?Ltp0qCe<Z5J</!ht5eDSn?:1=Z\BeIrZlsPYm.i8&HHY`-oACepL@?8U:Qgl]^S^mY\Lpu2ZVR#;`Q%N^3
%%"mc,\\ud;mP/#N<7%6KM*/'jl7*T?5#f<S\:]&-l$6&"#VeO$c=Y!I9cMN)=Qj%'<&(k(GP#amMJ$Xs`aKYu^mG6daI[hQs6&gp
%OY"\XD;24<#D.]AOJu-+Al!W9.=R`!hLCJE(QS*!m)Y'(1He8Y@7WTtJ.8Sh(92d=fJ=->U2hJg0ZHkPjI-cC;Y@jXeM?Dp)<9DT
%98k0GUW?A*aMj)@bb[qQR'Gb?*I3M4%3Q6RDVUl8#lqrC;C7=9!=3SH--i@<Z;b#5nScJU\YU@$*3%LP0<'nC^FN)nr.Lc7jl&pl
%SC^DU9'[UlH;OPXA4!QW+Y#IFiL&40WR/ON1B=IH9WP9ncn[V,%U/sh'&/?]WS4cumuWW*oV^Z*U,@R5;"BG"X33)i\6_\L9Xatn
%J&L82h(`6Wca/cg,t](L<#"qePAcM]?),D@5X*ZjX]!oWq?gaX]?OHbL3#h]Nf]GNr$d>[]+n(u+,c/eK%:p^B\R^'I"nYO2Sr-J
%a5@FJ/o@%?qR$;O`ESJE@_L*+"%T)ffPFU+@"5il%A%fS#i6Q:jSu4!]-b-`MdE^U<"!$<hf[/c.n6$eRh-]8=o'$PE*-s?OQ.8S
%E;gQa6i9IW9&Fi?J[s?'Ys-I0JJk,@Q+;<@JF6(hGDaPA8AL0;_ctD/+=d23+N1`j\]8!]d0f:HENi.pnEl*b,<.?KB]c<lS#$@i
%dumuiEP=6=3I8m7DR<N/4q!>crj\&^NgR(hs-JN$rV[\Ura1/erLZ<oH[K+SDnedO1.t_Bg+0J8Ps!&^JQNkk;4-C>JgbXn]3g#N
%5gYk]=PS\_.@Z$ce$H%3&Z:>Qb^4[6^e[]PI7$E)E,b-O8<'TCkC6JqN)s1/I%5\P9VQPN4s2$f/P#W:+[n`]XW4Bcq9CUTZ&AFP
%%5T9SY$bssCH0(1^aqec(hMMR(\6E;\&,H?XrnjR=elR8iNoaZJ(J!A2f=[k\g%RK9<_5IC$jma%5_X;pNiBDBR(G2b^./g\k1F-
%_spiB8G=U5/LNP`pQdlPcr,n/k^_RMW^,g=a(3@$IQh2NppsfNKK]t7*%M,tC^J8H@T_QF*$BM6JkS%_gZBTOF]OK6*1UK`Yp@RB
%:HhO\F5t(9(W]F/1^TdX^Hqj7JB,)dFA3R:*g;URM@Ckn(+$"/-;-W#YplB`OG1ldR]@?D8?t?Por$c,!gpdQnkIg@./`<AjY90m
%EJ<N9XqRUl$rRn+@0Il]jn5EJ:4D+g@FBZKMnE/iDWYmD/YWTuo3]?!3"N+91U8c@b>a!88Zk8'+>4utSrg*)cGp2A98eF#0%;6#
%Wrtd5:67m0LG"Ft(DB1u/t1<gK$Ba>@YhmS(3+iFi)WK!0*i.f;$I&Gs0%6d7Xq8=X'8IsY#)_;`rV11A/"frQ`Al()C1YdQ8EjY
%nCZm-.d*r+Hp,^<-Qn5BPE-H*9:bHuSTK(<ALT"kTFFG.dc`'IAlrW:=Y4,=W/p5*-7[h><;^WZGq8MgHVbX1]paei*@c+!(-/am
%K0a7B=lhD,J^*ie`hY','E0g]Ff0B")66>`"8dU2?!EQF]3Ipi]:&G`Ai)00RIEiE;:PDkcTgb0cpGM-&e,`T'e,&tN^;=4orf"&
%1_a=c#*h^S$Hg`H0aI_o-.29&*lqiY%/THUrDVA[+?lV.UhH"C:NT`ihRT:8V2]*_LT\ppenN7Jq"lYlT1&t_r<FnoftKnA`'4d,
%-XC/f@uu*6,/'nCN>roP1VU*P'e![kIAg)'Rai>(X$c``j.BtRE1oLlR4E_.J.ErrIPm`K27P>69@W("A^gkEm;KUpi%o1G:?Y+F
%3m8+g9G3bnRXelC;uBT=\7h+d->B66k3mVCpqcE[e*ts:(B=3qAp_$YYmFq&m,\tDa8169jq;iEZMISPg0JeO?&KX>c"^Eo?),'j
%';fOg+t+Qd"O9UN/KaaU1F&[b\Kht>!NI$9)jrHRZqn:<M0Z?`P;LYnrDKPrK8T+1E??h3>Z'9CZJFfjKOloj3+IR,B9TYX=o$NB
%It+&Ps,*)-QA%6$Hu+Di$0u>_"M9f)U3qXfU>12dY=(1=(?Pp#PWV:M>W!WfG(1W`c/#Oek=e@rTInV]4+cbo4!=pLb,_p<#IK?c
%g!%C)=irhYm?h@r"?3=-('VANALIil;XUF5^4UE,]%Zb/Ips0Y.%XZX?iTQgVoe^P=CS:e=l"ohR'CPC<Ka?7n2s_G34n.0]UB^n
%$ebAN=aS=%#qqkc/*q_Oc?ZLoMEj/:HrnH;:So;R.E%aY"'5]].I_CV#1N`Mm=oBN),%F,d+kBKqBeaS/j$dD%@'Q'mt@NlL:XD#
%6CFFC%Y?RnWeEK2b7:7X/Yeg)"hVO=VV.qr0bZ^li0!I'3C4L?:Gi88dUpXQ0W"1i[Bn0GEV:N?b?A*U%W$N@*bP<JE=Mmd[T5"Y
%#kS.JgsXt2;1P("eUjI0Yhmoe/eTH_1<B)kA4o\;kI.3+k%D3O)4*8U,dBWFN^t$"O6ZA*dOo#Up5EZgj7;cW3CnOIas0M;'!b(U
%ibi$9ke?QJQ-r#KXu0#eP'50;g*>&oG=10cCl%2*Y&e#7rV$!K.J[maC'sF)a;Pd2FWR'Fb\p6e/0_/.2noB*3/c>"c8-CD\7CId
%D\@ahF/t+I\W=">V<7\&&94>I6O4cb5jTc1T##UTig%kJe,hS9.UcP<_ICM=gB2i]O9H$QnqsQ6#ZB"mGS9!+2EYVIHHt'TrEAIW
%4T*q-a#Wp5=BY`Io+IJ%.;X4q&fshOVW>m:M^+VuePp4m4TUGU!_jX9L/O(?O7Iu]mPSb!&PHHKPpAYiGoa*>B/;I/,tlZWe,tJb
%RIT*2.2RQ@'&nb#AC^KmDn_d:kl@6JG,\EUVqM>nckW_R.sL^>=24\3GsX^B6N9Q:0ht<W542")gVEm*f5i);BV.Tr27"i-4uk>_
%"an,'0&o#Z^ZTX0NWS6tht2]V%\6`)pBKn3+PJ#W$fE.ZM`T&LH>dJjHL_nYj:3(@dgQ:fJM$?Bp7P-??%Nnc@_O]l2tQr4I?cFI
%@:U6P?/dqiW=0+O^(#9ga@RNj,K0>plZ634S126?)IFLgd:D.NH._6hd$'rYR"c7_mGioh\($6,;P_MYVYU11nitO1q@Cl4KOs>:
%B(lcV6Cf3X2A5O*gAk*P2hc]18@%/Wb+'o<(d+)5gqWVc'H3em@X'm%(j2u?i3t?@@h#I():-F0btOnidR.OLl^jD:EKm$+5][qa
%gUIB>.4QS:qio2];"jJiKA_?FLU%A=LR&6HBite!-\Zri=Wr)Q7$p;[Y6Vrk_0,2*_ItTd7O@JpfX+r[Wb,&S0\\Z(J,([dJma-$
%F+K?bW*L%DZmD?Arr%+2r[W.1')nV1_jZke;Q*Ecfd.E(G`7&$jr7Pfk1tUq(TW'k:jPDS@a5`G.&DAuD/*$a-qo^JZ8AFPJcMW1
%is^!sb)+O"Mt/j["D2^Q@A)hNd5.r;q[5(Ki?ULmM?iD3KUHM>kK$OWL:[rag0=d7c$fc!K5(cX9Z-`dVWY-ip[<Tgah*mt#Y9"?
%-m4M#$mnR0j\:Rt;ELkHA_:,+F#@C+g/DC!_[K-g0)8stK.QLb`2kjEh#cG"r*KI#Ai0^=RuYA'\YK]C$*k"jQOFJO$GsJIIe6MM
%H5Vn+Y3;Eh[?=M_WI,>tn4fqX\:!=_,%H%2h,Mn\Jp8Y^[r*O-i/Lblfr:XY?R-Du/(t&ul2>2X?l>Xi!,+r')j"_i3rm&17EQAa
%7@iE'.=Qc:pqM9)I?+c;"KPj%>=`FLJH<&XF*%MOb%Y%NC7?03AY)T!W2lG&hP#mgFant_o<&-G!S9Qr?eGSmh_Hu^;A.p1:_4mH
%[1^gV`86Fk1cdV[:T4PdUi6NjZ\kGI#udi@i_8cOBCLktQoglP$uW]t^m()D`So&gPfQg%+c5\uEH>`&"q3Bp6:^N.@FaY^P.foD
%dB%IT8n,*9&.dm;"]0W*Xe;p5e(\rEDbj=2rk&mD'fug;ZKaTIqEVEqW]1"/,fP@Uj9[,eI,YjXU0D]1DEN2B6l^=Q&J"JaU%52B
%-7Pc_&>4C3LpKU@Q5M(p1e<Ja7:odU]oF`1VbJZ3eAKOkbZHd)(Ggr>"Ah-/q,#b669A0@OsgMa_20/Ro8qHAq"eX<5L7>V^WPI6
%RKC"M`!X\..1&!7e:^8(b=Hmp.Zi+C0OGS`1(:>EpP\7M,Z>]<HBq&4:nWY%,nZ-!obEG(:A%Ve*tT2VbWJHikQ-2t&m'qK/R9$L
%R1:RfClK8"*.5ap\>r74`1_'L_J&;f7-$8JYlL?_qSm=9V6"QX8@#(L%1A0UKiS4u='(alOAQ!mm]MD'lPGZ)4Za$YP'^d#@1-C:
%9(o]\!#ZL7[<Si;9_/)@eGo1\m!Du:PU"BdXC@$N&-+-"U+Pg9*?upO`AXiD_3Yh%-+hZEp>Dl8L)37&M^^`D9:(j<,-P4NBFEgh
%U=1\n1?nD#_&5&<T?eD%<68gXiLGMNY_M=fKn)EdCNuN\&:"UL"*KGOFZpbR([2Mgh-<o*L?QHE(Q>Ks7</T`&C,#GMiatK]HdP$
%i@g=)kr_Vj;6qU(0;sl=Xs.GbjFr=a/=9`#Wd)SMPP,c)kNb]hIpS'5MEN;D]V)[2e4D4iVZ;4DU([Y@$Z*kI+)Upi\jPo=F9BW(
%<shoWRRa_lmF.r:!,^@@;C++Y,s<E/'dMeA.OM,u[k?j9oktG8DYK^"BYJ:F&3*=q7L66OA'*4X1YRAXDioR:X`joqW:G6<'sP1D
%c<pP>pZMAIldtsu2?+no?ndG;j*bWlmCW=U/1i15=JLEkE-EWe(%DG_>:!Mc8u\mO]"s5A*>GK1PRqA=JkJu-<?`2PESWf$GKd2s
%'qs(DAd0OK\CrB+nk$j^!'VLp%[NJ1p@;$/T04!6/?g>)o(1.nUInF$(:*:t]TtrW^..(q5>TDa?pFYi-[?ql7P,EdJr.aa<IC'6
%Lr9QO;Eei"r_9,E0fCb[Ve4J$s8(j-D:#u6]A@]9)eF5&bqu=_$)Xf"3cVGC)Bs$dOY?;l&uG_\3N,ePF&)#BT!<E(ER5Ok0];%K
%:'.H5;SgO^KSgEM'00tSXKfRYhXI>g&&8&@Gs_N,8,54dfok*UG]flZ2CR[Ff2gBdf<C27hu)B4e.6-<ap&YpE6-"'Uqm`_#&PID
%%2oDQUCf0&<5])uaKHA5JAH;=q!jre6!K39,5)@l_DTS[XB8kd%mo-S6;85ZH%oq<gk@&aH,dC)agUHrm3ZuXEieOR50gt@2eM3e
%A'$$(U'E-rF\$DkB"Dj(`79h9c)0\5Gl:NR#*6%qWW5k,^?iV9E@RI3.WZ!SGqEkP8\$+QG\Un^5a&60BKVe'J`+BDiiH`&-I@V5
%fHjcP<Ocf-4VKL\(t>l\o&UJJ'Y'+U<:c.?/l\5iS)b$W[p@E'!fB"-=aZERrePb@1Rb%+1L=&CLS7[_$mP%)ZjIs4<KeuMgUBEk
%^i?@U)Oe1#odc>]WU<QOP,\\KDp:bcm&9H#bari2DlFXjDX*JnE"'/u<ZGre!>56r47*i0CQE2dP0/,\HA/VY#?BXq8^fiT1RMN'
%IM'Y!1+*b9)sV@=?KQ5l%f%d_.J.l0"M9LiSW'r==:(QgJo$TJp[1Hme&%`d@b'RU._6VU(:3Ki45u<ZV4FqjNTHFU0a@hE44e.p
%#I#)^hbqHjV\t**1B!W:EEDT5-FJ`%f4eBsb<PAG'G]R>Y3,7Cegp<%6P+7@prSLh,$V$[>h8AX8hadL\^qh]"Tn+gMV^W:l=TUh
%I]7RV%9n2beA!YL%`r.-#A!R0n;4J%Cn_C8Nb%JDI()ID=[d7V*egqZ1WZs>-fr1GH&;2%RFJ=Q.B7$-&U\r/1Yr.'o:%1\3VRcU
%V:;=nR:^jVY0]t5K$qV"PK<(ZV3b9C$,Xl.M5HdPY@*ICI)%^eJcqb:Z#]th4]VimNu/g->^7UNX2!7Of/k`_q0%aCa%u!0c*hO4
%kL7L8pjge+@$&+_\nl]r=(?j0;,!]+UAJHSmi\j9EU97:_h2W/#!H"=jN2$[.NOdX.S"ELEQS>.dD<qQC+2m!(9L\4R@2)W+G26o
%"h-<h\M7`&g8e!srVJNkJA;(uqc4I!Iq0tf*&#H2-H:k(TNo?_4.G9k01"54+eh6Wcs%$prfFfTUVmo'jO'imS+9H6*>BG(iJo[T
%_B&MD22U+Imok%!B.qUhMX=E!.AdPhb\B%P4jcW5Sr1q\%X6LqaDV;`gOLOP_33D*]0c1E.&Q&@Ws2<^)<:oBGP#8YW2VBE#d8Qb
%=11Y-1[944d[F'+f9=i-Ia+_K#RO?G@9bYm[H:HVjh1?Fp!`ToMMEW+s!+]47[!KLj#Un3LnSUd:`boJo(9h/r#/QdSYLOrs(&nC
%Z$isi#fb+(<Dbf,MMi_p29G=r'ZC'F99oYlp"3$e0EV:q_Q^-nOE''0aSWTLM#Mu%Zc[9sKX)4;N?Y5jqEqd24oTV9O[Uae687[3
%Ou.dE07k<!ia-WS0u'*]Af$[hFIfDt<H1Vj/F1_I$lC^W;oggY*+9-#U9SPMLjNk`qb<YD.qt4*;O4@0krPN)p:O):QQ3H[:AK7T
%PhVX<E#YM.s!'i]gH9K;a`]eYVEI'fn$].%ppAe1CgiUEUSb(B:5ujuN(E^CKEU%os'h'=]G??V0K+^B,gKEG`sn^jS[8Bll(V-Z
%2%<;kUABbXX6L<ZNOhF`<3YJ%!$71T8-0i(-?f=Km(S/3TF.fF%[K9H9gq>#[@8(G'kL4qT*"OSbZ-/(!*=RNQ8S,XhfmqXlYMYo
%7JC59K(%ZmINFBJM5;b(7gg9SS9GI7GNnN8)X?$:&BU+CdF&u&&Vc5g0e4^^GkaD'a(O3hTLmK*YfndoGa.Ehb##qVZ<4RW;#7(6
%P"r7gFkY$ggYcbh9JuRk+0+6dS@9tQi+[d(;"7ZL;EA<,EULQ?21Wbe*L`%.]E<DG20M`r5\1Ej\RM\#.;iD2#W"/r6h7BH>@Q=l
%I6uh).B2<?U-b6@F)7U$3Gq^tgf)AH3bbqc"OkamT0@3J9Mjm/_rFghMq7=1!P>BdPMlO,q]Beh\JMf<'EL?dOWjPZ)H+c@9tt"m
%cams9(q<e*&PWeo!=Yg)apXQPOOk)W2L?[s"e5)/Jjids*j7j:)<Gn[GLgYbI>,#C)%u%tROl\VW]-/X9m0h>7^g2SX_,OFBnN%]
%6]Z.#6UlC=:C7'LN8]r>dS1P2@*8-f6%an_#&rIQR\nNiUh^*0F78L7G_4QrpUKq7Z%*Be<d$)-.n)3&\_eCSg1\obKmSZZPrB/Z
%OrDTgNgYte9h@5HqEbCpnEJ<^So.e(:0(<ceP^eG9`leh%+Y^0I`X*^bZIXaBCU1Qb,`gP9PHrCSok&F3AW8V<[YEE=3X3orru1b
%;HEue@S9USQV>de\BtN1M]7F<],E>U0ga#\]17=qMHGT='J^raTdVj%N#T=/>@o/V91Fl1UpO8t7ZE@A+j7#nH-4]?h&Y0+L:J7)
%_ql[\(0-E<I^lP6Db:(FX*gnf3`\E0o+8hT<J^[DLHD&Pm2EPADKjJ5aN@$[rN!X4^4A^cbu\]N=a(<2Z(%=eno5ih"ZNY;VtN8^
%6(<nec=OV9>.B@1TsNf$m8ld[(XQHCp@2_ITp(rcrgsg%)TD.&/u@Q";C'R-\ofQ7U-!;TgTC7;7!r2.[p)0kT0=P4Y0M0j=5\p*
%]56Xd6^Z,prc&<Kjj^DaL'WU\;e!!Ipfo:u<G`lc3'$"@*3LN4b(YAgl?d;7HTdo+O.?A!8b0SQKWcBNW,L16OL1FNB\2?i^k"F!
%6[2dq:V1bZD$:0sOqXmN*Cqi$VXTERUKd"__Z1r!5sieIHU"Ei4=ZMf8FI-k:SWGr>?&lOf])0C#M(n+8?jkhO:EI<s)X5OcUE0/
%j2p')EscMIR'^,Z1n\lZr;LfL8/fAfNb=l"56+dS]e[F&V670L5-hU`d+GiarEECk(?q"E9TH6MG/s/b]=`3NZ?Yf/ML`n+3P#b0
%qL6+G)P500q'%)bGN/f72F<P8X8h^o(nYs.&6_gW&r$[8lhHQYo*dI.CZSg>$%0T/mi1>-81',5)=i6Li#Jt(%<jm7TYiB+3,^fF
%d+_Qjd,MRF$TcN9<j1Vh>W`23QJi!d[k..!Cp7J77uEUrmG^3E!7d&!A\i0(c4NkbFL0>KZ6qu%_cQA6;*m8_kL+W[C9XQD7=a)m
%6IIZ-)X*tWau;s`+OUE5%C^_k,Yc0q8"&!1%`.`&^&ZJ&=rh^eRKKo>_V<OSI+jQId7M32oQN(;T:[<2hAuhLgD.+B=C^EoM!j3u
%X;EjreV&\?aEQU"9f/nsXFulY.Z[$L4/qjae0:^2V^,pD.,PGRYbY69$`$6/8b+#TnKh%iUe#iRMm>liL)K=X35\<c9hW(51pkoV
%=jh"Nq(:l'6aE-.[\l:bWk6/i'3:VkH<]8AfQNf_XZ7K-*V`%Z7EZF<m$gf$CogO>B&u7O5MW_7@gV%sRFsT+"=u%qE^=qRNrT'K
%o<V'[cfN)oHaG>CQNK?rKepSWY,A#@K-o9-pb&OVbB1t*'-%I<Pc"n%/++HNb>ZE2N$c$,VlXL!$]-d)S05m!bTq^N^W$3R#H<D3
%7O\Zs]Bn1U6_VV%+n:p\D/;KC,S3PM)qZ#.(k[ue=ZS#-WS?Dg:VZg'H/S_;s/G&Oqjr27Z-52'c8?P:rfA\n1_`02J3AX_H)@;1
%""muIhFPqS@Z1oa0X0s]g`,?E<GJC`VUAY1025I&)&q_9'cs/9&b)XBh!3$^doR&5d5!(#Qe:;hd0!ZUn4:\M2^e#:0dfB%o$8`o
%hr,Nle\d/Lrr,#'^XhNBma'`34N&0rcL>b70p>X9ia]r3HI.FE\YC)_b(%pgM!U9V5+9Qg0pR?KlZqLXQ9>:ZBm>SK?I9Ud1YL6u
%&2RM\a9M(7a@eKg<R8r0AI1"CWTDT,Ok>cNU(tQ6J#fV$8R1b@<pZ_>,"+f(IcQ>QZ,g"]qu(LmIZS+D8)*Z0!8+9e\0JQ<E_N;2
%="$D7_``\n&OBX_L*bNlCT!`G\g#=R.#SEbp:Z+Qo0Gf_hJ,$K^!3$"f?OO$O6BjY[hM<T/Ls17"a$`4FDRqk!e+!Qo![_lZFjSm
%'aUc02QSUgB>/N=U=RUk5Q(J"3e!05ZuX.TpWe;lDh7a1'Cq4bRK=78Jq;/BdisG"l=`-f:F-2#>I#LA;%=rqo\$",S__=/XVS&X
%c(Lcib>]l30CC`Af(,p'lF=3&[bDg$5YjrU/To@[^[&R%F1UW[TYd%A^;>Ous(.g;c@5Guh]HLkcX"Qjo<")M*U:DSUQ$mlTR'.\
%5*T+fh6+dSj$fYn4@uV>0hcMP(?1RCK6kqH=K]+l6u"i\WNmcIVr5(_'X`*S(Tb0H31:PuLb5gj!-C*_Bl2WM>B_[6M:0`5beP_Q
%^dbWMd\[o,%<g<%^PP1B9o7BQ=ik+r'EX9G@WbZ[U?P\DX`h!YgbJoBja(Q<^g%l.bq2c53TnjH*sSC`LmhaBf/q,HZ:2ESoN_S:
%+Gc?p3C0?lk/'^fm:e.9CDNe9>VpH!QH]3jU,PT='(K&f"LG+5,FWLQ3&Ae0;_9qM%f%GdMUI\)gSao0PA[XkEso(Y/U2cBLPZ()
%<7BB_hk4O_]%-d,k`02@VOCs:i`aLmU5pk-(?('e'>CIu0q@aL_,_4T>[$F>P'7M\WSlg=>d%GMLlb,_!Lo3.05Ti?+PW*Rh<PM'
%Y9*43!*m)",JCE#DM0BTUZWTkPLZFJUfMG9h4?]N$^1%a)P;35AD4c`p<*PtXErdPR>]k;cF7@;>nG.$'fMTZjV!%#Od'YPD52lb
%<#mm:d:HQNn`R>?T:\8jZG>Ht.6A_D<k0c0-cD'E%NgXaq1Z_=XQK5B>@^,6X'Wja@*Li$X_;792qjoc(84CcY+ZZ*8e@8Ce:TBq
%ZepY7MmJ\X5$TPIUk:+a>+:+SZUgjQ*Kj8S\94E+DG@\C5.Y$AP;#R0Mi(P.G.K!8,<Mlps4(k3epSd:VS&X7I<)4`MG_B1Qkom[
%e3rc!pU&^U<\/irL#\2!lUMnBDVZf#:Tu<G)h$ia@i6`I1I`@2pItu]Z9.20*f)r^[2;f-1X:V6geb6f9!p?XF:1^B]Gcc]H'"DR
%m.s?!5&[akhWLAlqeO[>g,/4<=28CH*.a]l/;P]OAF0r`;ho[11qVOJ-u`?r]7spd.bqBu\INNgh/]EDPENRIVECT(kPtl#C@,^e
%53oWpJCCREjX+5KI<Er(A;Ec,];p"C_.&KW60*]6B\Wo/n%]T/[q5W"8R2_l(K,Fcd?jat#bUqC.8]8DXlo?(7pe=0((g9'=s\!'
%(%KpBKI,oYpSn!%47.d#Cb]XuWI?q+dU[+(Ek/#0;<497(gEGW)Y]"YY0XH1SA9<c85\;%63i2`JUY0]E(9I`_3_p:Kk1KcUJ]"E
%NV&?=Y*<s[YUB(l;D^AoXST:DT69=I:WchG<(N:W4C>5_4a&Y,-F/u89/KYAMF7lMiPF'E<Z#c<FZ\#lP]_aE)l>rs;b"$6aG4+S
%]l:_ijbaT._RbKR_[X\`rh\*a!+;``\.irM.n"CIV<>X.?08$*"kc<oh5U]JmebDZSJY6g\lL>70ImKg8]1Uh&]n=XaU(p6On)0a
%U[Y_7X-#RkZ,il2A%.TW"_X(<2V?Q9r='ESA7,#sBdl73Y$&V^.D@kW[W"-F-XH+MSIQn*69&Pf6u"_:\o%Kn`QQUZlfC,N']@s<
%#)m/&F19DXqr@=3Vh^Se'X1NFQV'\lW--c9[[8.69@4$)79MnGa[sOi3<Ng#F5,nG$E1mF9p?gTkZcg`s3&,bTEU>9bW%4\W_JC0
%Ye?#"0g%6ggruRUWn%@d?E,;8L5,-`L!F+H!OQrH7)d"MQ1/]mo1gW&8U=^5a@#C)%r:]L[gf_XGumR9Ln^9KkkI$GN%Gs6ir>+t
%:`4UY%h\ab[hVs;OFLR>SLc<,5-h$<g'eM,OaU7fR=u"3<*]Q,YH#:e51LX6h.h./RnQDP:@I6un:K@T:q^oqdKHAZ?Jjg)"o(6!
%<"&h<8OO&_NBZHZTNsWc@5X,GMV>0d[KcK0H,U2LU2k8@XZ&PaIptD+SL)<#N@&i<D5<)f,`CcYK"Kse7;[FF4'O/nfB_s0[uR1U
%GK^_NaaeaNSB@^"3^$(Ie8::mQPMEiRZ9p8<au2Q9P@LA30b4_B/N,tPMB%;4L.(MVdps'2R>'?]VG1U2L(8]H4!)[.RD#\10&W$
%>W.G19F;>7?C)bSe_5H09/<ufg+u^O5:ZkgHMXoa6h\QPO2Z)f!:)>]O_CQ22VI4O:t=I;UGL/&D4PPZM-Ih_l9_8/^NPE#bZroi
%6r8Z35#nJF!XbOR2qn;(lg\\u%V2IhZ4,M>Lf$B*bZoklU+dq*'Wq"h;l4E"'qV#7[ne=&TR\]&=Mc"'WbSXB:+?[:C*kdnqf4(?
%qH9UTlQ/'.d[-nS&0\'0#B\DK(+G"W+hpa6F]B-u?>)8K-UtTD3Z1QEDZL,@?NrG8\uZcXnsj4?CV,FJVGZbDg;;f\"kVt#G+%t@
%d9e)=9%7Hj==e9`AOK"X2Z/EUF-hi4GG$Utc=A(>gO+?OL-MMgrej5-DthlVs/c78RcmD16/4DORCu>eDFc,B;A/-MH*s7V'/G_"
%!ur&-.Nf"'0</Fd:9&ma&ag(bgpm-crcGc3^:,jS[Bs;^:F%;%l]N#:\YF>rOQAICeS?HSbCN']on/d+h<V!,CO]^>kIC[0I*RZf
%qq2M[!IEriKUXum7Z0NA&0iM0[dg+p(jbCOrifT9&N@_/XfLIjj"tl6e60iFfDmLR%aco\%BA414`G!Uqo*?cE8f`Be<f>1eAjhr
%1or?e%j"O;Oq+Nlk"<B)e_h^/+(S#f?G>.Y^+*AJI/)[hch$[Zo^"Pd9/b!*8m3^J*r;$s"adhUNN?m88b,Jikc@mZdr4JG!VRh:
%j)n7SSgNlBb3j#=gO,4/+:/Oq8\:,dN<=IV)D<Ip/:Qg@]"*SK+DV'f-9,@rLY[dUIJd;DV4'7aG%H[(9?o,>pLcns_=b.lrVeo"
%5KH/(TIs6)VMJaZ1<\%'/OAgInj*un<nIuBI#=GK-'_>FB76-;lCof]'!\MEBoGTajOI6!WT*Uba[p*+=6C9Z2"fVh/T$efULZ3`
%F,b>slYOc!,XV^W62P-#l%kb6<(J]Sj\)ml^6@!.r:]d+hk):W#?aYkDS,*,jp=<C/Q2&;-FN(7eU?a7,WIP)=YUM:oHB&@HEI_D
%Tj-K3[OP`OpTh@>T5G$p'6d#u"eY$)ShlN,/!^sUhoc5jBiK<)LXa_-C-0T7.Ps6Ae+2pRO_,IO7N82r'J_2U1'pBMeXug:QbPa\
%aIh<^s5SP#?b1_5c2sh,,K#\3NeHUY74^>+mR7:(qUq]5T("T\3G"s^fLUmFc3"5Fe@#_8@$"YPd1;WO/n2BF3P!=d>@rM^RqsT'
%J;&Mlo(8gZHN(!Q?3=.=e+i=]EduRaY)[XSQXIC;"t&7Z)d\g]2'@5j:/Hpj+r>"WS;#IVVMH&!#hct0`:id]I=M6tmlgh`?n)O?
%St`-7A82u%bb.?_!Ydt]_5bp)TI?GUbF]e=j\IVdCo!X/[a#:Z[7JsTnQE<W)@BUmLAJ3X\@,%upST@,&-%S+nBT27go.##Q'e\=
%_4Ld_Ao*@oUTkHI-AKiJSTb/":,',nX1TreT70E`.P\AtbPQZgQ*n@t1qt5[nP9\-R%rV8b,o##^BBP(IV);1&iTA]%UBKE0YdA\
%9>lb\QV.q)-=p-"GaddhkLok<:PBLYf*p&oZhA\p/DadF'8CkS7Y7mgLM.lWBO/`JDCgfcdqoC8R`.tC5<ZZW"]2QPE3%p.XnH7k
%!7"04m9`*@*O?*[HLpn"`6DDN=Eq;Mp\W4K?dE!cQON\8g`O)*gA]R=OrUfPIA0?T=BjbQhFY\l`Zu8ZZ!89jlc8J.m`W`E)-\8:
%_C)0<hO^V>rH[P?pO;nT\&I(KOd>]<hb-ZI%EjT+_j*+iA,E*c"GB%[lU,!u)@?h]QE+4b7Wu5b#=[%8Pj^;C9EfLfl8LfaOpLP\
%N%(u\pWKU^CDoA;L>K/bqq]RAf"G)G^0`uam*cd,QKbYV?a23NIVig/T/G%M:[>a2#5G:)(mn0BqtI@HmY,$CR`SFQl16aDn'@3s
%I5f+5WPE??a"0,:acqbW-P%lPY%Y=VaWkgGG\Eao]/8%"]ONro?<GhG/@@V9X&<Ea;V\Rf'=="q,)5du6)/<I-*^b06!*t.YK\Vo
%3m)(mbMF#hMui)#*4#ps.>V[d%]<.<-mcYiN)OOX[,.@2Xg)T5[g'GW=:M]Hm1bA&^=F,:^eTMT\VCDG[HCG`4'h:oP\U@gn?hlC
%p]aq`?Q*04`j2&dN0R[`r.M>,[&$P;-&0s3-mCTnrrTJVIt81\^_s4,5>3N\ALY&fG\0mg\/SX&?h[bF;V$PJ]H?k(5bNhjArG6`
%)5\Z;:q_O)BL+F.R6@X8I_L=2r_'kk]Ome7n[ECJQO%Y0:G_-c,Vb1-"f&9&*S@AGFa3Klg"L645mYh^6/m0iFj6moF",Ek_69R5
%]g7h(/"Lejr&+$DksQ:0%*E)*T^'M$;P<tWYKKYC;1K#^AVK:6.[sN8WcU[&q@:3-ihL]_JOt?+d:g6[[m9F!BcBhfr>t.[Qg96o
%075DIh`TQqe8t/(5uT'5r3AkCf+/eG(@G0daG#%'O/0j6aC]@99^ET9fA6pM4C(B1^*KtC(q(MBWnUDjaYG:`pFGSO5,jLeWZt)6
%6AR7&]f*S$.IO.;O#14/We,V(p\"#,!%:?si?^9<I[FXhrN<TeH('FoT'/I[nm(k&IA/O%38L/@M8L#ALE^ODl+>.iodr"uG4Ib:
%7gFq-^u,bgmL1:&d:8b.LR[Ip4\-rb:\-CVpP@YNd>8R%"spZr9g%u0GN]9ie;An"RW8$Zn;Y)3MV4/BXILd\(4LmFEWkEjE,59u
%N96E1EY;aOBb#T;RMuO`Zf?N+1hYmb[fWt;Wb(]WBBmE0=\c)l(ZeWuNj1X9&3_(SG`p.XIO9]B6l@PL0HqX8`[cgQ:8eN#D0YdF
%%^.T<T<]mBn1JFLLHU7=&/A;JUu55H3l-T^?=sfP4D-q]T-m=c)5Er?WeMM'b6Cq2M\s=A>ZA/X(cc@;KCLc-^UBi^>HX3>qb0A$
%(.%fXF2F^jJ:"G<4>\ok8chZZU^eQhXRO!sfL"O.PXW&[.A>kFpeXOa,6(B)\r=Qsd^`^RKj1&Om/g22i5o&%kd&?M`fc`;K](q2
%dN)#>cP-3Z:)M!-1itB$HWsAZM8P,E'eE6`hZYL=/k2TScX=$[mc-G-g8=;u>l2;7OCmOSV2L/%fgs<Ja<:DP-BMT!n04*P=A4rQ
%AsZa^L&rLB^BA?sn3Rge:)m\\-`]tH)>jJrlO_Fd12"d/81"_@]o728L?pYD2D:8lVhbj_T(qT`"*guKGGnLk]^]6LSY[5/)b]CL
%&("u^hJr?+]'jVSIVhlQ5]E%HF*c3DD7;j9n"+.gDFrD.I&KCs#i1X%!s,9*i\jJ_j4\(BhCTH0R3!]m1VV2'!J)rR%?%-9-C7&]
%$o!*UPM,<>)_r\F)$LkTB;-hCf%+VF@XeUHDCP,8(b[BHW#=r[Z4J3)Fed8q+df"P$Te"kYef?Fr9>_Z*h;lWk8Egh+X3G*A'Zea
%a(dU0(PPU([-U;'Ir@Jp><I!6*'i<ql\3=p:nK#L%IK9EUO;#/]TGhV/.#jgj?t`Rh>"ChFbHf!>@'JGFJ"1OZL_g&l6P"eMs#bf
%BB`<mn07i(1o/_$kY,d.lMCtDG[:p*Jj.o;"FTCGN58n;Nq:fSNdub!4*/$>]hOBA4L*-K)"Ud:4mF/'<[/qV.Pi8^-=8)=$=5L\
%](9VaIWn""-0-M<_L_-GZp4Jt1/$X7M^jp+LZ_f8r\0e"gr8FsXKlVIkW8/q#U_\j\m*7?@8E(3=^ao;_EUc3pYF"sd/A'!A(-Vb
%T0CH5WuiP8UktNpf#kk4SstC())"1Z0e%N!)bY6A2O88U17Pb#p+-gt+d1)a!FlNYP3.oi$"+^TScBJ-bOW]PABQT,i0YN\;8F\U
%P$>,)W_-^4(g/t8fdM_..$ieUE0>(!!DpUZiSg.'g)`G=ESJ5kBZ=Yjg$LO&U)7,Em6Iki'`1Of)gk%0@nE9+f^olY_,Gq6`k?;)
%VH`&KZT.1U5dqt1(rU>eV`>q-e&pf8/(_>"@S*s=qUDnj;;]Ofj'>5X\?g#;EmA"la.[(1J0e/J:mDfT>cK`jC]CJpBoRLk^7Kp`
%%56;CaQIKVp!D\t#N+2=TPHu:**62>VPIVf-.:IF#+.0d3TiXq;7#N4@^)bDV%Z;N+j8md).`I:&3a2KVcAbV$r4@?-sJ5IfXm)\
%pCWkD8T\m&]hBp2Sj<6m8iRO@q(?Kh<0#[q7Ee71A)X-=>FU(Cdg_i$gZ'Q,k7j$5FkT6Z%ciC;7*I"^fZg*An8-.A?.M'*3UGq>
%FdQd7S/J+2'iY1(GK]Y8kWVTH5eU<>*OEM\]T-5o2PU[).=@*pPJgMp`_/(GeB`[,G(1?B%J%@]^n[35KF%QO[$rT1:1D6:LNOD@
%._q*9p:m2On!sO.S'_,RA0_NB5K3-Edkf,ljlWWG5$at!PtcB*_1G2J"Dff1*E7DSeN(MrnC!_2KBp=A&S9i.Sr_(":@t7Y%U$Zg
%H3]CfKOiQ,St#d1Y6=$e6_UKY`8FB40jO9ek)!ok,LJL8C\\FbpW@e%^7L!bc2[&ipVq-DB#l;O:=ZF`c\d"6^p(^uc;`+GeZVNY
%.7A2d1X@O-J!'\0fcg*V7;24/jNs.bH5<89GrM#8m_ZM""=a=jRt0\M&HsNmb<JuqU4S&ehOr#p4j$>X;K>p-h?X9h,3`;VU2+`Y
%IG0blmhmBd=$c+[)SYZpr[(83"1\*G)aY3t<(C4*/:-Rt4qP^"ZBOs_:rBLH$Z=?*p]gA'$^te2"cjCXOt>%\LT+iOH:oGDGmk*(
%@m-`8a1>Dji9Bj9G??P)``="%9Njt*>>AM6,\kqZH.51g2Gm;M)*>*#M6R1688=4/)&6Z';E.<PRq#Kj-7k0+PKu<.-TprQT+O+=
%(1E]qB\^o_#ZrdI97ghiMRe;`X$#e'MeAXa9G5n6Bf5n[/"ImB#^cNai]>og&g]0UVfPSegKJ]i(;h8Z`6bO0SMou1F!!*%F%dRI
%XlDSSDhit@9T\^37uBnU<s16<>5#r"-"GU_r=XPFbnZk)6lLr>-e@op:(&'ce%/bB;8t7BVs5ESHt?fWVVP/>@T3RR3iqAZci1=B
%FdrGUrT6pKC7?CjW0&sLX,iDiY:^p<YF-Dq3K?5A@Dd'f7sfHFU"LnO$=`Q,YX]!WW_J`;hK?q[('.`iK9JK8h87:gg5*1#>rROY
%OQ1ltJE^8Jim<H'J6h_dYHF]Fq<69Eb"R$-U:T*iY6Fk=;aX#t-n@L[n6bK\?t_7gDk:.[QMeZ%pRhWgPC*8930=GC9E`ZuQ87kb
%-45EFSYjTcb[KbM;/+V52XZ<7UgtS`\XW5h"Ic+/WP"P`,[OF[_c[mLLMI!fQc)7_0\%GJe4>?lE*(Yt0Ki,n()H1eI<d5ba9504
%"YI`_SI;'=q_-8Jap7*%ps$;DDn0B)4:h^29a,b]NjpNXlV'8nOB<*a7%njH)@KYhrb"bH'p[AHh1lpf]K.0CD.HADV+DPR(;IO$
%P/&VP5a*BnC-H)<'HR8j0&Ui0b?uVqTSmo5]eT"/U"uEY,363;CC/0.`maWUe<4*&cbH]"MRV,rid8'SQ3nOp=2t,S9<N^C\8=)7
%)e+rD9;EKg0;_Dja5G)@?>"Xuf:FB>n*Wt%DH7K$;pF[FZ2@mQs4^F>_Ie$CEXV+>84:FL"Q!,6REcM_.:`PK]"``)H%,;S5t6N+
%q=cdjdIa_/,-C@!K4\/[g8eIUF\?k>,hqGL%hqRq$[.*S"DYN.CS&LP<+eM9'Wp^3ClUh$NH8@^op8>:R4@B[H08!JWEpM>AlS`9
%83I,e/sH8c2opY&M8JNVpEk?m0?i74``jG+71Zl>EF7&/00dn+R[dmN[pSeJ'n&N!RSJ8FZ\u3D[80V_n16HhY3uNTMl`;bCRhjE
%0NZX#M_p1d>V$4*["\qiYgk,V]HY2r;&jq#(<Qh31adNNN>!)Tc_b=K&o6KU>Hl4q;sCXGp-a:\=Y+pj78N>XqW#Cdi998KqY)fO
%^NsqK=oRf6&DLrA:[!u,7SGVCTY3q-Kgo&Q't2##Coa4?D,59Bkn]Ia%75qK!]c.^KfYKCUMKamqWP1#Mh=UIk%cK-^ia*#<m10L
%2IMF<3`d8Q>k]g&2pSR&Q_5`TJhB#ZFSH!=TfKK(Cl0Lk[\kSLj]R?)4aR(OB?+ra])5>@9l_ZQ4=EQZq76;7RB&Jr*$M0l<ef:V
%V"D/X0HFkhVc"L9Oa73'?0Y4p+/urG9f1b^)/Vic8Q(4ug84*[7#:M&pGW(?4WZGpL0/+K4DgF5BKT890YlfE(P!BG2&GaOp8b/?
%Ar0.=i>?"Ycm'JNGugV?-)cmJB`rW'Tk^@-!-H@rE_EO%m1WeEZB!/K4:,>).]e@6&oOFPMUr,l]C'E%$+X@QI`IOi:Teln(-gmG
%`VJUYp(qc=.;QM>-h%Q:(H)m1e>[;GF2&j0JHu"n7[`4J_t>3n$HWL!@VJE=$?A!_XHmU7ch*Q3>PDm"9,b7?csNYY:sIZkP'm!c
%@"TFV?,HEDCE_uf)%[MH:@T&3-\70rA9kX=%Kh2.f<CJ]QOmaZ#(,_)Jr7c2:FN*bOd,EB.099!7TE<6XX2ahZP6`k,_,p<Tg>;o
%^u+q@WPqotqJI,9L]!8nP6@nFRK:J_miQ7E6ii['_[h3"T23(c`-ug[)suf.mXu4UgFf)F-<=OpKtDBkYU%^KAFD'`ArH3u/a5,W
%'#(fXP,c@nqR@lP7";hGEYm)#?C%PmW18V.MV9HNPA5gQJ(q*u+AipC0N`_eZF^*%<gPfIKNccaVN^<tr8OG?*[sp/bE-aflJm3:
%dQM;)pA*.Q#Yhf55Yp/G*Y[kDm0g/R-![+=&(nq4]*V9;J&FOY5b-[V_ZlIHla_eaqpgUj#g1aloNAX:"T.GNU*<@JV.5cc^p8Ej
%EQnr^&up!&f*7S(>p"b3f=%Z1lsI6MC<pN7cu"b^71*<:^oq5%bm$POEOSL,Q`)K$XrBa(=Z11f$u7?RWAGrW2*<gXLT`>I71LKu
%]2lU.MqrS*Q`]8ELP539RaX'V>F\GZL\MlT*D;:JXEr5_11"t4C\)OPP[^2NBs<ls;`\,9p(Iu?Da*8;gD#*3Xg/$>8STC<F>-46
%/pMKMB^?7&oP(cJP-/86,6A+1+Xm4)UF8BG4>GRl]>QdK]2>>/dP?J+*OhXDXiaZ2Pr5McEY-8ldG?PS@&&96V5(h9+7hY3PbsPP
%!ljZiTr#.B:R:*sXYj5/n<F;p$IM<P[bGV\S,F6ehOt9rL/=-cGteo"2.X2_+JS<c/fe6'%!rj)%-W\h&(T"ohSctA.,8b0-"FDg
%Q0-GQRA@CD@_D*/!K/:7i6oGFfR7%oIeTFL(@?HNT$P!5V#)t_NcpOcl[J[0A2bPjl1:9^_Imp'3["5uY+AMB3cp5T>Z"8c5:UoJ
%Z]&@?-r7Zaf:YYP0;!(:F'\('ksNd>H@7g[jkR`D-eUGlF"$D@"#QKjB[=1D>l>p"M<^%*%^*5`,&/n*()Lq'<kA6],LL0QNiR_!
%EAn^EL`=aKe6-i:5=[gYG]^U0MqI$rdT-*eV%D,F3l^^Cnm4Y02QPuV;jm#FXDGd]@KE`u]@Ok$IG2r!d;=E.V_iWb4`.NgIT->`
%G1jgOb)ln4#$45!(D-lW$[R5#/eF/DcEC?@+c@%fSPFpPj7t>8$5f;i*q03;I2mbfDtbI_C1cbK[OLq540.$V?f9]g1Cf:fG;Ie8
%dTbd0<Ee[TWXZEf3@L&:gM0sGLE08\R9/,[.Y6?TXlu*)VmFXE0A$mO,4&uD]7[0U=T_!dc_\Ku<UVmXQU<+`Zd&ffOPn)uE79#R
%6Ze5LrieGUFskDe:gm("5gVhs6#B(3_OVV)dO\j,-h4`'f^)rq/NlZsl^RshnK.5t>(0g5J%F3.VN@uk%<^?_+P"S94=F?rG_`[n
%<9S_9711MjC5YZ$*PiDW=3+2ohSG<Jp^0t+Z7eBO"J&r!1H+\Teg=&ZQ\)1gj0b9UE87R+lWc5KHB--=2jf7cBhJ&Q/^n@HG8A/Q
%f2eoX?^?`Mc2SB2G24Kpcp[u2XH:)=SNq&8;g>r<0$n7e9Z4&#+r=l8U`:)S%Xo\$IR=T?Ot87aCN85)A5Q"t/T`bS)2&E>YYtKJ
%dI8q3h*Sg@bg"`WoKIOZae5s&\G/\-,'cnc0q(R.-MDEHJt;1D6-:HE5-Q*GT8!<]#RP%9P'QM,ajj!_Pb?@WOTSHX$!mKAqi2bA
%<<D+]<(CSAL3M@+s&<et\ZFR)dr<C*hJ/u$0/:n,*XK.O>#<m5o^]5pKp[C\'pl;sMNclBdgCNWh1Q81,g&cOVDn:AesKJEY6han
%)/aGlZI77hdOSiHh1GnX1gaQUK&su;#@05JL:)3RmnmUh7U;tB>;m2da=jGK[#@o"g#e_a)tYM*T@IN#<,.!E,B80HI<5^$/r<lQ
%04FkKFg_lPOQ>"V4eb17*a*A9O@"'9-uC/V]^K5W4X0@d&C%`-ejgK7;8p(I*3JMQdDo_7k7U1$@7R/#lNtUqTddg*=IfEiNV)&n
%ba'Tfa0@a!MM#Y$9@Z$chL9&Fkda^8\J/"WDeWNpI;g^qS1+&jX.sK^rDdbBZpI`SOT0JkW2\O[YL,M[s5?%pp8CCQ8aL3+%sWg]
%+?@eP,6S+fFEME\X6[-m;'qQb)Bd8gmm)qF[^X:[peqZTs.kPr_k=$p-mtAb?*'cU;NG<$V!aR!pnIF\a7LBWeb7q3?umSJ1+gtf
%$#@4XA7@DFrPnKSGmT*j%G'dt=kj-oh^/Q_>T)nnW_Q2)2<8"8ZLf]OK,T>u,M*32;VUr7UXu=nQQN]4W@nbc"#IJu\hBY1BmBZt
%o_^,+:^M-t>?%:qjb4ue9TIc((XW>mA:"ZDnO=7`1&?k)VAVJGHeb2W0_qIM+<c4\d*`N$"$KILSqD<bFU-;5M0DLDRcQ_sIf)1g
%9f2$MLC`aINH;;p[*.!c!gE#L>,XcaTnt#0Gm4EdF[.$\iVe%BIZS+E&D,^;WD]nRiIF9l''8pu8>?fN2UY%&(0:O6Zm[c`V5tGh
%hF+1q`doR3\kO4-FmH$=W=hMGhf:fC*:("rA%^?<lh9'cgHa!-,QS.`Z6\6QOBU[kOmssr/+hGkTjWBZVc'-#UYJmV?-6"cB&W\-
%Zh&f#/:sVI']>H2RCf<hhMQdp`?*":Ge-juLoVdd_t>CfXbJDuqKGR`B8J;k<@!Z!_!4dGDjJD.[$-WZI*u9u3ePjBE^tr0A'<+<
%r/\Z0FE>I57U;mpBW4L4Nr4R;U+oIR06c5uc<Jl'_V[K"_>EiRr)h6Xm+PDBYg0W%[hY<G7_gbk(F#S@J+NgC7gj[UbenbPlZ<<*
%e2`]5Y0dg:=JTUcd3nNQ7Xj)#6pSHO69U!2X9%-Nf#;cB)`/KhRI"l/hg/3?;!tprpSNP=V8l!)B_Q@h.[o$@nb?R<_(>B`8(1_p
%&44(>)B5Mk>=).5o'W2di9ZTo>mgSX1mR8/AZrg'HW?q\PVPrC-<aZ[<$egi2<pYMZ.Y3!DiEo.:n,'s.5%_B4ZgS(1_FE3)a6=d
%po\O2lglL$IXc$$D/!cg:BP!$fUi4%BOdJg[2j4!fu9C;$)g*AF=Kd=,JP4r`tJr3?pk/8+)gfh5T9"WOsEqgEr"@2Rb$hg0LmW'
%TL!Y2$_0IS>;]-d\3YY5@,1p!Yg(s4nAT-G1gPuq0af_8C7rC:okI33?](L8Hf,]"=5*?99]>@c_2K$?/L(]kOTblK<.6.lD&re!
%IK=Z]*@6?o)<2HA('>"Rof6+tm;rjDS`i#!\#+WAe*;>S%7T8mSH)IiM2qI%)f3jI8\I[GZ@N1SLRn[O"'sq8._GWii@<`j2(bkB
%S-,$n_Xu&RKt>G"[RE.2hOM0IjC2f,!=%97%OqX\jTC>a!"[!g^u/1o]^d!e3otO)BSQ<S,TRT>=`XJ$4#mS8le_8;51if1NqNMn
%oG'tG&nI&EFp?4q<Qm(*P6?")PrWGCY7!7UZb8b`3(bjV@(8__FI9Nci4%]R%t[GU\as6`55D(=p:k1?Wgp>';\;HO<WWkNJn6(K
%5u8Q_@3iTf%%0KGJcr:]K#Lph&P,NV<p0SlPn=:!FKSL64Q4hM:M\36T*/FR?a8rQj8d",j'%OEBGY]nK90dLYBU<KY/re!3_J!#
%VtC[;1T91^HZHuYgaeDa>E"*&Z<`0kJAuOsV+r+'+?#FWJRi:D@Y0k/5PG=@kUGfa0_Y6i!=i^"d#'(!<hZ&&0"$40C$pL9/C8%e
%;d%1bkH&&b?;ADbC=96OS=jItUpstPQ:[0-Uld*D6]pn3I3kW*`=DqT=f=q-7"(.1]_B*W-L7`N0Z%r@6&rf@<5[fcjCE37-Z/Ds
%ROu[CM<g>RnHk+6b2AT3NXe`*el8\nHpqb^9>+j#UeFjFC^%p:9Y9(,l"Y8YG-D(mE8LVj&CEr8J^pP@bVjnb5FnK%4t_LWr\gI5
%#.i;j^@3!K],)BZ?/WQFQfjS$.!\9Mo0:,:C&*HIk[h;<-',o&oXilieV:%jaB)3N1?h.>_en3'#XCa7\0G6T?/FWp0igS<\_[%5
%Q0OAo*5Q;&:`r8T#dOFBPb86/Z"K./Q3R5jG7EFE_8'aP!'aT/J_MOK%.o,/I<8oGm54s#1^qiTOS]FZNTB?q9tQggU__3>1/=e^
%'!Y6=CcT%JF^FQg8Lk4m;#?stQDn_;eLFW8B-W]q'.L^KT<FUEZgT<2>Jir38r<`X"sHs`P^K!#S\[tO-BI-"8K>$e-3i7,D\2"g
%=]mT-k!5Vs!tE&^fN-!ZQ&rdTiI,%XM8U`62nUNWMWNps1(H<uYU'94fIcq([gRcs9)\f6S7T71<`^T7(bnJ',M`p=CgiX>0N_:]
%=K`0:gbNRf+j#Z<m'>14"g6A98;^(li6a"rmoSPZ(ZQoS$CU/eK@%3'dqr32<bBc?!5E9r^HF3pBAZLJ7%1SX/5MLGQ!NRTi@i_e
%5U,R_!]hY&^;AE=R'T&[54qur0$Qa*,m_,`@uj7%1i/$o:?n`"$#3MB!TmdD:nfj9G'Mn5W>+o5_3Z5rf$d!M_).=tg"-Bo@emmX
%-26\j*Jt$/h!SKfYL1JeKI7rCY^S(]+??o4GV<2Nf;@@*(Ngss/%,*c6;pokHcJ!En]8FKC2RCaW)HTA]i]r1mo/X3jbuXN!SUEZ
%g6b46LDB[HRgK7YPbUT!NbgP7on;UsUaYpCHn\1"O:!S8J17kVn!4gX7b3C+"[#Ot'[pGr;]N@*P)T0DCg(;'Mm/rSlaRjl^5+1(
%m1guML]I,b_J^m1!JS8I/gbO_i=WGOraH/4WMQh*<O&tY<o+j7mq#H7rEVri(Qd!j^;/$[='S-KG]R(6$$3#uPBFp]<6a4QX!T]6
%V_.?#(1$!3!QjQN/GnN%%oa8$+=?hkF[#\W!g[l7J10':q*HC+l0-!V`FFHFN0(b>A>Y*Fhf/QQ`RqgmJD1*a?bbrc$rAYYe4X(4
%_\.:=\&^Bu7.rui(%[tAFtEO"c/*K;$oEQonP&W>=1U<W3+CD:nnMc>goRsbhAF21^8[EX/7Zu;*SR?g;BkRDh6OhuLi*UHGd+"V
%U%rsJ?AQ=F:\KS_@[nm-*CVj:(G-(p>d0GMXQ9Z5P5A[;HX*1-"dnem9]D?b4G&6O;L]i'ln5G-Am,3l>$%.0G`r1\D(hegR`o/D
%id@2XT5/Dt6e0$tHce:69RCd??E`9792N[C`$V0(I0&m%>[Tlp=:)B'/[/#b'Hq1k]b".^Zm5%VKW5@QJnFS&Bg@TFr\+S,"YSaE
%*=l-c+"L*nNQog-q$Z1l7kmHHj\mc3fsqp)!mTq^*Z#4*mLXLKe:Ng&A=ip6)MlaYo!Z'@1cS)-lThG^h"jDALs+Nh%Ss(*@s&7S
%-)eN"^\c#.V-NH0aiL2h"3=[r1O0mqIP75U>NfK.hS1d*IpKDP%kTF?]Y!(Il-_r(&!4XZc57raV%LH4UBD]j;QtP`_%hrXj1)I6
%c]LE/FNOS$8Mr5!$8\E$*$J>-Qap+Q"'*m;q[V!I,E!$**ha:&&c96.P+E]%SW!IkM3sW:6qM76,<fQ)/lPke0FWLhpgST;L\G`2
%c]>KN9/=0Y[e*A`f:tb78ZpkJEL&aI#_Zp6A_)eeN=lUe&)N7RW$uJdN#/PPLlWt<hdTdmEDV>Sm(mL?(?J0,P[A*X'n('EXP6iu
%60%pO\g9-(>uPcT*Ro(h@P1rD@P2%gHp>l3bSGV-4]sJ)Vb).5`oR&"b=b]Pok;T/VgZ$V^Kk$C;QNjUN!M]\":9Fa@1*6pZ<PrA
%h=l*YC<Bj[B/*&YlkfPU<+YU2*p)s'<[_G:A%YVGgYa<m+iM%o[BNn?UFW]>X:`!][bDNpan!:a]"\4kriRc+g:)3'ptOYZQ@5-R
%pMWaNT8m.N*ThBlg_(<A@rgC=/qY9rMX`T7S43tdOoZ3!6n)\S[nc.qc.,*N0dA4e#<1ZK@c+Rmm1^k)F*HiE@"6L11!96K*Aq"S
%U&'ppcn0UfR1,R$)cHLl-?So:#\hg:1W8(LdaBLcggL%GIq$lKc7_gOF&=<Q.s<JRo;IfAXr[A@qRGTQ$6X]\?_-E*`\+s1Qa;,Y
%RA]W#1XQnQ?,"asZQ[?7[PbI25W]l]F]m3faE!)b]#,Xn>%mD6M*<Ff*E1m2_;*oH:%'$Jh(a'5GN=grI'';-At$"=!'j&i$U%@3
%H;3h=VS/@P\4fa#\]@=Uho6()#(;m<Y%:ZEW;3ec\B/6oPfk[12N+-#.U;md(S55PCE'/YA$kCa<"!`I?-8eP6f]^\gomDr7acD`
%dJU71+D#ptT_/d-5B,C+SqamuWHSmA4Ck%rR49YC[[h(?l#*@"\:3<))1.3`KnZqGr60Mql)e*"N$XG**gc'=DPa4R9TEaoO7D10
%4FIKX\ANC1iHIZfp+q]G`H@j"DDAUP6e(GtNl$V2+q$7Qbnf,q2`Dqd.b[SSH*peE&>Z%.`KJ]^Ms#'rq'?[WoR3d/.]d)]?S)he
%dq;,90GNI-qn:K?TpZRSmeXJ'2sJ-&aU8KHAOHSTeFAM^&_.Z26<?[sRg'fP$o\_Y7Xsmp,^J^#-_\hI?TY@`fL\&RN>Ct+!MK$G
%lCBS.NOLkj&'OQI\'g[',lYKi^e^t+V%1*,/fO>TRp_oRlUu,pcd+F?_Us&:d;&`C3c^uEhlS#+o,0r'Ghg;XR9BjL0.D&]Gc#i.
%OUafeD"5:R/2>ehqaRNi_T+ZhSPjtC42&*Cmsp.fO/3PnF8B?e]"t>J!'+"+>$C$2(PNt#/]f'UQQckpk1js<3W0-k18itoDLahB
%N,in+V/&/pEJdQlLr66=O2?%+YmT)sEQO4tgKa$AjnZ8f#pO4K:C9<1.H812?.Bm;e]\^eRJQ"H'#/ERk>Uc\Cq"<DYo5>I&,:G*
%F:UX@;i.i]fB;-Q`%=:N.!"ci5B@!g*RP?:NoFi0&4IA\SUS=8]cF["b.oXP]3E<`\T'DEY;t+j*@d'(Z_f4Ul\d>PNHj3!PEb&_
%6&;]`0;0cZE[F#=F-0HMH1r+"2aAfha43_#eF:H3Lts>=U)4q*S@+i`l=>4!N:Ifm!^UYcs..>9A\Y,XqR!kK,FbkG18nd2`:td5
%`akP4!&P+-ee;WugRuO.Dq%Jmibq4*I7N1[W+$TA`\fRuJis)Lfe$[kjY\'"nsHH,0dIOhj-Bg/l<%K1>8E!LX%UUa$mJ!X@5B0Z
%TO#HnDI\H?^8C1;j9T"8qX5Y42&f8"c:5N6Eq+\IF&MjJ"=0c\I'O3<Ho@T_4`38T?_8HF#&c@o/!NE6Q'0%3&#U1PA0_q+RJT"#
%jHpp")_MmMCYX'r4tP&nh+XT-7[T,<o94r2!>Co-(.dNq&R8]LOloXD`PG-ZHV>>.oC_r&gl.*YQijK?YV9i&'ue`24T>T(!6+BZ
%S$%AU\,]mU]9>hSTEXZt+_(qkFGaKQYZcF.BeCMUKof,W#NQp(BjJ.LMU1F=+`nmCJC>146tMo>GH;bTQ'ZR!YMp.^<ALA\pLMG_
%`SPt:aR(,`iQVLOkOfir/i>sBg4\#c):GijkQaL]^Q%Ad;PO)n5+d!O;#kZJ7+0N4c/WQRjr8r1ChLbBkW4TB#Jfk,[6!tEl/O6h
%4*k4_F(R38Bo1hkR7b\MYX'p/Z3<7O*cIKF-nMY;Jf)QB.=9A3a-%+eZ'6D7:mi?[7h6eR;0a,mbI]5s6mnu!it:6%G?$-:K-=;#
%-VnR>g--_T4lVd22f_E_AsaDA^i8P(56j\:GCcm(!<V+`Zjk2hI*Rdf5i*"CEDB#e?buN[DRaa:;BL6jRErI&'XCK1f.(8%E2Fi6
%T?[+!0c!>a"LF+'lRG80%1\l$kr)\liFQ8[o%leb''W]JmMKr+SNDh/=o?<[Y<:a*&\1uS:``+CXsqe%+K+iP!,Ye+mOY_nX1;Y?
%Y;alq+A0ZbO+JVlFI;4Xm>Z*8b3Z]B9$h:gqqc>n>HkWZ^t+_.M`-T,mPl[p0"8:M2AG/sID%+'A[ubfqk=^cd^TYJ>ap/?Ad+c;
%oEZ>$3ndBQo4b[3[=a!VJ^U@i.DkW."-\=K'L/Y*(PksKIO3%Q.%t2Q@hpE3NOk>8i>CJ%W76Fc.F=?aQk[K9mAcaVWYSP7E\8#l
%'PTX<-D[q<^*7D#mrX\4rDeF#jSKBsc0)\?<P,QMmrPj'\_:S08Jrm*T3C]!P"#^UC2=El-qYJ4Vf[TQ0O&Pp\Dd`98@36tXGA>D
%1T..FXk6)K.Ro\%mXUE-PgNe)!_&eQpZo6_;fDru70'$>BUeHV/Q'$M@XLsA6g&nK=io0^fCkt4ae`T6SL&u5MB#?.po=1Q0hhN]
%(Ib"jq;5j5OqeL8T)Y*AQQ(O/AVcEMgp_B#WN3Mrpk8K4nYq(EZ-sq2DUBqH([N+)dPRYadfiF+.nF-=mHnm3rX,I;mlV<2j7@PU
%(h:2PM\1P%ZB:$>Qd6:(o>rQa?JS$2'dn7;aF;-u]1T[(\*aH)$/LiI1mNcpDO5U#&el@7YBFhtq)ilc=MCrN-9P+k1P&o)kTd`X
%2`+S3rE2s`r!pp;.rLYF1%TAdhS1d"57!V0V0,!['N3"LIF=ni3:@@G=]HqcD`LQ+SL?o-THqQf6["0-;UXl;J/@ToP5;hrm3EZG
%bt?McCZGX)$H5;*rR;hj1j=@J'T%7@Gge*qH4VL.6/[Fhj0G*I2aEtdf1#FZ)](NMr%!ePR"b9Qbg$a)Ya"@HG=_--(AF^4aeP5`
%%!eDe#siS>>'abaF>PD&?j:nFb,se6L2>!7ODcKLYaZ'P!t?Z;(P=1]\B_U.i40]NaUgR^O<o0I\#5W#6s;ilY4"CQM@QJ.XSW2N
%<3_p5@:c_Rbr&F5<!?=Jqt1rA5>TN7ZD`ugB6@LMg&OY1XfRj#Yp9A$h8ciuN3P]J<GHK%C9/c;YYB'1=W)fA=I9]cD,poF0jqpf
%K9"t$\GEA<=)*<EiB1eahf#a[;bLtWkP/68Y[r6b.uqY_[Mr6VR"VpZ0P%Yq;K\q?02?F+bn$$-rf,%qmh\4H_C6eb+&J0dGTdDH
%s)HJSURSIB3?BtO9!-OGJ=QN9fp/=j.&_^15&od_b?Rn]b?#3d/>W=c_,\\1W$.U:J:_L3'rZWt.8SL$Ha"lQ\F.Ueg^NQDOO:oK
%'V$6]0XO90XW(%YG>pM5cF+3FJ\@_u)bL)hojOupX6Q%I^n^1+^4CI1/osXN<qfKrp5lmX?ak=_iu:FJImgMD,1;+-6Occ+Ap4Lk
%d\0I%VB4=OP9\=d>E=m("M0@&h*i(F?*BK$OgHI6!p@m0&j"!Sa`F)(7-OFK;m;"'%2J]LC/DaNEti&55"gABe:f)E^j9Dr=ppc%
%>mC\o9f0`QQ)S#8#GrW.M+IfeJGEFiBRr79UA^8Z9#,Mt_1rrJ98EX$g0NQ8ap4Z6NG,VO4.Q"2nec;1[i^DEnm>X&UarnoQ#!s>
%^Ec!KeE"bUY?[:85Rm6(dmXeE["&kgHu2(EG#B^<'-m]HM,6UC@m5j[eE^.c#],,eZX-85!YDjn0@f+tRWj^oi$<poWnUU(EZW=K
%d,\rf2om-S0BR3MJ/0urmP['fW+Q1(Bte]8V]=.7e?NYS%\eA[1@tQ`3%;;!8@g'4/"6_K1`98Y].969MV_sX!F?brTH"A$7)`&\
%^nP&/4JGa^6Ep'kHV3:9(L"%8H0r#%o*\c1]k_>"c`#F8KQW.3bWlsAI!IpONp>&-n0PFe@JBjWW3LHK<cS_$_)Zco*?;O076>qp
%%[kfU6N^26r)2rk4Ws=[i>]`m2(Z8en8BGeJtu/@mtD5O8e<*\9IEcs$W^s5U08Zp/fc\WYLr&Qc4>:gRm*SipIUpA3`*,&!XDmt
%jAcdj2^=n]9#R0V0A&978JEQ)^g1seme":'o/k=Slhf8H<7ef0WY&lYZ\%m>(n=+^T%-Deg:GT4dtQ8t<q5QcJNit&!Yq)tN*G(\
%G9Yi,f=>hNW1L>?p6NF\AZ6u;"s`<cjrF?N^1CXDk#Oi)+Fl4\oE^"Adn>ZW2W)O5b<8XW''iHr'00-R&n*NC9+3FYVGodVqW>W#
%Frr\r:unGm4bPFfM;!80?*q-^3.p'p/]F9!+JjVBV[7q7:u724A<]uS&JVs>!-.mM;%jeMM-&AOS$WM]kJV3jTL"Vh<HaRp9(6E:
%BI@Jme*rC$=6Qu/Wf<?2]lg8;6\:E(Z>RK=ke7JiHY_c6m&9e*$![H8]=X5,cmp1[J:l\5)8q#E(PeG827IL)8:C$=e!;0L;n*TL
%G_=j[SO'5FkrPk_f_M/6nj+A,aUiY'C/r[A"lZT]?FO#p3!&l1T+"8BlGQSmhnJ-42JU(^'>E.,NV%3=p1'_r\GK)FpNa&5]T9t2
%EtMcp5rEYDEN'opE'QuE?VJV`MTM*B=J2/8NI.Z(I"=KWStc%,ShC24J-r[pgd/DU''".O!dLqNTV"KE#`XA+:9^_Bjc/JiC5Qq%
%h'(FU.[ZQnThg=o70*U^G982%]mb>r[2U2ER&,\,_V;MaDZP5W+,]NKQJ]-oKBr\cYhVk5Na5*l@,;I]G]8b-s!LPLh'uj'?Qkiu
%?Q@FFYKA/[`c^Wp.Q-rcdDK'>7"Z-4^B[F\D1=LaEJ(mMK*qf$fq`l#kk>Ep<jh&0iu3@>D0>E;2<.4OG,c@15`TYc'"=1.T7A$m
%P7WtiW94Hi@IJLQO7Q["&;8br%\SYI&jN0G'u2/9^B0$A=&e_k+JfSW67?NQ"B[g6MQNPo0f$21!=1U=$@`8\()pJb@E1B1`@K=Y
%$F8j"QDgqd,.(c848ZUcO$-M&T]u?.q/A7O[T.s`"G3W+g7q=4\$">SWi;7#:Tqtqa_oIf!#F(aS,us)DNoY\W<<jmk6pq(pQT,l
%TB.PiN"@Dt\P+=d#pWO$&jr\#7tVnm`4=[0g"+,Q90c@$+VNpS%j=q+V?n3g"Y9#ZZ.3j05K!+,0#_u?%Wq\bFQ5s\ciheV8mfQ(
%V2e@^ZL10nSaO3Vn-CBZJ$kj0X^d'a44U[f9AgD.aF9oQEf16Wdli`,8N]i09To(<K:JB3<2Y$`pJ<E7rR7SNGt/NlQQmu&:&!E0
%de!Mbbih(iR`NK.J%\%<I7mRkRuB6rQCMo]:>Tp5)a+':mAe_WG9g=s'XrBh9Eb.XeNTEjG"bj=ENT9gXHKb>7tl)as1BNicG7.m
%IN]C$$jRBi)pPT4Q&I6oGTa7neZ%o<5a-#Np&RmTBjO70P0n3!]l>sNh,h"`HbW!K/U`Nu3-iQdD2hDdLG/e!Y_U[cXLsHfo3fbj
%GbOr;5eCI9g8,jW9@5sJ!O.@l.o>em%&1K>]S7B[&*rhbTG,&'$3Isu`4'tPjpp!W;P^Vi$XFmO3FQ#_5S:MnG);!^]W.Lheb6ju
%c2R@rBi1h)?bUq?E2Ncl;]RlP!>1FZH:)j6k&pk80I4'A-d4Sha<eB+i=knn;"iR,X58`H6kt-b_)EO!&f.1LMd6ohj`)@@$@ou8
%4!WtTq@o8&ktU9=V)`34*2Ld">0`XcWJ\V-fS/\3,md@q+b'W&k`N7&U`2[_KRP_f0&^%Q!81&%2ip5h$R\aQ^d.?fGS\crH<c2F
%;)8j2"Vd)^Y"LI8jKpOtLnIBKfT:'>ETp0>UQ9Kcrf+JaZ&$mLi,Kf9O!2X<"]0$Hj=S.%.TC$7?i,83W$CpiD_NPC\I2NLf0u#C
%?N:jbEmLG7hldOT*UJtbq.IVM.14YWI6a]<J%1m-J>P*t4Wk+W5XD1Yq/V*!<4]gG8$P]qaVG1`nKfX6pj*k8T4d?->$_R2]sla<
%:*\>V(d@c(To?Te%HKi]q8+!t(4!+pG9`G.K"#"c@+D9,0G;m@,NT15X!J_*mD1Jf'BQWOi"fLA25@M%hM25%Zhk1mPDre.]TNZB
%-Pj7O<Xdj^ogA(@KNj8?7<Ma;oP"rp^G.`5f('/he"cJ/S[s4l(e2+7pU58G(e1f?#tBk(#<k+Qk'=S0J&K=>@RNHoLsZ;HL7`^:
%bEn"!gbY7h>'^%_(T&u@_'33X?`NuuE;!h)k'HKB/U4nd*tXApDOWr9A_4cM]TTTCTSB(7_>?0gk*(]G]HAa?3U!Gl%.Ydc:>g1?
%i/Lr`F-U1L42D-*&Z@!UgZ>,B0;/*n#@lu_j_<@AZ#"]LACp=CG(S[oQ>Z>MC]V1[TP%Q?9nOrFe`*3jf)J2r75s?uK0Gi=FfSWC
%#BWmD?D65DUe[k%*A%t^D4KO7Qq8=`"Z94V7@=_$WPa\co;LWVO?'/=_1I.)3W%-R<2bhg6T8Bln-4RN8h`?Fk6NrR;P[ErbFBZ?
%@1&8Ldq7dCe6qKU'pNNoGbVAhaaUoj(!iXF_COTQJkg0C.^JUb%IT;*1($1Qj?)l:!PZs?=d!EF"aX9r?&7P:0Fc/j6_Wp[60eCU
%G^)7PL/=qc/_HQ)cG,Ti1G^dtFL,cI;e$TiM42i5@%9i"_-P6L'oc(p/d_2iIffmJ4O7Z7s0f#s,n=amV"D]Q)NbDjSF/t5f0.[3
%X@k]g+]57USjo7G6nqJXgN3*0qQTa:R:m]sF`7O<;D,;`6?#M!]f$Aj6o[\TkouY.a^ft"JN$R7!pGr4,&T&9=4<[Nil/^Zd*&+V
%P,WhnQV3NCa4kUIo^\f_7u9Ds'_S"u\_el*g5O.4rM-B-oFVf!.Fe!ZX[]6Tkk-I-P3=E-]dJ&bq(`cM;<,ag8$]$iO\8a6gLeNC
%(9A[UXYDOVUk>+6f,h7higI!5]X_\o%(13^A_6"Z&$H[VlG)X*,kl4U*UnZ.?ZC9AB`s5V*bs?@(.A;8FtI:3nh-DA+M<AdjV^0N
%O`aZ$SOXr^rD@HtV5XS9(==2t!`OS>hFufHN"oirRqk0$$.NX$:7Bcs&IFS[&N6m^Oi3aUneKYu)CXG<,oi&N8n4UL9a7*0[^/:7
%m+!gd-u/r'*>1aH5ZgpM+8#r&Y0T3U3*t4+QoZ)Wi?Y+XHo35IQ'b-a>c.HkWo2ChGUt]]3(7qoJ<K&?`jVA@P;EXc[UtboDi3LU
%$'W2%^02;13FfR4pp2H/Gs1NtI_37GQ#cNaH*ELWmY_de!QHFrjJ^!upd*?c8J&:B$rRh#jA><8Q,XP0Y)4@M,$7Z)VT?tFCXo't
%XZKWF?i:JqR_!o(Sl55'-QfT%QE#R2[US@4"5:uh%P[1J^B99TrJD+_*X9rOeDU/9(@^6&<d9XsnS3H'ImqiVPU?$Fc"'\uV=-+6
%jeK(s1Le&6&@ko\ns1/3g3MES5"1d.g?<"'.@r2sIWHJg$%5"4Jh$GPP=3+O5)a2uPse6P>D]hW0qBDZ.DSMfD7=2C]$j_O)!qa&
%2ggkf6T1j1$1:5)?p,c_cqHJe(d1[hak$GlZ]`0l=GQN);91XCR_S-=7j=t[pF\uA5R&D:kuM`bK5&/maJHL!JGmqg=dlP,7F0*:
%_^`"XF+WF9^<2_SkI?"G?'qTM(GG)7eFd:9NXY47DWUGTjn4BJg>j&&8N$B%7YZ/tgW=E8V;L6SSe"fe\&Ei(??2!-8WocoaXh_.
%[qd8@&aM]f;a)+,jEm6?W/t3_[RqB\mdq#[Rkk4e(s^3KRl22X--O2U<Xuh"<qhWIVKL?lV1*+!KhO>F&!<WX^7Q[2cOhijpJZ,A
%Ve:cd%n0;)pIP(Y%0_m/-j6>!H#C9m=S;-t'U['H\[M@Hipn(caT)/;I^*M1Q.k+0<8gma!fg<ajG_hrg*D5#-"-Bm?taeV;jFli
%ISS>S."5@VNG=X8dm?*]@:,'Z,.K1er@1sa@rB;>DoTO+mSPr`'F-WkFPoL90K=3jFQIjT,SB)I++2<QTi*$kpDmY`K(\j4ec+GZ
%VF/9ek]hK9$=r3TB3.sKTg,o&Y.HidUq_Lg;Aa:f67',FKu>%[1S(LU]8H_h^?.M&=s@MYFhIM*M&nRT=kFX".ebL1?S,EoB_P@/
%9kQoA1f?\!JssR'+H=kn/T7(K/!>hM9!2B7bMT!?MtI:"WRGZGo1k8'E*pV[nIC`Qe<qQb8p5+!+V;EPi5.Q>c,9E;k3!PegctEb
%rH@`8o\n&0![p%_dHldf<0_s'7ju@)-EnjNrpCt6An@10V"d60GjLAt+qh"oDDuIG.^FN)FUeSQ1S"I,!n+=5)_i=8@,u8pJU/H[
%:/.2q6CL?!S\Y6$@-@j*<J+jP1DP_(#O*'$&Cn3l+5\2rkQ[phIp.Q<NotNK_QJKJ`6,Pndn]6D'>%*a>RJ.M^N3AR"dIB,ZmF`C
%GE8b-_G_QuI=Tg&-"1cG`C8rXo&*Tus8KY\5KnR#F>hb]VCTH7T41En[Id%_LG6rOaq!X3Q\+Y#[a[/:OORbG0+c]Q)\<<OeT1?^
%fqBc^[LNI5H_QtTA,KID99[jL=rcd"l:<:1$nkeX*/_d9WOcX;S3rO*DpV2@;:Bl&m4&n.)FR!5Z8Y?A-i5iY"qk<lp=h'jK-YUF
%;('JhQ&QZgcrQ;[lFu^`l0$im1$o4@Ooo$`g03[<]P:3BHgp?dGlPbjr>;#>"*NJl!]CiA`'5u8%[!)h;R\^Gbsk1al2_L$Sp5$p
%209:#6):MMHjhGXZt[kmDZo6Wb,r8hg`L=rjXCO%BHfi`%[&$En//#,D/uKHC020jZcsj%\XMFB#CS+`0p!17.S&o5*2s.3;AVM5
%f$b.ZJ"D]C@jT5*FtHd>,&[hoYI1O/Z=*^*_j?H*mLL+A:8@o@NJrc,\D=),`0Y+.08ZnHn.1pmIjc/(pYi;R*>aGLN\L%HY!*eX
%82s*HQ8J2B;4nGk2d0FC6\[]pkY)j8[\Q&e!lmnElo9=BC&SnG(EfSN^\dtT3e!0EKKPK)PH7(pWT5Wqi=O,I$OU5E$rZA4,Ola>
%*IJ+[?"pI.6t")O;L\%8Mi5I/3K*D/m^?A.2*)It)&/AJk9>?DMeQ;tT*]Db3U5tki5Z@g'2T40HKNB%@)e<:*^HFm&+1E&MemrB
%,jL<M8:>j]g$d7nnRo&cpIV@0bPMHf;,f#1WKflFOH](l.^<0BC*bFXY?El4eUORJ.qrk^i8ntaci3u&4,p,%:Y@piGim`4PW7-m
%o+4BE<S&NF!6VV#k9K,X>rM4U-Y:&YZ#tf<%c]>0]PaBhq]4AtG??>s":\-kpt*;)24YtgI377sJ%B#ZR\J%q*LT>7QCm+1>JRC\
%.4.JC9M;LjT2EKfHhLgHVf!="Ga!0>SWt3SGF)&Tq2q_pSbI.rlg4I2KADtaT_>l-"g/^1CDdWN6Nu09i`$W7-0=hKT[gYu;5Ci8
%lA\#GgSIThDaB8PIdmrU@T;<("]D(=e'SRmDa-'X)\XjC[/6lBkZs]?A,i8Z8@YC/,ILuaaW"h[4C']Z5&8B7<Js!0aS,+3V_4ol
%[i2t7*h/HcZNl*oaQJ-'R-UpeMW]tGW(ptY+%?P!ADVR(2A]Ou^f?tTjf^76J^h7q`?J/#PV?Oq#>oU&IT+.(\SNZhSa1oT7ElAP
%S^n(=pgKd])E@;SiAN1"mchhe(.><n^'X$Jo\gFqh)t'M%+g&Br*hV[193aW&slR_K5G8;1OP+ZlIrkJP``"kZb<7U6G08h\#1>D
%Vl\9q<gBCFdTgH845745V\i2Fh(F%Wj@\T5nR)O-aE_q5am%VkTq5ScVNbI3)@o\Zd)mI]+mSFZH3IE@`c@t7obaKt(Qr+fo<1/M
%JM-78$&TI`+/*ejA_G"0Yg>?7f+jocI%'M&3%EbNjWAWc6T=Q);ZA.]d>F<Y@=aQ,HKd6*X7B/mh#=m4=@qeI4Nuj_2s0k<N(STo
%%O$b"c0^lemDq=R*.6SaGsNr!Ar[A=&UT6@qAc1Jrh"!">[&FLner!V\^]G<!nWRYqI4:#nt\!)B.7&f=Uc,(E[CEJ_72s%4m%#n
%hIOM;1:*)2;eZ3pea'eZY_+Dg8A2Z*RkNM)QbP%tqW1+)eh>b<-J#(H!q9j9](pC)&h.3@TB>P>GrgGRrLj-c3",hnle0Ae])/X)
%F.R7^MM4."ou&BN-G=n64L8701j*m7_Ct^UHL3F.jn!mb39!4h\uC2/Y&thaI]`#Oi"25lT#iA%Q'\b\j+9P/rTk0RnjMAqRqYIM
%Q]hF(efJ3%1d\p=KZ"]p!#!'ZL">B/TLTqP?J^l?H,(cC2IMuBAMiX6mhTcGT24;?o8N[J>N.SojM0PAs!c[&E(e^IW@(e;X6"/q
%o9+2mF$(h6IhlTIQ7=NpS^4/)0E)gX<;5pD&fD:*+eP38@@b))em.*iO;p18V27F-,G!$s5)6RM\oj.J.2aVt5Dp%3&:8#n&4JY\
%0SE&t*:mBWBq6?1/XJT#[Q<)&PISd%dC[H1-Qe-F.6m#:QL&I6kH#0GGo-q^nu<Hj<e'5$KWrYG-*)nq`f$h-$<H@A%-s1KItQ&+
%%;>^)4(/NkEe&$ug>$4N?58`"CThT1^#H""^+PF0FiN@(=/NUgI^!6@7U^HbYWFHq"6HQ'jo*/)*@Q+!Mr1eKJ%)`3J$<37Fi>o!
%kh-jSZ?.$$U\;:^'I#<e[AX52Pq#*3S[7`kqI@Ig[#)(b)CI'rIo%ep-qPlTS0u+%6%*O\;Sno`N6X<si'ubTPAFE<1`cM79dk#t
%TElC6%1C7)g`;I0?.2(X!?CRD#A8l3AKr*PX&Zr\<8YRZ!B^D_q2NMk`ImIe/FI^g5CuZ#+=MtpBURQ>[j@-/LI]DTGmk$1fsYd`
%9]6E)6*24l0_7^mA26i`EsCTBWt[4>K-ZR3+Q?#@D0MlWDpdi$P[q)Mlk@`4Ls]jsLJ$d&$l>0?K?4A'=A/FcJ[ptoiSuTeoTPoN
%2[@pKZT-RPFp/aiQTLiSSYlJ0*M*L!4H1"3.2=u*:g@"0.PQfIHCZJh#,A-^N09atn\_e%!C2B3>jXe!?H#K?n&;L:5miFuZ$#j3
%caA-sl&X<+GX>gJrqVPGngh&-gfXAi&-U:&!.<uE/I9sb[W3Mp:Zp(Vbl,CfRlIS.33I\JEJ;R\\W^A4&uikqBQHZ-QUk<SShAL*
%[o$FQ8[q;HgX-kb!rdN#0;;u/U2F;_7C=QP?s&><E]X_4)Z%?4Pr`MjKW3`c^b8*+,+aYmnELE+A04Sf)PijH!%2"S1<adBY[1*s
%roSOD,eq8B.VtU#0iCcrCJJtTs(6336t[c*8j=+F@QW:Tr:?^:>b"NnKoTj:/2qK>2W9*3aP^Cm!K3kMj_q(=2TQas8=/_qLbl?>
%@h*[_0cDP*$JbF`0YMQFo5"3P/@*s99=#=H($He(f9NtRcVGOfj,tPM;7+8)16@7A@(1IpG>CY_8;#Z&r@BPm)XANFO6m;`R.k.A
%H'[Fj`4o/6,+"Wa9u18Dc$0Iel"s!W2%(N0[i/D[mg\i9[$`p5W)MOS)n(E><pDcV/3[cNE3/%j:jcZtE1X_Y_g[(7`]jE05:F:g
%N;8MV><P,48fCekfT*RSPYeYA=Qp38-49B[dc41Iod(&"TroAa'N\*f;#kY('EMZh?o:ohTU#p#"`T/:Xp72e\0ZAj[7==sjBAs$
%cW=tnZTuL0jBtM?/.2?LP=:#:V<s>O[Q[^Ll1qCo2D3V316F6O]u"L2*:*1QHY`-T0TECT5UMIDMQ?fsRa(n35V]2a+hLCi4cr*C
%$Ze=]^,0?UQkrJ6nkFe:-#P5G9Kot)Xr!1YqW3'0,b.IL-Oi$ceh*$,(cKFtq0ZGepMVVOO1\]C.9NXo6nl$WUFhWf1H(+Q8'^Ql
%C`P402R(]QLqph#)Nt2DX_n5#1qn@ESV*6o\+.KQAX2'6*KHG>e#;$U+cDR*4/K13I,ARO_ODs*XMqb>"E(!>J,*9m2:!h-gGg.g
%[Y6GO(8?p[/^!^n<<qMBDk)5H')QYI!%/Mq@BD_`ZfIZlChofXTGC5WOk=!aiE/ripW'&g/92-\`<k8bVY`e%K[#!!&3WL@[fi.f
%iaA&tNNZGXh)Eqa2BYNa0o/(;=5(C-<(cT7*mKK3A,lSocD=%:lSub.!W!>?iNe=3IOo>'"q1oJ)t6<IK,>,4"!hH>[LE+]h_-0L
%eOWV%+t76Y")mD(Rd+,?R2Hk[O_bWI!$DH`3tOK-#W*F3baknlW5^-E/!<m1bQ2@7ru?H(3Z?XnbArD4fI.Y,F:IVm`k[i\Tj0mW
%TUV7<kgAYLJ'K&u]!RRG;Ll9H$Y>2?C:lm&7rhe:hA,bmpiF!"TY1(8^m1qarV.SGqiBCQV89,X++CIq9(I`<LR_-;l!AW3E//i+
%mJc]%H5JUu/R9T$Y%n5VJVe,G@Q,Y69hb,2Vr2:!_F%,%X%i7b>f:EVH->?.;T"*6@MA7sGi2uF)4Wln>:tGjbnBjXMl(`_)Mq2o
%"ESuNS48aeb4g-d]Cn9p'h$4#B#YWd@@WIXNC%j,,*=P43^W?kG.$GB`O+9X64JWs'Qn/]I@a9n6Ws%"*eU#."jd6k>o]5V(rAto
%Cnu!B:h`Qll6RH-oZD'u5Us7n!?\[6bmVZl)3QA-1F;@@7q@\p;OYml<SAla(PMi3&Ci=ZUa3.IM7$I5<L`NmoWou,l[:hsRdNWq
%KPfH`mZqC"l@2#)J5$bFP_Vn5#:R4Iacs[o%#TsbfYC'NA2VCH5c1k_cE-NKM)Yspl;$,*iufiELDO"K7lLs=&"J%Cp%.X=1sVWD
%@"",'VLMIjZB?Yng-V24s)2_>FMLL_i*%G\=Y)FS96!U(3$m2OX!:EV)Zh]k!Euk/q!+X%/>_Q(#Jq"(apdU/C(GafC*1Fe^l0`i
%o=nt8F#>h`BTNkd456%GFn._']"QJT^JHF^16NqC"s8<Ak21m&OJ&aDYZYKh#&*5PS4t*&->fYC*cdt==e<7F(L.8aS3B=!Zss+o
%\d]a3I3r=V,Im><l=d<>l-iP[=uko7S&#^`/Y'#I+5AE+mgfqtIiaWegD<?BcWilik.EV$hoIlM?@>baVNn;'M#Q,:[%S8:iV,60
%3NTeB_kti1!6:ClMtJrhQci60f\uAkhK-T&BHS<#Oe%d:d,nGkV-Hsu$ZW>=Q:sA]$T6K=-gTK$SDt($#lTOBR]f>XMi[qPaZ$g%
%fOKGc>95`Ph26/9`_rZ65d<V?hJasm(UDW&+ZIr*D\ReG/*+7?X_gM3,jh`sd1\I\G9;ja8(e2f#HqS2d<JY^o2&3&r/7V"B2):9
%G!T#4ONA]6,Z>em.uMc5qOS6$j%/bi,KXM&XO/h4S#[Y7d;o:QI%sJ9Ca:dcQr<_.j!?Vt%5?VqU\f%`$dWp2Bn7O&bs(odhn8aZ
%Y;^'CWF/`mPf_6%hA;QI8[A(OSjbuZU8>[9)(/.:s3M6i>lH2Sr)*5iWk2jpU-LU6>.3%<\_G%I>Qhjkr2J-8XbdZKW$"-)>JG9m
%^2Tf_MLX00b*O`bYn^Xg)-W+F@J_r-%+lgb+PV_QVNZ)EBN,KY<:/r0>N*Zh3k?`db2Q9#?PoT@-9<VY*R-NA=TEHs4:\o'7`)lL
%Ir.G,&7Lk([`)r@8]ss"7_bV(ees,k3-+W=`g!V5m=WE+-$GJj^p?cq(Mn9Zb3UYI)U"f_KY9'e^..]$AH2q<R8Ab18^D#21q:lW
%DdSm>2kLNSs7sj?aaJ?(f;9bk/UAN6^Be4NYZ?lp8#UAXcVp"rU?]DINPj>oT^2RQZ69;hrq-CH\Io+*,6AiiW-0ff,E5D;S,IQ"
%1h`I-3n1=d0$kO52]%o&1["PgQ1LB9!!cor10";XI^Z$uTn$Ou>E:)JP'!c:hL-]=-+k5,$4tA)[i2KW.4ZUUH-I&1fX;o;@Cc"b
%pDqk,\j"Kro0O+De?8PZ6#)<nFY-E^c5>>OI3H+:`la6`ena>\74qO=GY>a*ZN9LggP9kBdA?M0s#!h/TB+5n9/9L<(onLN0D:6&
%VFmV8`fRcX,CY#BjB!3U[j\+@A*_AHBpfHoP$GLc\%38<VF3,$/$'#O<1P*Q^;fV+^3BI^=R&]8].Zu;I[V.LkYal9)^;l6N)@9#
%#+7E'=B*A'ZEhCR$8Gc-1ju+2jOuOJ2Z<CnW5I@`=>d87\-We\!arr^AB_&[T&kd8e7+l;^7hUjbOl+n$U%W8hT'OHNEuh]9^NJ2
%<?sOGG33'IQ(S<>1eSbXOq>`j0g3PeItm#@_"n%$CQHae<tpa1Zj#;D:>,SdU@2Sb,#p(="N)3R=8Hed:&\s#kP97'cHt!5k8pY5
%=Vlp[6Jr?*1-/tfndjpHc]LqO0ahcs4X6FId]CN#h)9dI1ZFg01#aqIg!aU<c)6#F`Hf%Sm#7bd?$!?Z96`1(A>4D-##U+\(\GOY
%7=404[_Q^@Nuh?gJ8i$0AF\np)n?/ZEns'F>oR.^R`I:!!U:'B++*9T<O+nIco*t+J>"O9T#`i8X%3Mk>U$IW8bOr\d4;iBSOLn1
%339-$9%4AHSNB%dc&:2Gp.D&"DZr)1I&Xa/6MKtHgmoV!.1HdC`C<=B-qC->POiN*''sM*\YBqg5a8[<d!7fL&7?uX#a/_i->rql
%8t^uq_brf&T\Aod5kCfJ5QF"7EdAo62U.Ft6O?=?Jh;(+R#ujh9]3fISlM2!#UaJ]#,eGW>+HXU+EJ_eHtMl,;'2DdH:CGJAb%oo
%44Rj,?Q4YCAKl^<m+''#+,/SQ']UJdSUfjT[Foe`ib>f'WZD&`>3[s7pf'jU=$^V\Q2;mDBr\%C;qXreAs[2u1pj6E=AKH?kd@Q?
%6p7[H#DTg53bk@Oa3e?7l:.u.M[kAYC.(WLM4g_*WNHl8I&uSn2;<"]Zd!FpA!aA8b:VtP6IJt0lZ`TVprPHBU4c6uat0"rYI+I=
%m\$drZPGFS*\h"o@P_P;cpcA\J7R\\NH!h,_CT<KI#b%NN,O8RXgfZPR4`TcpE0OSOL!6>N,L8pUlOXNU@o^8,F#Td3d+bIIG4A=
%%8WbRA=N(q*%H4S)R'aMkI%H<"@f;sA75i>E%s`HZ!*jX4aLcfTIm]@p'gn2&f(dS:<!-2.]rd[@X'kL8lmSaFa]K>IjtCcN@h3a
%^WC_*YYeC(1&<8nDV72,11OdS@XclKJKj[9-,Ir=rj1Te^:>N+\bAC@g(^&S$dk7bi$DlRCTP,dad_F@X?1-_ad*h`;LWkr,D&?d
%+\Oc73%Ar0n=d5onqYg/kLVZp7-[+d3i^,>DI9K.qiWZr4feEhKV9sT7s"9*Q]W;K[oM>Tb+-Ma/0AQ>'j1a\J5oZn)RgO,?sNfV
%b#o1EO?S[LJ\7-<%9<6tNZaZ-?5fq_11W\o]N^Mc%ph9a#u`7igG5"TB5/S\GYTF%Q'pVA2#M;ebN8krhrLcU:@XC<2EdnIML;.f
%LTaAQ1qWT)Jl<#lZAt2/\4J9-U0ksGO_r4H9-D^U?C\3o*PUSSU%ZOu(;VlQQpc:>,+mMj1fiX7@I;Y4<*:q9Q87-g)1&Ec8S3[]
%)pk]Mq(A,1J`?3IbKa1DOq'=KoPA_r,d6QSe2N=2<npGe];e0_ptDP.%R"@_,]CiC*n$0M+kuOJ*V?Q3&EMioE`hQO=RI8^l<ZjF
%Ge/Q4/T?*sDALMLJ')qDU]MJI$,U4U?9m*WgJ$crISse;?I@\Nn_l"[nD^"`)HG,Kl734-pgNi#E,?Z2:/:HVBftRAG-$phkmurO
%/oh"cn,hD'JXD&7d74lBC)<*+GH@[4@s8qDiT8?U:uH,LVO\*<Z'oh:P1NB>fR7n\@BjG.W"<NqFogdYkctAU,-7&'MhE4Y*I,#6
%Ar]1);U8OfgVV51l.N4u_6q'.>jO&OW<uKrd+EK[+p8sf;=^Jg9N7W]OgL`rEAl/0'VtpXH)IE.XS_m(WfcG==-dTo,-@AAHEf!&
%.URR#=75F#Z8e<)]ZST[]%3\n'8sgL-(:RTVmgA1[7DR=qjhmi2?2nD^"1/uW3s%N*LK5@]'"T'7pI(=aRDQ50ErLbETD;M/L@:+
%9o<=-XEjpp/?$l=j2R7?K&Lr]FG(mEbtO@/mG*P&=IM`k5Mr!qiO1XK[I=ZT0o1lZ5qClr1VkCuhf?@2Qm`@1;A_tSOJlns:;D3j
%+^(VZME>rHOD8da;,2!PirF\dittscA`6ls9ePeJ82V#<3FT<7]OZK'\ts3;.FQ5KkD;^4XVT;h1D<RLP,_GFR\A?ERP<>>Q[!O`
%I3j.;2M1M5nkDOeP<aKmL9bJ-!Ceea)>/A0cR@ugBQ(AMX3I%2E4MVPbK5ooGKK,.,$R]uP??)h0%8Tt-+_\>h\JQ.`j$,HJfIh\
%Fg$RF8m&Ee!"T-_^&V[?eINFm8:O!8N4>4+]mP_fV"#>ONGs0E7/e:K2+Upd_jp5bf#dHKdp"pMD%Fa"2VnhU=.Q8XSRT>M&f7-T
%)$"Ro[YYbt0kDG!&O5Ttbl$j0d75Sg5OF]0o?+(V<TYju30]!.jdS[2l4GVFlGHq#M?8iA/Bt^5\(irT:6bDQN@a@qWWmaP95DOP
%2eajA#.rIR#r6Za_$cLETPqs:g*m_aKotVM(u*2U_"r%1dcL=Q!:6qB7HD$\!D=&_cA1U@r<3^diKG5bs*LLTr/<E4Jq3aF3PQ>k
%\]t>()k&)(WRi=2E'7/^K7j#8)0e;<k"(WS>aa]0/P4&:hdsG4i+or.h:gJC$mP@`oQn5[jUcRqh+G$81Q[NZ2B0'G[7X\P>70/K
%N">(X&@N68F!Y]3+>f5Qo(4m-l!$meYTtra`o6:mj7CH^L&A<W<LnN/<PG_A1>"ntA'c4U*E]gposX2lWuQCGh$_iV2^2:dXINo=
%#t'JU0R`3-P\0K(Vlr0TJ@s!TH.R:c.jf5EjCS1bqHu=$JU;F1-(UW4?NQ_ZbZg*H4PISt<Y%e#ktVIl6W=mI4)O3:4WK0b09"1h
%19h,=[\t`4JM$YW7-Dh(/'r(,lUr"P],.692&rX<)MCdH>N7j@-$in!V@Rd[d2>nA@JpsUZ;[4>Ze=.$1naJpFU-7)[EF)RZcora
%>$MiK#J@IN$niQ]LhPaYSh*B(Y6m%`qN@\TCpBO?(_ZPoIQ.aS?PoB\A7biI7s%&?d'o#Sd_>)gaC#a>a*6@=%ag)nFZe[A2(X;R
%eTp$08\3a+EoEDl>*gSqF.qiYkK6a::o'F9j):c:9#1q:j"][=9qb0ehSrhMjp[C(6-?BH]Z,=lKD06\MXq=n*>3*6oNKod:>Eh;
%Q=D"s_qQ!IkEEOTr8\pqT>)@6d#[$*;0<DW!'&_B5:EVcB2]G<Y.#QcYAu5re?IS\/8\S(;[\mqg*JjF>>P]R-m6=K:\'-<MkWcK
%XMT(\R]rltL($)u'EEfGAoadcrf0Xj&5r?Qh'b*DYCM.t5mgXa<S%9_YK4r;Jqb1?1UWl9Z'DiCc#$FK&`\\&c*W(,d-Ek=UDe.>
%=;B1Be`h5"rCgDTWP#Fl7*q?rW15j:p2JCC>3J0>m=WN+XdL7gq-<e/7T:pN?@gnp*K4KK0!pU'3&K=HDA0J[6Y7h_4$Z#"j5<j%
%+[AXW#HqOeRlSBOkQS.tQ;ArtfFT$M';6eO6>1J$TG>NVl<0QESWm(Hjk4eh35pPbK4kEYap:aH%9gS'E=f9=T.6!9$G,tf=ktkS
%]H30N5UImA::.#&XN2;>[-"<l'97sF#j(0&Dhe4KSg-OGGQlX3A\o3T0!:(e\Zr.h=ZhKFe+7=@;?l-qlg&OsIiIT^[Xa:IhQbb]
%A_rs[d#q>V$>.,G_%n0V3nH:@(@t@^C3Pn-gpq<s/7%/%+TV-T2q2O()jHOg>"W5b$>.*_UDVu!M"2<\hbg28EpU&Sh*?`A?L:@:
%Jm,B0N\3')fn3JT/K,*_1692D*:/u2c\)!2*G@At7!1-HoVq)@/f+(qcDd&aZ)$IaF8&K=R^E@PJp"Pq(A+"jV0]Wcn6h,[lZ,>b
%Q44]4@p`(F`a:P+;+5>iZ^=rNC9.WV`#7.!3QD7=N+DA3K"fhsT8T8V'1o1l(EV]Qgk+np@1h$Qb_Ah;nE!4],BnJU:@k3<qGn:7
%-'@N+6kGhP2.8MjBK8pS[_4\/<\<LUg3+joI2f7:qLi%_YmYa%Y(1Gg/p/9N$Sud-N3n1C:q)8eY[QMe*I:!^77PG:.?>F]T\Gt>
%U6jI\p\/Y%^Ehs`DgO0*YB;^bKP'fua\7Wces+r^kKMUrQPY0'.d'OV1<J+,X=t'9L.nES]`;/]+*k8I[[po'966jO]LJJ?@<E0A
%-nRhBKUo:*=tMM81qe]P&5rMK%;/g]243n$#N_.jQTN#kK^75JB>osSgtt/S>.EtV8hYE(`I;J3#KKE4Mb08B(#MY;3U\r17PD79
%0-'9saOt'[_5H.6L-bH%;]r/nKin5#*S,eOgQ/5p[B:b\?8]n&['i504:Hj"Dafu"="k&;Ol@_Y]&LU.aAH2NBs'fDL;E@+CWam:
%V@V[=@n`6C$AQA(hc'+=hX:l*lZi.?"%ebe1;Rpl(:5Z9eP_LaZk41#?,B"s0FXh,fW343m;S,PVq4*f.k(Y>T\&,[OIaW`0k_r_
%B1Jf6`g`B8;<Y-.0mq/rE.a\b)@;1.YXUW-:Z6Wl\Kpd';n]0:"_bP82g*5<[QQdDU=ZuHE#d+a6l-.Wlm-R>I\MYb3(&GCE"G`Z
%&)NCOMIa#_m#QD*iLh2s-?M7[W3m[_K%Bd\IdFV`_b^S8QZ.A6g=r]>#4U2b)C?8-iVINrm,V]+LDgnicC>o8!DB=2k.i0m&nY(u
%*5ZEPZHN+c8qeAHY)pY?74LQO(6Nf_3J:2=K-#2nS4>!q[<.Xco/O4L,Tc6u6IndjBI`LYNec=4K<R_,c29sRdo#sTL0j7^_R86;
%?sqmrPBCpTe6R%oF&fci\#mae@"dmr=?i&8bQH/b?rSP3DjCuQbb#.B7K)a6:,fHV+UF;\"H7,Z_S6\7_%f/9fTHmO"-%,]KMurZ
%UjoT1#>QD3/#*Y(:Tbhq>o+h=?h"M'-An5563Ism=s5Q1mnTc9];qfCd`](G5U.eu/][.F5qj-.1frq1mlS?N9KPI/3T]lPA2e!0
%)D%?<bXjbA"nh+P.tV0uVmGtu<t^("[@\mQ1\K`KK#."AUMuA""B/$/%\n.(7ep]MrROW8QP2.AF\(VqUa9)f^38)#YeZ_Kg#4k!
%Y^.].`]M"Epm)O-YDs_BoO,+8>M+O7d%(\fduMe';-_P?6`>I@9CN>/oYT9:N#fW>HJ=4g=m%75OW9Z0AP0.<4b]M'47oR[9s92\
%le2HJ#*aTW1JnkYHA"E"7W?S)=\Cq%l*XQM_mqb"!LH31H8J!mFZ!%9mabN/l"TT?6Bn*SO6:aac=VZZ2$B94F3Q?TFe373S155"
%C']Q'jb:P^C"8QD@SW=f%K"K[ehZi$mBQ?(/ngR/P#sWoBcFOQ#PGV5LEUmI^!K+nldUfX'FYMQIgfBe@F4(VQ0k_>7G[.PWbT!V
%a<;Dml)4f#Q`O1WC"W\J4R<\J+I5.f6E#/\p63O^-on'rTBi%VY\Z<&"P6'c@j-g6X2,;r:Cei9PAgqZFH?,;'+dK%K`AZh%%<T%
%<F2`jYRDpX3-?io4?o?846nXOD2V06Ot"[`\-`$l/;""<WQ4VklN->*"1PM.PorHS0)L;DUSPdG7]47C=%ubhAo\su3[sPdVr"Wk
%ZNHBIf,`$MH0ABWdH%&000mF,oWPici5%*p"tTkU8KJ2b%Y0"1#/b15<7e;nS?7VXKY)D8,jo5a)rDK;!4mKNVI]Bdmu`[=[E"8'
%E0<&):/f81(,"bhqWX,AL#;i@0HCi4Qm6Rmrkf?j]$cauX:PWV$(r6W>K%*3TL5HT[=(Qm2u62l76MKC[kE]dB2Z%rd'!%bOnF,n
%Ab)G^VLg[c*/T1_V_DCSLcr<Z/B8t)pD$(n8-YtUO%>["eTb1l:Yq@@0E:q!UO01C=L`D\qB5tN5eglj6'r2(j'7+>;l+i4/\1/+
%eqR3"NK?tjBYuRg1Z&HEb&JM__:odGjtiE+J9M\tSm5OWmFFOY/+0D2Af6kiK3Sh+6KF@--kC[3I).n3m:7&)@,)IHV01sC_Q&ee
%.\)W1TUP^fgi;J%V\lKq:N^q+QR.MT0Y14+f)a+-"suYgI,rb6$;ik2g4g*3BYh2q43J0jSG]c:Nl'Ne7cuRq=O=m'%H>pgno4[(
%@XIko'*a$1V44XbCglS&-rmuK-6n%?**Nn=r)us_-AZQeq)>AU=*2FSTGYnO8o#Bs42kSs,HBH8H;G#rYsomW4Dt(.C/:ga!'/pc
%#4&][b>N7?!;="?qc?,9SfSBZgD>V-P;<X(s6l#JW%CDBSgXtgaP`<.OhF)"A.Ioe1cjOOP7br]oq4!$\E7S=;pKtQ-o\XMJXT91
%O]FLn;ZQ!D]b[janoFRD:/^]=VH]'7=c^[q+:E&E7TI%h/"CYLj&r;Kp),$D*KDe!>f>Z.Qn&:!aR(,[IoKro^/F7BSCpQ_5dX(T
%,1@jS`oDfchY$6BD+en>_4B(fnp."<UN_X:7EFc:-o"bPE\<2H&RA&]B$G"C8$=;dTK]&H;^D\t5rA5XY&U4fOLT6S7"b!S284X:
%5,3!^bJHJ+S;WGCM9(D/MO].^U2t"m3/''Lgd&LQC2Zja"f7-6"u4]-:FZ)lR8n-!A.;&_"_f5e@?H9Js(BcA#A4!A^HB,-oSh@[
%e:j^(;D?LI^@jO$V.\_DQ!ged#mGlE6t&Ipb3TJQLWr)_,Z"7Y%m(SON@$^[`$1OJ,&<1<Aq@MB-G_qGn:uKUBJ+PEpT]26!+434
%:+ngKL!:;?Mea:JJNIA:j!8=t2,\`9oTk->T&H'5I=k"+aiA^Z?be8)!:&rCdP1)810RW/gHq@BKkpiPL?SuHVL]>Ds#T*UiiFQ3
%ZVCCmOF#n:X!bNihc]uL2DFB;+;RtR]?<OC6N4@sLuBERp5b7efhcHK?K<eM"]_DVZY1\YiiRo-d1]aOCOZ@$,#V4H/h[>sX<R\A
%_-JhIA\]&4lfTRqZ!aad:*UH4Y@Wcb?I^Yteei7T/^Lg\L4KZ`X@q^uj]JohD@#]&ZZS\`MB/PS>*7`i`Z-t!i4YdpQ_Y@Vr0kuj
%%7t+,c-a4dYh"TEqr8nof+'t>J$%Jh?f1bL2h->US%niurpRVtmQ]QUonRbK5<iKc^A+%u^4,fphgb<+hn8jcf>%1YLTc1,mcge@
%^>lE1qsWj#HM[L8G<c#On%O;GoYZ1Xmf.OK5J$fG0>@5+5QBcIJ+`j&)=)5~>
%AI9_PrivateDataEnd
